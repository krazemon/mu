 102 run: assume-console {"\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {down-arrow: ()}
9992 load: after rewriting: press {down-arrow: ()}
9999 mem: storing 'press' event starting at 1312
9999 mem: storing console in 1316
9999 mem: storing console data in 1318
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1316
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1319
9999 mem: storing 14 in location 1320
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 77 -> 78
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1316 in location 1323
9999 mem: incrementing refcount of 1316: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1324
9999 mem: incrementing refcount of 1147: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1325
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1326
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1322 is 1008
9999 mem: location 1325 is 1
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1163
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1164
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1165
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1163 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 1
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 0
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1163 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1323 is 1316
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1287
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1316 in location 1290
9999 mem: incrementing refcount of 1316: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1290 is 1316
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1310
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9998 run: address to copy is 1317
9998 run: its type is "number"
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1291
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1310
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9998 run: address to copy is 1318
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1318 is 1310
9999 mem: storing 1310 in location 1292
9999 mem: incrementing refcount of 1310: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1292 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 1 in location 1293
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1291 is 0
9999 mem: location 1293 is 1
9999 mem: storing 0 in location 1294
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1294 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1292 is 1310
9999 mem: skipping refcount at 1310
9998 run: base address is 1311
9999 mem: location 1291 is 0
9998 run: address to copy is 1312
9998 run: its type is event
9999 mem: location 1312 is 1
9999 mem: location 1313 is 65516
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1 in location 1296
9999 mem: storing 65516 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1291 is 0
9999 mem: storing 1 in location 1291
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9999 mem: location 1317 is 0
9999 mem: location 1318 is 1310
9999 mem: location 1291 is 1
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9998 run: address to copy to is 1317
9999 mem: storing 1 in location 1317
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1296 is 1
9999 mem: location 1297 is 65516
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1290 is 1316
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1316
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1327
9999 mem: storing 65516 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: decrementing refcount of 1316: 2 -> 1
9999 mem: storing 1316 in location 1323
9999 mem: incrementing refcount of 1316: 1 -> 2
9999 mem: storing 1 in location 1331
9999 mem: storing 0 in location 1332
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65516
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1333
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1322 is 1008
9999 mem: location 1324 is 1147
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65516
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1335
9999 mem: storing 85 in location 1336
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1339
9999 mem: incrementing refcount of 1147: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1340
9999 mem: storing 65516 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1344
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1339 is 1147
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1194
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1194 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1195
 106 run: return {width: "number"}
9999 mem: location 1195 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1345
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1194
9999 mem: incrementing refcount of 1008: 81 -> 82
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1194 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1195
 106 run: return {height: "number"}
9999 mem: location 1195 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1346
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1347
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1348
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1349
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1350
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1351
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1155
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1352
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1351 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1353
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1340 is 1
9999 mem: location 1341 is 65516
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: storing 0 in location 1354
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1340 is 1
9999 mem: location 1341 is 65516
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: storing 1341 in location 1408
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1408 is 1341
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1408 is 1341
9999 mem: location 1341 is 65516
9999 mem: storing 0 in location 1371
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1408 is 1341
9999 mem: location 1341 is 65516
9999 mem: storing 0 in location 1387
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1408 is 1341
9999 mem: location 1341 is 65516
9999 mem: storing 0 in location 1394
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-to-next-line-with-down-arrow
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1408 is 1341
9999 mem: location 1341 is 65516
9999 mem: storing 0 in location 1395
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1408 is 1341
9999 mem: location 1341 is 65516
9999 mem: storing 1 in location 1409
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1374
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1375
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1376
9999 mem: incrementing refcount of 1166: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-next-line {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1339 is 1147
9999 mem: location 1346 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1262
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1265
9999 mem: incrementing refcount of 1147: 8 -> 9
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1266
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1267
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1268
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1269
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1270
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1265 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1271
 106 run: {last-line: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1266 is 5
9999 mem: storing 4 in location 1272
 106 run: {already-at-bottom?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {last-line: "number"}
9999 mem: location 1267 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1272 is 4
9999 mem: storing 0 in location 1273
 106 run: jump-if {already-at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1271 is 9
9999 mem: location 1270 is 0
9999 mem: storing 9 in location 1274
 106 run: {next-line: ("address" "shared" "duplex-list" "character")} <- before-start-of-next-line {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {max: "number"}
9999 mem: location 1269 is 1151
9999 mem: location 1151 is 1166
9999 mem: location 1274 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1170
 107 run: {original: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1173
9999 mem: incrementing refcount of 1166: 11 -> 12
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1174
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1175
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1173 is 1166
9999 mem: storing 1166 in location 1176
9999 mem: incrementing refcount of 1166: 12 -> 13
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1176 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1187
9999 mem: location 1169 is 0
9999 mem: location 1176 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1167
9998 run: its type is "character"
9999 mem: location 1167 is 167
9999 mem: storing 167 in location 1177
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1177 is 167
9999 mem: storing 0 in location 1178
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jumping to instruction 11
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1176 is 1166
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1175 is 0
9999 mem: location 1174 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1176 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1187
9999 mem: location 1169 is 0
9999 mem: location 1176 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1167
9998 run: its type is "character"
9999 mem: location 1167 is 167
9999 mem: storing 167 in location 1177
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1177 is 167
9999 mem: storing 0 in location 1178
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1176 is 1166
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1194
9999 mem: incrementing refcount of 1166: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1166
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1187
9999 mem: location 1169 is 0
9999 mem: location 1194 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1187
9999 mem: storing 1187 in location 1195
9999 mem: incrementing refcount of 1187: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1187
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1187
9999 mem: decrementing refcount of 1166: 14 -> 13
9999 mem: storing 1187 in location 1176
9999 mem: incrementing refcount of 1187: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1175 is 0
9999 mem: storing 1 in location 1175
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1176 is 1187
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1175 is 1
9999 mem: location 1174 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 97
9999 mem: location 1189 is 1196
9999 mem: location 1190 is 1166
9999 mem: location 1176 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1188
9998 run: its type is "character"
9999 mem: location 1188 is 97
9999 mem: storing 97 in location 1177
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1177 is 97
9999 mem: storing 0 in location 1178
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1176 is 1187
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1187 in location 1194
9999 mem: incrementing refcount of 1187: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1187
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 97
9999 mem: location 1189 is 1196
9999 mem: location 1190 is 1166
9999 mem: location 1194 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1189 is 1196
9999 mem: storing 1196 in location 1195
9999 mem: incrementing refcount of 1196: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1187: 15 -> 14
9999 mem: storing 1196 in location 1176
9999 mem: incrementing refcount of 1196: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1175 is 1
9999 mem: storing 2 in location 1175
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1176 is 1196
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1175 is 2
9999 mem: location 1174 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1176 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 98
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1187
9999 mem: location 1176 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 98
9999 mem: storing 98 in location 1177
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1177 is 98
9999 mem: storing 0 in location 1178
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1176 is 1196
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1194
9999 mem: incrementing refcount of 1196: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1196
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 98
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1187
9999 mem: location 1194 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1195
9999 mem: incrementing refcount of 1200: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1196: 15 -> 14
9999 mem: storing 1200 in location 1176
9999 mem: incrementing refcount of 1200: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1175 is 2
9999 mem: storing 3 in location 1175
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1176 is 1200
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1175 is 3
9999 mem: location 1174 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1176 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 99
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1176 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 99
9999 mem: storing 99 in location 1177
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1177 is 99
9999 mem: storing 0 in location 1178
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1176 is 1200
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1194
9999 mem: incrementing refcount of 1200: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1200
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 99
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1194 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1195
9999 mem: incrementing refcount of 1204: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 15 -> 14
9999 mem: storing 1204 in location 1176
9999 mem: incrementing refcount of 1204: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1175 is 3
9999 mem: storing 4 in location 1175
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1176 is 1204
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1175 is 4
9999 mem: location 1174 is 9
9999 mem: storing 0 in location 1179
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1176 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1176 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 10
9999 mem: storing 10 in location 1177
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1177 is 10
9999 mem: storing 1 in location 1178
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 1
9998 run: jumping to instruction 23
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1176 is 1204
9998 run: jumping to instruction 26
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1176 is 1204
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: storing 1204 in location 1275
9999 mem: incrementing refcount of 1204: 14 -> 15
 106 run: {no-motion?: "boolean"} <- equal {next-line: ("address" "shared" "duplex-list" "character")}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1275 is 1204
9999 mem: location 1269 is 1151
9999 mem: location 1151 is 1166
9999 mem: storing 0 in location 1276
 106 run: jump-unless {no-motion?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 21
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- add {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1267 is 1155
9999 mem: location 1155 is 1
9999 mem: location 1267 is 1155
9999 mem: storing 2 in location 1155
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-line: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1275 is 1204
9999 mem: location 1269 is 1151
9999 mem: decrementing refcount of 1166: 13 -> 12
9999 mem: storing 1204 in location 1151
9999 mem: incrementing refcount of 1204: 15 -> 16
 106 run: {target-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1268 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1279
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1270 is 0
9999 mem: location 1268 is 1156
9999 mem: storing 0 in location 1156
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1268 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1279 is 0
9999 mem: storing 1 in location 1280
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jumping to instruction 37
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1278
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1265 is 1147
9999 mem: location 1278 is 0
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1147: 9 -> 8
9999 mem: storing 1147 in location 1339
9999 mem: incrementing refcount of 1147: 8 -> 9
9999 mem: storing 0 in location 1344
 105 run: {undo-coalesce-tag: "number"} <- copy {4: "literal", "down-arrow": ()}
9999 mem: storing 4 in location 1377
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1378
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1379
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1380
9999 mem: incrementing refcount of 1166: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1377 is 4
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1358
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1358 is 1158
9999 mem: location 1158 is 0
9998 run: jumping to instruction 629
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1250
9999 mem: storing 1250 in location 1357
9999 mem: incrementing refcount of 1250: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1374 is 1
9999 mem: location 1375 is 0
9999 mem: location 1376 is 1166
9999 mem: location 1378 is 2
9999 mem: location 1379 is 0
9999 mem: location 1380 is 1166
9999 mem: location 1377 is 4
9999 mem: location 1357 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1357 is 1250
9999 mem: skipping refcount at 1250
9999 mem: storing 1 in location 1251
9999 mem: storing 1 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 1166 in location 1254
9999 mem: storing 2 in location 1255
9999 mem: storing 0 in location 1256
9999 mem: storing 1166 in location 1257
9999 mem: storing 4 in location 1258
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1339 is 1147
9999 mem: location 1357 is 1250
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1180
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1183
9999 mem: incrementing refcount of 1147: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1184
9999 mem: incrementing refcount of 1250: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1184 is 1250
9999 mem: location 1185 is 1158
9999 mem: location 1158 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1163
9999 mem: incrementing refcount of 1250: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1164
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1422
9999 mem: storing 1422 in location 1165
9999 mem: incrementing refcount of 1422: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1163 is 1250
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1422
9999 mem: skipping refcount at 1422
9999 mem: location 1165 is 1422
9999 mem: skipping refcount at 1422
9999 mem: storing 1250 in location 1423
9999 mem: storing 0 in location 1424
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1422
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1422
9999 mem: location 1185 is 1158
9999 mem: storing 1422 in location 1158
9999 mem: incrementing refcount of 1422: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1186
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1186 is 1159
9999 mem: storing 0 in location 1159
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1183 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1339
9999 mem: incrementing refcount of 1147: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1338 is 1008
9999 mem: location 1339 is 1147
9999 mem: location 1344 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 81 -> 82
9999 mem: decrementing refcount of 1147: 10 -> 9
9999 mem: storing 1147 in location 1324
9999 mem: incrementing refcount of 1147: 9 -> 10
9999 mem: storing 0 in location 1334
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1325
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1326
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1322 is 1008
9999 mem: location 1325 is 2
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1163
9999 mem: incrementing refcount of 1008: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1164
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1165
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1163 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 2
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 0
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1163 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 83 -> 82
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1323 is 1316
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1287
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1316 in location 1290
9999 mem: incrementing refcount of 1316: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1290 is 1316
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9999 mem: location 1317 is 1
9999 mem: location 1318 is 1310
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9998 run: address to copy is 1317
9998 run: its type is "number"
9999 mem: location 1317 is 1
9999 mem: storing 1 in location 1291
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9999 mem: location 1317 is 1
9999 mem: location 1318 is 1310
9999 mem: location 1290 is 1316
9999 mem: skipping refcount at 1316
9998 run: address to copy is 1318
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1318 is 1310
9999 mem: storing 1310 in location 1292
9999 mem: incrementing refcount of 1310: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1292 is 1310
9999 mem: skipping refcount at 1310
9999 mem: storing 1 in location 1293
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1291 is 1
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1294 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
9999 mem: storing 1191 in location 1295
9999 mem: incrementing refcount of 1191: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1295 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1290 is 1316
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1316
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: decrementing refcount of 1316: 3 -> 2
9999 mem: storing 1316 in location 1323
9999 mem: incrementing refcount of 1316: 2 -> 3
9999 mem: storing 1 in location 1331
9999 mem: storing 1 in location 1332
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1322 is 1008
9999 mem: location 1323 is 1316
9999 mem: location 1324 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1427
9999 mem: storing 'text' tag at 1427
9999 mem: storing character 48 at 1428
9999 mem: storing console in 1431
9999 mem: storing console data in 1433
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1431
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1319
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 83 -> 84
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1431 in location 1323
9999 mem: incrementing refcount of 1431: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1324
9999 mem: incrementing refcount of 1147: 10 -> 11
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1325
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1326
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1322 is 1008
9999 mem: location 1325 is 2
9999 mem: location 1326 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1163
9999 mem: incrementing refcount of 1008: 84 -> 85
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1164
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1165
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1163 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 2
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 0
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1163 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 85 -> 84
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 84 -> 85
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1323 is 1431
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1287
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1431 in location 1290
9999 mem: incrementing refcount of 1431: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1290 is 1431
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1425
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9998 run: address to copy is 1432
9998 run: its type is "number"
9999 mem: location 1432 is 0
9999 mem: storing 0 in location 1291
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1425
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9998 run: address to copy is 1433
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1433 is 1425
9999 mem: storing 1425 in location 1292
9999 mem: incrementing refcount of 1425: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1292 is 1425
9999 mem: skipping refcount at 1425
9999 mem: storing 1 in location 1293
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1291 is 0
9999 mem: location 1293 is 1
9999 mem: storing 0 in location 1294
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1294 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1292 is 1425
9999 mem: skipping refcount at 1425
9998 run: base address is 1426
9999 mem: location 1291 is 0
9998 run: address to copy is 1427
9998 run: its type is event
9999 mem: location 1427 is 0
9999 mem: location 1428 is 48
9999 mem: location 1429 is 0
9999 mem: location 1430 is 0
9999 mem: storing 0 in location 1296
9999 mem: storing 48 in location 1297
9999 mem: storing 0 in location 1298
9999 mem: storing 0 in location 1299
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1291 is 0
9999 mem: storing 1 in location 1291
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1425
9999 mem: location 1291 is 1
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9998 run: address to copy to is 1432
9999 mem: storing 1 in location 1432
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1296 is 0
9999 mem: location 1297 is 48
9999 mem: location 1298 is 0
9999 mem: location 1299 is 0
9999 mem: location 1290 is 1431
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1431
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1327
9999 mem: storing 48 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: decrementing refcount of 1431: 2 -> 1
9999 mem: storing 1431 in location 1323
9999 mem: incrementing refcount of 1431: 1 -> 2
9999 mem: storing 1 in location 1331
9999 mem: storing 0 in location 1332
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1327 is 0
9999 mem: location 1328 is 48
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1333
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1322 is 1008
9999 mem: location 1324 is 1147
9999 mem: location 1327 is 0
9999 mem: location 1328 is 48
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1335
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 85 -> 86
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1339
9999 mem: incrementing refcount of 1147: 11 -> 12
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1340
9999 mem: storing 48 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1344
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1339 is 1147
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1434
9999 mem: storing 3 in location 1435
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1437
9999 mem: incrementing refcount of 1008: 86 -> 87
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1437 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1438
 106 run: return {width: "number"}
9999 mem: location 1438 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1345
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1437
9999 mem: incrementing refcount of 1008: 87 -> 88
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1437 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1438
 106 run: return {height: "number"}
9999 mem: location 1438 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1346
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1347
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1348
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1349
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1350
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1351
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1352
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1351 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1353
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1340 is 0
9999 mem: location 1341 is 48
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: storing 1341 in location 1354
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1354 is 1341
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1355
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1366
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1371
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1387
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1387 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1388
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1393
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1394
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1395
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1395 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1396
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1396 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1400
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 0 in location 1404
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1404 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: storing 1 in location 1407
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1344
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1407 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1389
9999 mem: incrementing refcount of 1166: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1349 is 1151
9999 mem: location 1151 is 1204
9999 mem: storing 1204 in location 1401
9999 mem: incrementing refcount of 1204: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1339 is 1147
9999 mem: location 1354 is 1341
9999 mem: location 1341 is 48
9999 mem: location 1338 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1439
9999 mem: storing 31 in location 1440
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1442
9999 mem: incrementing refcount of 1147: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1443
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1444
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1445
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1443 is 48
9999 mem: location 1445 is 1151
9999 mem: location 1151 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1180
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1183
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1184
9999 mem: incrementing refcount of 1204: 17 -> 18
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1472
9999 mem: storing 1472 in location 1185
9999 mem: incrementing refcount of 1472: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1185 is 1472
9999 mem: skipping refcount at 1472
9999 mem: location 1473 is 0
9999 mem: location 1474 is 0
9999 mem: location 1475 is 0
9999 mem: location 1183 is 48
9999 mem: location 1185 is 1472
9999 mem: skipping refcount at 1472
9998 run: address to copy to is 1473
9999 mem: storing 48 in location 1473
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1184 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1184 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1186
9999 mem: incrementing refcount of 1208: 12 -> 13
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1185 is 1472
9999 mem: location 1184 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy to is 1206
9999 mem: storing 1472 in location 1206
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1185 is 1472
9999 mem: skipping refcount at 1472
9999 mem: location 1473 is 48
9999 mem: location 1474 is 0
9999 mem: location 1475 is 0
9999 mem: location 1184 is 1204
9999 mem: location 1185 is 1472
9999 mem: skipping refcount at 1472
9998 run: address to copy to is 1475
9999 mem: storing 1204 in location 1475
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1185 is 1472
9999 mem: skipping refcount at 1472
9999 mem: location 1473 is 48
9999 mem: location 1474 is 0
9999 mem: location 1475 is 1204
9999 mem: location 1186 is 1208
9999 mem: location 1185 is 1472
9999 mem: skipping refcount at 1472
9998 run: address to copy to is 1474
9999 mem: storing 1208 in location 1474
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1186 is 1208
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1185 is 1472
9999 mem: location 1186 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy to is 1211
9999 mem: storing 1472 in location 1211
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1184 is 1204
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1445 is 1151
9999 mem: location 1151 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1437
9999 mem: incrementing refcount of 1204: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1472
9999 mem: location 1207 is 1200
9999 mem: location 1437 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1472
9999 mem: storing 1472 in location 1438
9999 mem: incrementing refcount of 1472: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 1472
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1472
9999 mem: location 1445 is 1151
9999 mem: decrementing refcount of 1204: 19 -> 18
9999 mem: storing 1472 in location 1151
9999 mem: incrementing refcount of 1472: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1446
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1447
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1448
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1442 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1449
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1446 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1450
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1447 is 1156
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1451
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1444 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1437
9999 mem: incrementing refcount of 1008: 89 -> 90
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1437 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1438
 107 run: return {width: "number"}
9999 mem: location 1438 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1452
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1444 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1437
9999 mem: incrementing refcount of 1008: 90 -> 91
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1437 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1437 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1438
 107 run: return {height: "number"}
9999 mem: location 1438 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1453
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1449 is 9
9999 mem: storing 8 in location 1454
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1447 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1454 is 8
9999 mem: storing 0 in location 1455
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1455 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1447 is 1156
9999 mem: location 1156 is 0
9999 mem: location 1447 is 1156
9999 mem: storing 1 in location 1156
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1445 is 1151
9999 mem: location 1151 is 1472
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1472 in location 1437
9999 mem: incrementing refcount of 1472: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1472
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1472
9999 mem: skipping refcount at 1472
9999 mem: location 1473 is 48
9999 mem: location 1474 is 1208
9999 mem: location 1475 is 1204
9999 mem: location 1437 is 1472
9999 mem: skipping refcount at 1472
9998 run: address to copy is 1474
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1474 is 1208
9999 mem: storing 1208 in location 1438
9999 mem: incrementing refcount of 1208: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: storing 1208 in location 1462
9999 mem: incrementing refcount of 1208: 14 -> 15
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1462 is 1208
9999 mem: storing 0 in location 1463
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1462 is 1208
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1447 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1452 is 10
9999 mem: storing 0 in location 1466
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1466 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1445 is 1151
9999 mem: location 1151 is 1472
9999 mem: storing 1472 in location 1468
9999 mem: incrementing refcount of 1472: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1444 is 1008
9999 mem: location 1450 is 2
9999 mem: location 1451 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1163
9999 mem: incrementing refcount of 1008: 91 -> 92
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1164
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1165
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1163 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 2
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 0
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1163 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1451 is 0
9999 mem: storing 0 in location 1469
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1461
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1469 is 0
9999 mem: location 1449 is 9
9999 mem: storing 0 in location 1466
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1468 is 1472
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1468 is 1472
9999 mem: skipping refcount at 1472
9999 mem: location 1473 is 48
9999 mem: location 1474 is 1208
9999 mem: location 1475 is 1204
9999 mem: location 1468 is 1472
9999 mem: skipping refcount at 1472
9998 run: address to copy is 1473
9998 run: its type is "character"
9999 mem: location 1473 is 48
9999 mem: storing 48 in location 1470
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1470 is 48
9999 mem: storing 0 in location 1471
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1444 is 1008
9999 mem: location 1470 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1262
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1265
9999 mem: incrementing refcount of 1008: 92 -> 93
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1266
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1267
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1269
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1266 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1265 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1273
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1273 is 2
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1275
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1275 is 0
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1275 is 0
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 48
9999 mem: storing 0 in location 1276
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1279 is 20
9999 mem: location 1275 is 0
9999 mem: storing 20 in location 1279
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1281
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1266 is 48
9999 mem: storing 0 in location 1282
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1279 is 20
9999 mem: storing 1056 in location 1284
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1266 is 48
9999 mem: location 1267 is 7
9999 mem: location 1284 is 1056
9999 mem: location 1284 is 1056
9999 mem: storing 48 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1285
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1275 is 0
9999 mem: location 1285 is 9
9999 mem: storing 0 in location 1286
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1275 is 0
9999 mem: storing 1 in location 1275
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 1
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1265 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1469 is 0
9999 mem: storing 1 in location 1469
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1468 is 1472
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1472 in location 1437
9999 mem: incrementing refcount of 1472: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1472
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1472
9999 mem: skipping refcount at 1472
9999 mem: location 1473 is 48
9999 mem: location 1474 is 1208
9999 mem: location 1475 is 1204
9999 mem: location 1437 is 1472
9999 mem: skipping refcount at 1472
9998 run: address to copy is 1474
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1474 is 1208
9999 mem: storing 1208 in location 1438
9999 mem: incrementing refcount of 1208: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1472: 6 -> 5
9999 mem: storing 1208 in location 1468
9999 mem: incrementing refcount of 1208: 16 -> 17
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1461
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1469 is 1
9999 mem: location 1449 is 9
9999 mem: storing 0 in location 1466
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1468 is 1208
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1468 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1472
9999 mem: location 1468 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 100
9999 mem: storing 100 in location 1470
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1470 is 100
9999 mem: storing 0 in location 1471
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1444 is 1008
9999 mem: location 1470 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1262
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1265
9999 mem: incrementing refcount of 1008: 93 -> 94
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1266
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1267
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1269
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1266 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1265 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1273
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1273 is 2
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1275
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1275 is 1
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1275 is 1
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1276
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 45
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-to-next-line-with-down-arrow
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1279 is 20
9999 mem: location 1275 is 1
9999 mem: storing 21 in location 1279
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1281
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1266 is 100
9999 mem: storing 0 in location 1282
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1279 is 21
9999 mem: storing 1058 in location 1284
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1266 is 100
9999 mem: location 1267 is 7
9999 mem: location 1284 is 1058
9999 mem: location 1284 is 1058
9999 mem: storing 100 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1285
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1275 is 1
9999 mem: location 1285 is 9
9999 mem: storing 0 in location 1286
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1275 is 1
9999 mem: storing 2 in location 1275
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 2
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1265 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1469 is 1
9999 mem: storing 2 in location 1469
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1468 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1437
9999 mem: incrementing refcount of 1208: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 100
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1472
9999 mem: location 1437 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1438
9999 mem: incrementing refcount of 1212: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 18 -> 17
9999 mem: storing 1212 in location 1468
9999 mem: incrementing refcount of 1212: 13 -> 14
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1461
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1469 is 2
9999 mem: location 1449 is 9
9999 mem: storing 0 in location 1466
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1468 is 1212
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1468 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1468 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 101
9999 mem: storing 101 in location 1470
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1470 is 101
9999 mem: storing 0 in location 1471
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1444 is 1008
9999 mem: location 1470 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1262
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1265
9999 mem: incrementing refcount of 1008: 94 -> 95
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1266
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1267
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1269
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1266 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1265 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1273
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1273 is 2
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1275
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1275 is 2
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1275 is 2
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1276
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1279 is 20
9999 mem: location 1275 is 2
9999 mem: storing 22 in location 1279
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1281
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1266 is 101
9999 mem: storing 0 in location 1282
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1279 is 22
9999 mem: storing 1060 in location 1284
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1266 is 101
9999 mem: location 1267 is 7
9999 mem: location 1284 is 1060
9999 mem: location 1284 is 1060
9999 mem: storing 101 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1285
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1275 is 2
9999 mem: location 1285 is 9
9999 mem: storing 0 in location 1286
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1275 is 2
9999 mem: storing 3 in location 1275
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 3
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1265 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1469 is 2
9999 mem: storing 3 in location 1469
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1468 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1437
9999 mem: incrementing refcount of 1212: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 101
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1437 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1438
9999 mem: incrementing refcount of 1216: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 15 -> 14
9999 mem: storing 1216 in location 1468
9999 mem: incrementing refcount of 1216: 12 -> 13
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1461
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1469 is 3
9999 mem: location 1449 is 9
9999 mem: storing 0 in location 1466
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1468 is 1216
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1468 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 102
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1468 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 102
9999 mem: storing 102 in location 1470
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1470 is 102
9999 mem: storing 0 in location 1471
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1471 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1444 is 1008
9999 mem: location 1470 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1262
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1265
9999 mem: incrementing refcount of 1008: 95 -> 96
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1266
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1267
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1269
9999 mem: storing 0 in location 1270
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1269
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1266 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1265 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1271
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1272
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1273
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1273 is 2
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1272 is 5
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1275
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1275 is 3
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1275 is 3
9999 mem: location 1271 is 10
9999 mem: storing 1 in location 1274
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1274 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1276
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1276 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1273 is 2
9999 mem: location 1271 is 10
9999 mem: storing 20 in location 1279
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1279 is 20
9999 mem: location 1275 is 3
9999 mem: storing 23 in location 1279
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1280
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1281
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1266 is 102
9999 mem: storing 0 in location 1282
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1282 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1280 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1279 is 23
9999 mem: storing 1062 in location 1284
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1266 is 102
9999 mem: location 1267 is 7
9999 mem: location 1284 is 1062
9999 mem: location 1284 is 1062
9999 mem: storing 102 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1271 is 10
9999 mem: storing 9 in location 1285
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1275 is 3
9999 mem: location 1285 is 9
9999 mem: storing 0 in location 1286
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1275 is 3
9999 mem: storing 4 in location 1275
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1275 is 4
9999 mem: location 1265 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1265 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1469 is 3
9999 mem: storing 4 in location 1469
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1468 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1437
9999 mem: incrementing refcount of 1216: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 102
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1437 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1438
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1216: 14 -> 13
9999 mem: storing 0 in location 1468
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1461
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1469 is 4
9999 mem: location 1449 is 9
9999 mem: storing 0 in location 1466
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1461
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1442 is 1147
9999 mem: location 1444 is 1008
9999 mem: location 1461 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1147: 13 -> 12
9999 mem: storing 1147 in location 1339
9999 mem: incrementing refcount of 1147: 12 -> 13
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1338
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: storing 0 in location 1344
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1391
9999 mem: incrementing refcount of 1166: 14 -> 15
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1339 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1358
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1358 is 1158
9999 mem: location 1158 is 1422
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1358 is 1158
9999 mem: location 1158 is 1422
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1422 in location 1437
9999 mem: incrementing refcount of 1422: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1437 is 1422
9999 mem: skipping refcount at 1422
9999 mem: location 1423 is 1250
9999 mem: location 1424 is 0
9999 mem: location 1437 is 1422
9999 mem: skipping refcount at 1422
9998 run: address to copy is 1423
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1423 is 1250
9999 mem: storing 1250 in location 1438
9999 mem: incrementing refcount of 1250: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1438 is 1250
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1250
9999 mem: storing 1250 in location 1357
9999 mem: incrementing refcount of 1250: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1357 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1251 is 1
9999 mem: location 1252 is 1
9999 mem: location 1253 is 0
9999 mem: location 1254 is 1166
9999 mem: location 1255 is 2
9999 mem: location 1256 is 0
9999 mem: location 1257 is 1166
9999 mem: location 1258 is 4
9999 mem: location 1259 is 0
9999 mem: location 1260 is 0
9999 mem: location 1261 is 0
9999 mem: location 1357 is 1250
9999 mem: skipping refcount at 1250
9999 mem: storing 0 in location 1364
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1204
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1437
9999 mem: incrementing refcount of 1204: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1204
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1472
9999 mem: location 1207 is 1200
9999 mem: location 1437 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1472
9999 mem: storing 1472 in location 1438
9999 mem: incrementing refcount of 1472: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 1472
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1472
9999 mem: storing 1472 in location 1365
9999 mem: incrementing refcount of 1472: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1365 is 1472
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1472 in location 1437
9999 mem: incrementing refcount of 1472: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1437 is 1472
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1437 is 1472
9999 mem: skipping refcount at 1472
9999 mem: location 1473 is 48
9999 mem: location 1474 is 1208
9999 mem: location 1475 is 1204
9999 mem: location 1437 is 1472
9999 mem: skipping refcount at 1472
9998 run: address to copy is 1474
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1474 is 1208
9999 mem: storing 1208 in location 1438
9999 mem: incrementing refcount of 1208: 17 -> 18
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1438 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1208
9999 mem: storing 1208 in location 1403
9999 mem: incrementing refcount of 1208: 18 -> 19
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1476
9999 mem: decrementing refcount of 1250: 5 -> 4
9999 mem: storing 1476 in location 1357
9999 mem: incrementing refcount of 1476: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1352 is 2
9999 mem: location 1353 is 0
9999 mem: location 1389 is 1166
9999 mem: location 1350 is 1155
9999 mem: location 1155 is 2
9999 mem: location 1351 is 1156
9999 mem: location 1156 is 1
9999 mem: location 1391 is 1166
9999 mem: location 1365 is 1472
9999 mem: location 1403 is 1208
9999 mem: location 1357 is 1476
9999 mem: skipping refcount at 1476
9999 mem: location 1357 is 1476
9999 mem: skipping refcount at 1476
9999 mem: storing 0 in location 1477
9999 mem: storing 2 in location 1478
9999 mem: storing 0 in location 1479
9999 mem: storing 1166 in location 1480
9999 mem: storing 2 in location 1481
9999 mem: storing 1 in location 1482
9999 mem: storing 1166 in location 1483
9999 mem: storing 1472 in location 1484
9999 mem: storing 1208 in location 1485
9999 mem: storing 1 in location 1486
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1339 is 1147
9999 mem: location 1357 is 1476
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1180
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1183
9999 mem: incrementing refcount of 1147: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1476 in location 1184
9999 mem: incrementing refcount of 1476: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1422
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1184 is 1476
9999 mem: location 1185 is 1158
9999 mem: location 1158 is 1422
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1476 in location 1163
9999 mem: incrementing refcount of 1476: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1422 in location 1164
9999 mem: incrementing refcount of 1422: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1488
9999 mem: storing 1488 in location 1165
9999 mem: incrementing refcount of 1488: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1163 is 1476
9999 mem: location 1164 is 1422
9999 mem: location 1165 is 1488
9999 mem: skipping refcount at 1488
9999 mem: location 1165 is 1488
9999 mem: skipping refcount at 1488
9999 mem: storing 1476 in location 1489
9999 mem: storing 1422 in location 1490
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1488
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1488
9999 mem: location 1185 is 1158
9999 mem: decrementing refcount of 1422: 4 -> 3
9999 mem: storing 1488 in location 1158
9999 mem: incrementing refcount of 1488: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1488
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1186
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1186 is 1159
9999 mem: storing 0 in location 1159
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1183 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1339
9999 mem: incrementing refcount of 1147: 13 -> 14
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1338 is 1008
9999 mem: location 1339 is 1147
9999 mem: location 1344 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 96 -> 95
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 95 -> 96
9999 mem: decrementing refcount of 1147: 14 -> 13
9999 mem: storing 1147 in location 1324
9999 mem: incrementing refcount of 1147: 13 -> 14
9999 mem: storing 0 in location 1334
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1488
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1325
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1472
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1488
9999 mem: location 1159 is 0
9999 mem: location 1324 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1326
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1322 is 1008
9999 mem: location 1325 is 2
9999 mem: location 1326 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1163
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1164
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1163 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 2
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1163 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1163 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 97 -> 96
9999 mem: storing 1008 in location 1322
9999 mem: incrementing refcount of 1008: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1323 is 1431
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1287
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1431 in location 1290
9999 mem: incrementing refcount of 1431: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1290 is 1431
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9999 mem: location 1432 is 1
9999 mem: location 1433 is 1425
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9998 run: address to copy is 1432
9998 run: its type is "number"
9999 mem: location 1432 is 1
9999 mem: storing 1 in location 1291
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9999 mem: location 1432 is 1
9999 mem: location 1433 is 1425
9999 mem: location 1290 is 1431
9999 mem: skipping refcount at 1431
9998 run: address to copy is 1433
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1433 is 1425
9999 mem: storing 1425 in location 1292
9999 mem: incrementing refcount of 1425: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1292 is 1425
9999 mem: skipping refcount at 1425
9999 mem: storing 1 in location 1293
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1291 is 1
9999 mem: location 1293 is 1
9999 mem: storing 1 in location 1294
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1294 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1434
9999 mem: storing 1434 in location 1295
9999 mem: incrementing refcount of 1434: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1295 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1438 is 0
9999 mem: location 1290 is 1431
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1431
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: decrementing refcount of 1431: 3 -> 2
9999 mem: storing 1431 in location 1323
9999 mem: incrementing refcount of 1431: 2 -> 3
9999 mem: storing 1 in location 1331
9999 mem: storing 1 in location 1332
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1332 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1322 is 1008
9999 mem: location 1323 is 1431
9999 mem: location 1324 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .0def      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
