 102 run: assume-console {"\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {down-arrow: ()}
9992 load: after rewriting: press {down-arrow: ()}
9999 mem: storing 'press' event starting at 1334
9999 mem: storing console in 1338
9999 mem: storing console data in 1340
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1338
9999 mem: location 2 is 1154
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1341
9999 mem: storing 14 in location 1342
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 77 -> 78
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1338 in location 1345
9999 mem: incrementing refcount of 1338: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1346
9999 mem: incrementing refcount of 1154: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1347
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1348
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1344 is 1012
9999 mem: location 1347 is 1
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1261
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 1
9999 mem: location 1263 is 1015
9999 mem: storing 1 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 0
9999 mem: location 1264 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 79 -> 78
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1345 is 1338
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1301
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1338 in location 1304
9999 mem: incrementing refcount of 1338: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1304 is 1338
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9999 mem: location 1339 is 0
9999 mem: location 1340 is 1332
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9998 run: address to copy is 1339
9999 mem: storing 1339 in location 1305
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9999 mem: location 1339 is 0
9999 mem: location 1340 is 1332
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9998 run: address to copy is 1340
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1340 is 1332
9999 mem: storing 1332 in location 1306
9999 mem: incrementing refcount of 1332: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9999 mem: storing 1 in location 1307
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1305 is 1339
9999 mem: location 1339 is 0
9999 mem: location 1307 is 1
9999 mem: storing 0 in location 1308
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9998 run: base address is 1333
9999 mem: location 1305 is 1339
9999 mem: location 1339 is 0
9998 run: address to copy is 1334
9998 run: its type is event
9999 mem: location 1334 is 1
9999 mem: location 1335 is 65516
9999 mem: location 1336 is 0
9999 mem: location 1337 is 0
9999 mem: storing 1 in location 1310
9999 mem: storing 65516 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1305 is 1339
9999 mem: location 1339 is 0
9999 mem: location 1305 is 1339
9999 mem: storing 1 in location 1339
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1310 is 1
9999 mem: location 1311 is 65516
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1304 is 1338
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1338
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1349
9999 mem: storing 65516 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: decrementing refcount of 1338: 2 -> 1
9999 mem: storing 1338 in location 1345
9999 mem: incrementing refcount of 1338: 1 -> 2
9999 mem: storing 1 in location 1353
9999 mem: storing 0 in location 1354
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1349 is 1
9999 mem: location 1350 is 65516
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 0 in location 1355
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1344 is 1012
9999 mem: location 1346 is 1154
9999 mem: location 1349 is 1
9999 mem: location 1350 is 65516
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1357
9999 mem: storing 85 in location 1358
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1360
9999 mem: incrementing refcount of 1012: 79 -> 80
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1361
9999 mem: incrementing refcount of 1154: 7 -> 8
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1362
9999 mem: storing 65516 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: storing 0 in location 1365
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1366
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1361 is 1154
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1360 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 80 -> 81
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1202
 106 run: return {width: "number"}
9999 mem: location 1202 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1367
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1360 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 81 -> 82
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 106 run: return {height: "number"}
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1368
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1369
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1370
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1371
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1372
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1373
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1372 is 1162
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1374
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1375
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1362 is 1
9999 mem: location 1363 is 65516
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 0 in location 1376
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1362 is 1
9999 mem: location 1363 is 65516
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 1363 in location 1430
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1430 is 1363
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1430 is 1363
9999 mem: location 1363 is 65516
9999 mem: storing 0 in location 1393
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1430 is 1363
9999 mem: location 1363 is 65516
9999 mem: storing 0 in location 1409
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1430 is 1363
9999 mem: location 1363 is 65516
9999 mem: storing 0 in location 1416
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1430 is 1363
9999 mem: location 1363 is 65516
9999 mem: storing 0 in location 1417
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1430 is 1363
9999 mem: location 1363 is 65516
9999 mem: storing 1 in location 1431
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 1
9999 mem: storing 1 in location 1396
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1397
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1398
9999 mem: incrementing refcount of 1173: 10 -> 11
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-next-line {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1361 is 1154
9999 mem: location 1368 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 mem: new alloc: 1444
9999 mem: storing 23 in location 1445
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1447
9999 mem: incrementing refcount of 1154: 8 -> 9
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1448
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1449
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1450
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1451
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1452
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1173
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 1
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1447 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1453
 106 run: {last-line: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1448 is 5
9999 mem: storing 4 in location 1454
 106 run: {already-at-bottom?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {last-line: "number"}
9999 mem: location 1449 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1454 is 4
9999 mem: storing 0 in location 1455
 106 run: jump-if {already-at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1455 is 0
9998 run: jump-if fell through
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1453 is 9
9999 mem: location 1452 is 0
9999 mem: storing 9 in location 1456
 106 run: {next-line: ("address" "shared" "duplex-list" "character")} <- before-start-of-next-line {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {max: "number"}
9999 mem: location 1451 is 1158
9999 mem: location 1158 is 1173
9999 mem: location 1456 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1177
 107 run: {original: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1180
9999 mem: incrementing refcount of 1173: 11 -> 12
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1181
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1182
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1180 is 1173
9999 mem: storing 1173 in location 1183
9999 mem: incrementing refcount of 1173: 12 -> 13
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 167
9999 mem: location 1175 is 1194
9999 mem: location 1176 is 0
9999 mem: location 1183 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1174
9998 run: its type is "character"
9999 mem: location 1174 is 167
9999 mem: storing 167 in location 1184
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1184 is 167
9999 mem: storing 0 in location 1185
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jumping to instruction 11
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1183 is 1173
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1182 is 0
9999 mem: location 1181 is 9
9999 mem: storing 0 in location 1186
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 167
9999 mem: location 1175 is 1194
9999 mem: location 1176 is 0
9999 mem: location 1183 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1174
9998 run: its type is "character"
9999 mem: location 1174 is 167
9999 mem: storing 167 in location 1184
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1184 is 167
9999 mem: storing 0 in location 1185
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1173
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1173 in location 1201
9999 mem: incrementing refcount of 1173: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1173
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1173
9999 mem: skipping refcount at 1173
9999 mem: location 1174 is 167
9999 mem: location 1175 is 1194
9999 mem: location 1176 is 0
9999 mem: location 1201 is 1173
9999 mem: skipping refcount at 1173
9998 run: address to copy is 1175
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1175 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1173: 14 -> 13
9999 mem: storing 1194 in location 1183
9999 mem: incrementing refcount of 1194: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1182 is 0
9999 mem: storing 1 in location 1182
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1183 is 1194
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1182 is 1
9999 mem: location 1181 is 9
9999 mem: storing 0 in location 1186
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1173
9999 mem: location 1183 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1184
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1184 is 97
9999 mem: storing 0 in location 1185
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1194
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1173
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 15 -> 14
9999 mem: storing 1203 in location 1183
9999 mem: incrementing refcount of 1203: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1182 is 1
9999 mem: storing 2 in location 1182
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1183 is 1203
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1182 is 2
9999 mem: location 1181 is 9
9999 mem: storing 0 in location 1186
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1183 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1184
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1184 is 98
9999 mem: storing 0 in location 1185
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1203
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 15 -> 14
9999 mem: storing 1207 in location 1183
9999 mem: incrementing refcount of 1207: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1182 is 2
9999 mem: storing 3 in location 1182
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1183 is 1207
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1182 is 3
9999 mem: location 1181 is 9
9999 mem: storing 0 in location 1186
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1183 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1184
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1184 is 99
9999 mem: storing 0 in location 1185
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1207
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 15 -> 14
9999 mem: storing 1211 in location 1183
9999 mem: incrementing refcount of 1211: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1182 is 3
9999 mem: storing 4 in location 1182
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1183 is 1211
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1182 is 4
9999 mem: location 1181 is 9
9999 mem: storing 0 in location 1186
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1186 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1183 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1184
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1184 is 10
9999 mem: storing 1 in location 1185
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1185 is 1
9998 run: jumping to instruction 23
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1183 is 1211
9998 run: jumping to instruction 26
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1211
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1457
9999 mem: incrementing refcount of 1211: 14 -> 15
 106 run: {no-motion?: "boolean"} <- equal {next-line: ("address" "shared" "duplex-list" "character")}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1457 is 1211
9999 mem: location 1451 is 1158
9999 mem: location 1158 is 1173
9999 mem: storing 0 in location 1458
 106 run: jump-unless {no-motion?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 21
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- add {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1449 is 1162
9999 mem: location 1162 is 1
9999 mem: location 1449 is 1162
9999 mem: storing 2 in location 1162
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-line: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1457 is 1211
9999 mem: location 1451 is 1158
9999 mem: decrementing refcount of 1173: 13 -> 12
9999 mem: storing 1211 in location 1158
9999 mem: incrementing refcount of 1211: 15 -> 16
 106 run: {target-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1450 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1461
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1452 is 0
9999 mem: location 1450 is 1163
9999 mem: storing 0 in location 1163
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1450 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1461 is 0
9999 mem: storing 1 in location 1462
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1462 is 1
9998 run: jumping to instruction 37
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1460
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1447 is 1154
9999 mem: location 1460 is 0
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1154: 9 -> 8
9999 mem: storing 1154 in location 1361
9999 mem: incrementing refcount of 1154: 8 -> 9
9999 mem: storing 0 in location 1366
 105 run: {undo-coalesce-tag: "number"} <- copy {4: "literal", "down-arrow": ()}
9999 mem: storing 4 in location 1399
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1400
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1401
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1402
9999 mem: incrementing refcount of 1173: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1399 is 4
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1380
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1380 is 1165
9999 mem: location 1165 is 0
9998 run: jumping to instruction 629
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1000
9999 mem: storing 1000 in location 1379
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1396 is 1
9999 mem: location 1397 is 0
9999 mem: location 1398 is 1173
9999 mem: location 1400 is 2
9999 mem: location 1401 is 0
9999 mem: location 1402 is 1173
9999 mem: location 1399 is 4
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1173 in location 1004
9999 mem: storing 2 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 1173 in location 1007
9999 mem: storing 4 in location 1008
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1361 is 1154
9999 mem: location 1379 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1187
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1190
9999 mem: incrementing refcount of 1154: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1191
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1192
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1191 is 1000
9999 mem: location 1192 is 1165
9999 mem: location 1165 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1167
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1170
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1171
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1469
9999 mem: storing 1469 in location 1172
9999 mem: incrementing refcount of 1469: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1000
9999 mem: location 1171 is 0
9999 mem: location 1172 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1172 is 1469
9999 mem: skipping refcount at 1469
9999 mem: storing 1000 in location 1470
9999 mem: storing 0 in location 1471
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1172 is 1469
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: location 1192 is 1165
9999 mem: storing 1469 in location 1165
9999 mem: incrementing refcount of 1469: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1193
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1193 is 1166
9999 mem: storing 0 in location 1166
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1190 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 10 -> 9
9999 mem: storing 1154 in location 1361
9999 mem: incrementing refcount of 1154: 9 -> 10
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1360 is 1012
9999 mem: location 1361 is 1154
9999 mem: location 1366 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1154
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 82 -> 81
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 81 -> 82
9999 mem: decrementing refcount of 1154: 10 -> 9
9999 mem: storing 1154 in location 1346
9999 mem: incrementing refcount of 1154: 9 -> 10
9999 mem: storing 0 in location 1356
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1347
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1348
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1344 is 1012
9999 mem: location 1347 is 2
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 82 -> 83
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1261
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 2
9999 mem: location 1263 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 0
9999 mem: location 1264 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 83 -> 82
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 82 -> 83
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1345 is 1338
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1301
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1338 in location 1304
9999 mem: incrementing refcount of 1338: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1304 is 1338
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1332
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9998 run: address to copy is 1339
9999 mem: storing 1339 in location 1305
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9999 mem: location 1339 is 1
9999 mem: location 1340 is 1332
9999 mem: location 1304 is 1338
9999 mem: skipping refcount at 1338
9998 run: address to copy is 1340
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1340 is 1332
9999 mem: storing 1332 in location 1306
9999 mem: incrementing refcount of 1332: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1306 is 1332
9999 mem: skipping refcount at 1332
9999 mem: storing 1 in location 1307
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1305 is 1339
9999 mem: location 1339 is 1
9999 mem: location 1307 is 1
9999 mem: storing 1 in location 1308
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1198
9999 mem: storing 1198 in location 1309
9999 mem: incrementing refcount of 1198: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1309 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1304 is 1338
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1338
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: decrementing refcount of 1338: 3 -> 2
9999 mem: storing 1338 in location 1345
9999 mem: incrementing refcount of 1338: 2 -> 3
9999 mem: storing 1 in location 1353
9999 mem: storing 1 in location 1354
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1344 is 1012
9999 mem: location 1345 is 1338
9999 mem: location 1346 is 1154
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 2 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1474
9999 mem: storing 'text' tag at 1474
9999 mem: storing character 48 at 1475
9999 mem: storing console in 1478
9999 mem: storing console data in 1480
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1012
9999 mem: location 901 is 1478
9999 mem: location 2 is 1154
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1341
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 83 -> 84
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1478 in location 1345
9999 mem: incrementing refcount of 1478: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1346
9999 mem: incrementing refcount of 1154: 10 -> 11
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1347
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1348
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1344 is 1012
9999 mem: location 1347 is 2
9999 mem: location 1348 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 84 -> 85
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1261
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 2
9999 mem: location 1263 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 0
9999 mem: location 1264 is 1016
9999 mem: storing 0 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 85 -> 84
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 84 -> 85
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1345 is 1478
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1301
9990 schedule: read-event/editor-event-loop/run_1002/scenario_editor-moves-to-next-line-with-down-arrow
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1478 in location 1304
9999 mem: incrementing refcount of 1478: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1304 is 1478
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9999 mem: location 1479 is 0
9999 mem: location 1480 is 1472
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9998 run: address to copy is 1479
9999 mem: storing 1479 in location 1305
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9999 mem: location 1479 is 0
9999 mem: location 1480 is 1472
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9998 run: address to copy is 1480
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1480 is 1472
9999 mem: storing 1472 in location 1306
9999 mem: incrementing refcount of 1472: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1306 is 1472
9999 mem: skipping refcount at 1472
9999 mem: storing 1 in location 1307
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1305 is 1479
9999 mem: location 1479 is 0
9999 mem: location 1307 is 1
9999 mem: storing 0 in location 1308
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1306 is 1472
9999 mem: skipping refcount at 1472
9998 run: base address is 1473
9999 mem: location 1305 is 1479
9999 mem: location 1479 is 0
9998 run: address to copy is 1474
9998 run: its type is event
9999 mem: location 1474 is 0
9999 mem: location 1475 is 48
9999 mem: location 1476 is 0
9999 mem: location 1477 is 0
9999 mem: storing 0 in location 1310
9999 mem: storing 48 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1305 is 1479
9999 mem: location 1479 is 0
9999 mem: location 1305 is 1479
9999 mem: storing 1 in location 1479
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1310 is 0
9999 mem: location 1311 is 48
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: location 1304 is 1478
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1478
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1349
9999 mem: storing 48 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: decrementing refcount of 1478: 2 -> 1
9999 mem: storing 1478 in location 1345
9999 mem: incrementing refcount of 1478: 1 -> 2
9999 mem: storing 1 in location 1353
9999 mem: storing 0 in location 1354
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1349 is 0
9999 mem: location 1350 is 48
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 mem: storing 0 in location 1355
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1355 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1344 is 1012
9999 mem: location 1346 is 1154
9999 mem: location 1349 is 0
9999 mem: location 1350 is 48
9999 mem: location 1351 is 0
9999 mem: location 1352 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1357
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1360
9999 mem: incrementing refcount of 1012: 85 -> 86
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1361
9999 mem: incrementing refcount of 1154: 11 -> 12
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1362
9999 mem: storing 48 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: storing 0 in location 1365
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1366
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1361 is 1154
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1360 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1481
9999 mem: storing 3 in location 1482
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1484
9999 mem: incrementing refcount of 1012: 86 -> 87
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1484 is 1012
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1485
 106 run: return {width: "number"}
9999 mem: location 1485 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1367
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1360 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1484
9999 mem: incrementing refcount of 1012: 87 -> 88
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1484 is 1012
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1485
 106 run: return {height: "number"}
9999 mem: location 1485 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1368
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1369
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1370
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1371
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1372
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1373
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1372 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1374
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1375
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1362 is 0
9999 mem: location 1363 is 48
9999 mem: location 1364 is 0
9999 mem: location 1365 is 0
9999 mem: storing 1363 in location 1376
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1376 is 1363
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1377
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1377 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1388
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1393
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1393 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1409
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1409 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1410
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1415
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1416
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1417
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1418
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1422
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 0 in location 1426
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: storing 1 in location 1429
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1366
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1429 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1411
9999 mem: incrementing refcount of 1173: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1371 is 1158
9999 mem: location 1158 is 1211
9999 mem: storing 1211 in location 1423
9999 mem: incrementing refcount of 1211: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1361 is 1154
9999 mem: location 1376 is 1363
9999 mem: location 1363 is 48
9999 mem: location 1360 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1486
9999 mem: storing 31 in location 1487
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1489
9999 mem: incrementing refcount of 1154: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1490
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1491
9999 mem: incrementing refcount of 1012: 88 -> 89
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1211
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1492
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1490 is 48
9999 mem: location 1492 is 1158
9999 mem: location 1158 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1187
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1190
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1191
9999 mem: incrementing refcount of 1211: 17 -> 18
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1519
9999 mem: storing 1519 in location 1192
9999 mem: incrementing refcount of 1519: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1192 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 0
9999 mem: location 1521 is 0
9999 mem: location 1522 is 0
9999 mem: location 1190 is 48
9999 mem: location 1192 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy to is 1520
9999 mem: storing 48 in location 1520
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1191 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1191 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1193
9999 mem: incrementing refcount of 1215: 12 -> 13
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1192 is 1519
9999 mem: location 1191 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy to is 1213
9999 mem: storing 1519 in location 1213
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 48
9999 mem: location 1521 is 0
9999 mem: location 1522 is 0
9999 mem: location 1191 is 1211
9999 mem: location 1192 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy to is 1522
9999 mem: storing 1211 in location 1522
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1192 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 48
9999 mem: location 1521 is 0
9999 mem: location 1522 is 1211
9999 mem: location 1193 is 1215
9999 mem: location 1192 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy to is 1521
9999 mem: storing 1215 in location 1521
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1193 is 1215
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1193 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1192 is 1519
9999 mem: location 1193 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy to is 1218
9999 mem: storing 1519 in location 1218
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1191 is 1211
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1492 is 1158
9999 mem: location 1158 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1484
9999 mem: incrementing refcount of 1211: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1519
9999 mem: location 1214 is 1207
9999 mem: location 1484 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1519
9999 mem: storing 1519 in location 1485
9999 mem: incrementing refcount of 1519: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 1519
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1519
9999 mem: location 1492 is 1158
9999 mem: decrementing refcount of 1211: 19 -> 18
9999 mem: storing 1519 in location 1158
9999 mem: incrementing refcount of 1519: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1493
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1494
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1495
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 0
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1489 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 9
9999 mem: storing 9 in location 1496
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1493 is 1162
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1497
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1494 is 1163
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1498
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1491 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1484
9999 mem: incrementing refcount of 1012: 89 -> 90
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1484 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1485
 107 run: return {width: "number"}
9999 mem: location 1485 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1499
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1491 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1484
9999 mem: incrementing refcount of 1012: 90 -> 91
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1484 is 1012
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1484 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1485
 107 run: return {height: "number"}
9999 mem: location 1485 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1500
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1496 is 9
9999 mem: storing 8 in location 1501
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1494 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1501 is 8
9999 mem: storing 0 in location 1502
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1502 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1494 is 1163
9999 mem: location 1163 is 0
9999 mem: location 1494 is 1163
9999 mem: storing 1 in location 1163
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1492 is 1158
9999 mem: location 1158 is 1519
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1484
9999 mem: incrementing refcount of 1519: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1519
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 48
9999 mem: location 1521 is 1215
9999 mem: location 1522 is 1211
9999 mem: location 1484 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1521
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1521 is 1215
9999 mem: storing 1215 in location 1485
9999 mem: incrementing refcount of 1215: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1509
9999 mem: incrementing refcount of 1215: 14 -> 15
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1509 is 1215
9999 mem: storing 0 in location 1510
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1510 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1509 is 1215
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1494 is 1163
9999 mem: location 1163 is 1
9999 mem: location 1499 is 10
9999 mem: storing 0 in location 1513
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1492 is 1158
9999 mem: location 1158 is 1519
9999 mem: storing 1519 in location 1515
9999 mem: incrementing refcount of 1519: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1491 is 1012
9999 mem: location 1497 is 2
9999 mem: location 1498 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 91 -> 92
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1261
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 2
9999 mem: location 1263 is 1015
9999 mem: storing 2 in location 1015
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 0
9999 mem: location 1264 is 1016
9999 mem: storing 0 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1498 is 0
9999 mem: storing 0 in location 1516
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1508
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1516 is 0
9999 mem: location 1496 is 9
9999 mem: storing 0 in location 1513
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 1519
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1515 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 48
9999 mem: location 1521 is 1215
9999 mem: location 1522 is 1211
9999 mem: location 1515 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1520
9998 run: its type is "character"
9999 mem: location 1520 is 48
9999 mem: storing 48 in location 1517
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1517 is 48
9999 mem: storing 0 in location 1518
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1491 is 1012
9999 mem: location 1517 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1265
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1268
9999 mem: incrementing refcount of 1012: 92 -> 93
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1269
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1270
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1272
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1269 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1268 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1274
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1275
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1276
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1275 is 5
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1274 is 10
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1269 is 48
9999 mem: storing 0 in location 1279
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1274 is 10
9999 mem: storing 20 in location 1282
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1282 is 20
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1282
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1283
9999 mem: incrementing refcount of 1018: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1284
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1269 is 48
9999 mem: storing 0 in location 1285
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1282 is 20
9999 mem: storing 1060 in location 1287
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1287 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1287 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1288
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1269 is 48
9999 mem: location 1288 is 1060
9999 mem: storing 48 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1287 is 1060
9999 mem: location 1060 is 48
9999 mem: location 1061 is 7
9999 mem: location 1287 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1289
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1270 is 7
9999 mem: location 1289 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1274 is 10
9999 mem: storing 9 in location 1290
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 9
9999 mem: storing 0 in location 1291
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1278 is 1016
9999 mem: storing 1 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1268 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1516 is 0
9999 mem: storing 1 in location 1516
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1519
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1484
9999 mem: incrementing refcount of 1519: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1519
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 48
9999 mem: location 1521 is 1215
9999 mem: location 1522 is 1211
9999 mem: location 1484 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1521
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1521 is 1215
9999 mem: storing 1215 in location 1485
9999 mem: incrementing refcount of 1215: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1519: 6 -> 5
9999 mem: storing 1215 in location 1515
9999 mem: incrementing refcount of 1215: 16 -> 17
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1508
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1516 is 1
9999 mem: location 1496 is 9
9999 mem: storing 0 in location 1513
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 1215
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1515 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1519
9999 mem: location 1515 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1517
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1517 is 100
9999 mem: storing 0 in location 1518
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1491 is 1012
9999 mem: location 1517 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1265
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1268
9999 mem: incrementing refcount of 1012: 93 -> 94
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1269
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1270
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1272
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1269 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1268 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1274
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1275
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1276
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1275 is 5
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1274 is 10
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1269 is 100
9999 mem: storing 0 in location 1279
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1274 is 10
9999 mem: storing 20 in location 1282
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1282 is 20
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1282
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1283
9999 mem: incrementing refcount of 1018: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1284
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1269 is 100
9999 mem: storing 0 in location 1285
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1282 is 21
9999 mem: storing 1062 in location 1287
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1287 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1287 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1288
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1269 is 100
9999 mem: location 1288 is 1062
9999 mem: storing 100 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1287 is 1062
9999 mem: location 1062 is 100
9999 mem: location 1063 is 7
9999 mem: location 1287 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1289
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1270 is 7
9999 mem: location 1289 is 1063
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1274 is 10
9999 mem: storing 9 in location 1290
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 9
9999 mem: storing 0 in location 1291
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1278 is 1016
9999 mem: storing 2 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1268 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1516 is 1
9999 mem: storing 2 in location 1516
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1484
9999 mem: incrementing refcount of 1215: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1215
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1519
9999 mem: location 1484 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1485
9999 mem: incrementing refcount of 1219: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 18 -> 17
9999 mem: storing 1219 in location 1515
9999 mem: incrementing refcount of 1219: 13 -> 14
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1508
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1516 is 2
9999 mem: location 1496 is 9
9999 mem: storing 0 in location 1513
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 1219
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1515 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1515 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1517
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1517 is 101
9999 mem: storing 0 in location 1518
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1491 is 1012
9999 mem: location 1517 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1265
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1268
9999 mem: incrementing refcount of 1012: 94 -> 95
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1269
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1270
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1272
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1269 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1268 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1274
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1275
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1276
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1275 is 5
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1274 is 10
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1269 is 101
9999 mem: storing 0 in location 1279
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1274 is 10
9999 mem: storing 20 in location 1282
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1282 is 20
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1282
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1283
9999 mem: incrementing refcount of 1018: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1284
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1269 is 101
9999 mem: storing 0 in location 1285
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1282 is 22
9999 mem: storing 1064 in location 1287
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1287 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1287 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1288
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1269 is 101
9999 mem: location 1288 is 1064
9999 mem: storing 101 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1287 is 1064
9999 mem: location 1064 is 101
9999 mem: location 1065 is 7
9999 mem: location 1287 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1289
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1270 is 7
9999 mem: location 1289 is 1065
9999 mem: storing 7 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1274 is 10
9999 mem: storing 9 in location 1290
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 9
9999 mem: storing 0 in location 1291
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1278 is 1016
9999 mem: storing 3 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1268 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1516 is 2
9999 mem: storing 3 in location 1516
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1484
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1219
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1484 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1485
9999 mem: incrementing refcount of 1223: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 15 -> 14
9999 mem: storing 1223 in location 1515
9999 mem: incrementing refcount of 1223: 12 -> 13
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1508
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1516 is 3
9999 mem: location 1496 is 9
9999 mem: storing 0 in location 1513
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 1223
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1515 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1515 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1517
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1517 is 102
9999 mem: storing 0 in location 1518
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1518 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1491 is 1012
9999 mem: location 1517 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1265
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1268
9999 mem: incrementing refcount of 1012: 95 -> 96
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1269
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1270
9999 mem: storing 0 in location 1271
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1270
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1272
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1269 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1268 is 1012
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is "number"
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1274
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is "number"
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1275
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1276
 107 run: {legal?: "boolean"} <- greater-or-equal {row: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: ("address" "number"), "lookup": ()}, {height: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1275 is 5
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1274 is 10
9999 mem: storing 1 in location 1277
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1277 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1269 is 102
9999 mem: storing 0 in location 1279
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 0
9998 run: jumping to instruction 43
 107 run: {index: "number"} <- multiply {row: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1276 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1274 is 10
9999 mem: storing 20 in location 1282
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1282 is 20
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1282
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1268 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1283
9999 mem: incrementing refcount of 1018: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1284
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1269 is 102
9999 mem: storing 0 in location 1285
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1283 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1282 is 23
9999 mem: storing 1066 in location 1287
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1287 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1287 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1288
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1269 is 102
9999 mem: location 1288 is 1066
9999 mem: storing 102 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1287 is 1066
9999 mem: location 1066 is 102
9999 mem: location 1067 is 7
9999 mem: location 1287 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1289
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1270 is 7
9999 mem: location 1289 is 1067
9999 mem: storing 7 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1274 is 10
9999 mem: storing 9 in location 1290
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 9
9999 mem: storing 0 in location 1291
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1278 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1278 is 1016
9999 mem: storing 4 in location 1016
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1268 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1516 is 3
9999 mem: storing 4 in location 1516
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1515 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1484
9999 mem: incrementing refcount of 1223: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1223
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 102
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1484 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1225 is 0
9999 mem: storing 0 in location 1485
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1223: 14 -> 13
9999 mem: storing 0 in location 1515
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1508
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1516 is 4
9999 mem: location 1496 is 9
9999 mem: storing 0 in location 1513
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1515 is 0
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1508
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1489 is 1154
9999 mem: location 1491 is 1012
9999 mem: location 1508 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1154: 13 -> 12
9999 mem: storing 1154 in location 1361
9999 mem: incrementing refcount of 1154: 12 -> 13
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1360
9999 mem: incrementing refcount of 1012: 95 -> 96
9999 mem: storing 0 in location 1366
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1156
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1156 is 1173
9999 mem: storing 1173 in location 1413
9999 mem: incrementing refcount of 1173: 14 -> 15
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1361 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1380
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1380 is 1165
9999 mem: location 1165 is 1469
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1380 is 1165
9999 mem: location 1165 is 1469
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1484
9999 mem: incrementing refcount of 1469: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1484 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1470 is 1000
9999 mem: location 1471 is 0
9999 mem: location 1484 is 1469
9999 mem: skipping refcount at 1469
9998 run: address to copy is 1470
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1470 is 1000
9999 mem: storing 1000 in location 1485
9999 mem: incrementing refcount of 1000: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1485 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1379
9999 mem: incrementing refcount of 1000: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1173
9999 mem: location 1005 is 2
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1173
9999 mem: location 1008 is 4
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1379 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 0 in location 1386
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1423 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1484
9999 mem: incrementing refcount of 1211: 18 -> 19
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1211
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1519
9999 mem: location 1214 is 1207
9999 mem: location 1484 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1519
9999 mem: storing 1519 in location 1485
9999 mem: incrementing refcount of 1519: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 1519
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1519
9999 mem: storing 1519 in location 1387
9999 mem: incrementing refcount of 1519: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1387 is 1519
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1519 in location 1484
9999 mem: incrementing refcount of 1519: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1484 is 1519
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1484 is 1519
9999 mem: skipping refcount at 1519
9999 mem: location 1520 is 48
9999 mem: location 1521 is 1215
9999 mem: location 1522 is 1211
9999 mem: location 1484 is 1519
9999 mem: skipping refcount at 1519
9998 run: address to copy is 1521
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1521 is 1215
9999 mem: storing 1215 in location 1485
9999 mem: incrementing refcount of 1215: 17 -> 18
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1485 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1425
9999 mem: incrementing refcount of 1215: 18 -> 19
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1120
9999 mem: decrementing refcount of 1000: 5 -> 4
9999 mem: storing 1120 in location 1379
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1374 is 2
9999 mem: location 1375 is 0
9999 mem: location 1411 is 1173
9999 mem: location 1372 is 1162
9999 mem: location 1162 is 2
9999 mem: location 1373 is 1163
9999 mem: location 1163 is 1
9999 mem: location 1413 is 1173
9999 mem: location 1387 is 1519
9999 mem: location 1425 is 1215
9999 mem: location 1379 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1379 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1121
9999 mem: storing 2 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1173 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 1 in location 1126
9999 mem: storing 1173 in location 1127
9999 mem: storing 1519 in location 1128
9999 mem: storing 1215 in location 1129
9999 mem: storing 1 in location 1130
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1361 is 1154
9999 mem: location 1379 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1187
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1154 in location 1190
9999 mem: incrementing refcount of 1154: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1191
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1469
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1165
9999 mem: storing 1165 in location 1192
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1191 is 1120
9999 mem: location 1192 is 1165
9999 mem: location 1165 is 1469
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1167
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1170
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1469 in location 1171
9999 mem: incrementing refcount of 1469: 3 -> 4
9990 schedule: push_4/add-operation/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-to-next-line-with-down-arrow
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1523
9999 mem: storing 1523 in location 1172
9999 mem: incrementing refcount of 1523: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1170 is 1120
9999 mem: location 1171 is 1469
9999 mem: location 1172 is 1523
9999 mem: skipping refcount at 1523
9999 mem: location 1172 is 1523
9999 mem: skipping refcount at 1523
9999 mem: storing 1120 in location 1524
9999 mem: storing 1469 in location 1525
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1172 is 1523
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1523
9999 mem: location 1192 is 1165
9999 mem: decrementing refcount of 1469: 4 -> 3
9999 mem: storing 1523 in location 1165
9999 mem: incrementing refcount of 1523: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1523
9999 mem: location 1166 is 0
9999 mem: location 1190 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1193
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1193 is 1166
9999 mem: storing 0 in location 1166
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1190 is 1154
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1154
9999 mem: decrementing refcount of 1154: 14 -> 13
9999 mem: storing 1154 in location 1361
9999 mem: incrementing refcount of 1154: 13 -> 14
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1360 is 1012
9999 mem: location 1361 is 1154
9999 mem: location 1366 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1154
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 96 -> 95
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 95 -> 96
9999 mem: decrementing refcount of 1154: 14 -> 13
9999 mem: storing 1154 in location 1346
9999 mem: incrementing refcount of 1154: 13 -> 14
9999 mem: storing 0 in location 1356
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1356 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1523
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1162
9998 run: its type is "number"
9999 mem: location 1162 is 2
9999 mem: storing 2 in location 1347
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9999 mem: location 1155 is 1173
9999 mem: location 1156 is 1173
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1519
9999 mem: location 1159 is 0
9999 mem: location 1160 is 9
9999 mem: location 1161 is 2
9999 mem: location 1162 is 2
9999 mem: location 1163 is 1
9999 mem: location 1164 is 1
9999 mem: location 1165 is 1523
9999 mem: location 1166 is 0
9999 mem: location 1346 is 1154
9999 mem: skipping refcount at 1154
9998 run: address to copy is 1163
9998 run: its type is "number"
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1348
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1344 is 1012
9999 mem: location 1347 is 2
9999 mem: location 1348 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1257
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1260
9999 mem: incrementing refcount of 1012: 96 -> 97
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1261
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1262
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1012
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1263
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1261 is 2
9999 mem: location 1263 is 1015
9999 mem: storing 2 in location 1015
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1260 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1264
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1262 is 1
9999 mem: location 1264 is 1016
9999 mem: storing 1 in location 1016
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 97 -> 96
9999 mem: storing 1012 in location 1344
9999 mem: incrementing refcount of 1012: 96 -> 97
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1345 is 1478
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1301
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1478 in location 1304
9999 mem: incrementing refcount of 1478: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1304 is 1478
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9999 mem: location 1479 is 1
9999 mem: location 1480 is 1472
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9998 run: address to copy is 1479
9999 mem: storing 1479 in location 1305
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9999 mem: location 1479 is 1
9999 mem: location 1480 is 1472
9999 mem: location 1304 is 1478
9999 mem: skipping refcount at 1478
9998 run: address to copy is 1480
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1480 is 1472
9999 mem: storing 1472 in location 1306
9999 mem: incrementing refcount of 1472: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1306 is 1472
9999 mem: skipping refcount at 1472
9999 mem: storing 1 in location 1307
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1305 is 1479
9999 mem: location 1479 is 1
9999 mem: location 1307 is 1
9999 mem: storing 1 in location 1308
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1481
9999 mem: storing 1481 in location 1309
9999 mem: incrementing refcount of 1481: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1309 is 1481
9999 mem: skipping refcount at 1481
9999 mem: location 1482 is 0
9999 mem: location 1483 is 0
9999 mem: location 1484 is 0
9999 mem: location 1485 is 0
9999 mem: location 1304 is 1478
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1478
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: decrementing refcount of 1478: 3 -> 2
9999 mem: storing 1478 in location 1345
9999 mem: incrementing refcount of 1478: 2 -> 3
9999 mem: storing 1 in location 1353
9999 mem: storing 1 in location 1354
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1354 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1344 is 1012
9999 mem: location 1345 is 1478
9999 mem: location 1346 is 1154
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .0def      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
