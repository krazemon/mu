 102 run: assume-console {"\n    left-click 3, 0\n    press up-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {up-arrow: ()}
9992 load: after rewriting: press {up-arrow: ()}
9999 mem: storing 'left-click' event starting at 1318
9999 mem: storing 'press' event starting at 1322
9999 mem: storing console in 1326
9999 mem: storing console data in 1328
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9992 transform: --- compute address offsets for run_1001
9993 transform: - compute address offsets for editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9993 transform: - compute address offsets for {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 transform: - compute address offsets for {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9993 transform: - compute address offsets for reply 
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1326
9999 mem: location 2 is 1148
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1329
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
9999 mem: storing 0 in location 1331
9999 mem: storing 0 in location 1332
9999 mem: storing 0 in location 1333
9999 mem: storing 0 in location 1334
9999 mem: storing 0 in location 1335
9999 mem: storing 0 in location 1336
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 0 in location 1341
9999 mem: storing 0 in location 1342
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 17 in location 1330
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1332 is 0
9999 mem: incrementing refcount of 1008: 57 -> 58
9999 mem: storing 1008 in location 1332
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1333 is 0
9999 mem: incrementing refcount of 1326: 1 -> 2
9999 mem: storing 1326 in location 1333
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1334 is 0
9999 mem: incrementing refcount of 1148: 3 -> 4
9999 mem: storing 1148 in location 1334
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1335
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1336
9990 schedule: editor-event-loop/run_1001/scenario_editor-moves-to-previous-line-from-left-margin
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1332 is 1008
9999 mem: location 1335 is 1
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 58 -> 59
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1332
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1333 is 1326
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1326: 2 -> 3
9999 mem: storing 1326 in location 1296
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1326
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 0
9999 mem: location 1328 is 1316
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is "number"
9999 mem: location 1327 is 0
9999 mem: storing 0 in location 1297
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 0
9999 mem: location 1328 is 1316
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1328
9998 run: its type is ("address" "array" "event")
9999 mem: location 1328 is 1316
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1316: 1 -> 2
9999 mem: storing 1316 in location 1298
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: storing 2 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 0
9999 mem: location 1299 is 2
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9998 run: base address is 1317
9999 mem: location 1297 is 0
9998 run: address to copy is 1318
9998 run: its type is event
9999 mem: location 1318 is 2
9999 mem: location 1319 is 65513
9999 mem: location 1320 is 3
9999 mem: location 1321 is 0
9999 mem: storing 2 in location 1302
9999 mem: storing 65513 in location 1303
9999 mem: storing 3 in location 1304
9999 mem: storing 0 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 0
9999 mem: storing 1 in location 1297
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 0
9999 mem: location 1328 is 1316
9999 mem: location 1297 is 1
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy to is 1327
9999 mem: storing 1 in location 1327
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 2
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 3
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1326
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: decrementing refcount of 1316: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing dummy:address:event
9999 mem: location 1301 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1301
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1326
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1337
9999 mem: storing 65513 in location 1338
9999 mem: storing 3 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 1326 in location 1333
9999 mem: storing 1 in location 1341
9999 mem: storing 0 in location 1342
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1337 is 2
9999 mem: location 1338 is 65513
9999 mem: location 1339 is 3
9999 mem: location 1340 is 0
9999 mem: storing 1 in location 1346
9999 mem: storing 65513 in location 1343
9999 mem: storing 3 in location 1344
9999 mem: storing 0 in location 1345
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 1
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {t: "touch-event"}
9999 mem: location 1332 is 1008
9999 mem: location 1334 is 1148
9999 mem: location 1343 is 65513
9999 mem: location 1344 is 3
9999 mem: location 1345 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1348
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: storing 0 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
9999 mem: storing 0 in location 1357
9999 mem: storing 0 in location 1358
9999 mem: storing 0 in location 1359
9999 mem: storing 0 in location 1360
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
9999 mem: storing 0 in location 1368
9999 mem: storing 0 in location 1369
9999 mem: storing 0 in location 1370
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: storing 0 in location 1378
9999 mem: storing 0 in location 1379
9999 mem: storing 0 in location 1380
9999 mem: storing 31 in location 1349
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1351 is 0
9999 mem: incrementing refcount of 1008: 59 -> 60
9999 mem: storing 1008 in location 1351
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1352 is 0
9999 mem: incrementing refcount of 1148: 4 -> 5
9999 mem: storing 1148 in location 1352
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1353
9999 mem: storing 3 in location 1354
9999 mem: storing 0 in location 1355
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1352 is 1148
9998 run: jumping to instruction 7
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1353 is 65513
9999 mem: location 1354 is 3
9999 mem: location 1355 is 0
9998 run: address to copy is 1354
9998 run: its type is "number"
9999 mem: location 1354 is 3
9999 mem: storing 3 in location 1356
 105 run: jump-if {click-row: "number"}, {: "offset"}
9999 mem: location 1356 is 3
9998 run: jumping to instruction 12
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1353 is 65513
9999 mem: location 1354 is 3
9999 mem: location 1355 is 0
9998 run: address to copy is 1355
9998 run: its type is "number"
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1357
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1358
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1357 is 0
9999 mem: location 1358 is 0
9999 mem: storing 0 in location 1359
 105 run: jump-unless {too-far-left?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 19
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1360
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1357 is 0
9999 mem: location 1360 is 9
9999 mem: storing 0 in location 1361
 105 run: jump-unless {too-far-right?: "boolean"}, {: "offset"}
9999 mem: location 1361 is 0
9998 run: jumping to instruction 25
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 1
9999 mem: storing 1 in location 1362
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1363
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1364 is 0
9999 mem: incrementing refcount of 1167: 9 -> 10
9999 mem: storing 1167 in location 1364
 105 run: {editor: ("address" "editor-data")} <- snap-cursor {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1351 is 1008
9999 mem: location 1352 is 1148
9999 mem: location 1356 is 3
9999 mem: location 1357 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1227
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1230 is 0
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: storing 1008 in location 1230
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1231 is 0
9999 mem: incrementing refcount of 1148: 5 -> 6
9999 mem: storing 1148 in location 1231
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1232
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1233
 106 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1231 is 1148
9998 run: jumping to instruction 8
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1234
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1235
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1230 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 61 -> 62
9999 mem: storing 1008 in location 1185
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 107 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1236
 106 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1237 is 0
9999 mem: incrementing refcount of 1167: 10 -> 11
9999 mem: storing 1167 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1167
9999 mem: location 1238 is 0
9999 mem: incrementing refcount of 1167: 11 -> 12
9999 mem: storing 1167 in location 1238
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: storing 1167 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1167
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1178: 7 -> 8
9999 mem: storing 1178 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 13 -> 12
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1237
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1239
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1234 is 0
9999 mem: storing 0 in location 1240
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1232 is 3
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 3 in location 1156
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1232 is 3
9999 mem: storing 3 in location 1241
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1233 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1233 is 0
9999 mem: storing 0 in location 1242
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1167
9999 mem: location 1243 is 0
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: storing 1167 in location 1243
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1178
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1237 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1179
9998 run: its type is "character"
9999 mem: location 1179 is 97
9999 mem: storing 97 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 97
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1178: 8 -> 9
9999 mem: storing 1178 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1178
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1187: 7 -> 8
9999 mem: storing 1187 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1167: 13 -> 14
9999 mem: storing 1167 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1167
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1178
9999 mem: location 1170 is 0
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1169 is 1178
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1178: 8 -> 9
9999 mem: storing 1178 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1178
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1178
9999 mem: storing 1178 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1187
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 98
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1237 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1188
9998 run: its type is "character"
9999 mem: location 1188 is 98
9999 mem: storing 98 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 98
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1187: 8 -> 9
9999 mem: storing 1187 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1187
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 98
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1191: 7 -> 8
9999 mem: storing 1191 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1178
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1178: 9 -> 10
9999 mem: storing 1178 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1178
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: location 1179 is 97
9999 mem: location 1180 is 1187
9999 mem: location 1181 is 1167
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9998 run: address to copy is 1180
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1180 is 1187
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1187: 8 -> 9
9999 mem: storing 1187 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1187
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1178
9999 mem: skipping refcount at 1178
9999 mem: decrementing refcount of 1178: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: storing 1187 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1191
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 99
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1237 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 99
9999 mem: storing 99 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 99
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1191: 8 -> 9
9999 mem: storing 1191 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1191
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 99
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 7 -> 8
9999 mem: storing 1195 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1187: 9 -> 10
9999 mem: storing 1187 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1187
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 98
9999 mem: location 1189 is 1191
9999 mem: location 1190 is 1178
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1189 is 1191
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1191: 8 -> 9
9999 mem: storing 1191 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1191
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1187
9999 mem: skipping refcount at 1187
9999 mem: decrementing refcount of 1187: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: storing 1191 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1195
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1237 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 10
9999 mem: storing 10 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 10
9999 mem: storing 1 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 1
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 48
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1239 is 1
9999 mem: storing 2 in location 1239
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1234 is 0
9999 mem: storing 0 in location 1240
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1195: 8 -> 9
9999 mem: storing 1195 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1195
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 7 -> 8
9999 mem: storing 1199 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1191: 9 -> 10
9999 mem: storing 1191 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1191
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 99
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1187
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1193 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 8 -> 9
9999 mem: storing 1195 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1191
9999 mem: skipping refcount at 1191
9999 mem: decrementing refcount of 1191: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1238
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 24
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1199
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1237 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 100
9999 mem: storing 100 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 100
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 8 -> 9
9999 mem: storing 1199 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 7 -> 8
9999 mem: storing 1203 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1195: 9 -> 10
9999 mem: storing 1195 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1195
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 8 -> 9
9999 mem: storing 1199 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1203
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1237 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 101
9999 mem: storing 101 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 101
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 8 -> 9
9999 mem: storing 1203 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 7 -> 8
9999 mem: storing 1207 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 9 -> 10
9999 mem: storing 1199 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 8 -> 9
9999 mem: storing 1203 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1207
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1237 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 102
9999 mem: storing 102 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 102
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 8 -> 9
9999 mem: storing 1207 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 7 -> 8
9999 mem: storing 1211 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 9 -> 10
9999 mem: storing 1203 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 8 -> 9
9999 mem: storing 1207 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1211
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1237 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 10
9999 mem: storing 1 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 2
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jumping to instruction 48
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1239 is 2
9999 mem: storing 3 in location 1239
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1234 is 0
9999 mem: storing 0 in location 1240
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 8 -> 9
9999 mem: storing 1211 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1215: 7 -> 8
9999 mem: storing 1215 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 9 -> 10
9999 mem: storing 1207 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1211: 8 -> 9
9999 mem: storing 1211 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1238
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 24
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1215
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1241 is 3
9999 mem: storing 1 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1242 is 0
9999 mem: storing 1 in location 1246
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1211
9999 mem: location 1243 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 13 -> 12
9999 mem: incrementing refcount of 1211: 9 -> 10
9999 mem: storing 1211 in location 1243
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1167
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1243 is 1211
9999 mem: location 1231 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 12 -> 11
9999 mem: incrementing refcount of 1211: 10 -> 11
9999 mem: storing 1211 in location 1152
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 103
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1237 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is "character"
9999 mem: location 1216 is 103
9999 mem: storing 103 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 103
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1215: 8 -> 9
9999 mem: storing 1215 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1215
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 103
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1219: 7 -> 8
9999 mem: storing 1219 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1219
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 11 -> 12
9999 mem: storing 1211 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1213 is 1215
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1215: 8 -> 9
9999 mem: storing 1215 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1215
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 12 -> 11
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1219
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1241 is 3
9999 mem: storing 1 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1242 is 0
9999 mem: storing 0 in location 1246
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 104
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1237 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is "character"
9999 mem: location 1220 is 104
9999 mem: storing 104 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 104
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1219: 8 -> 9
9999 mem: storing 1219 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1219
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 104
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1223: 3 -> 4
9999 mem: storing 1223 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1223
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: decrementing refcount of 1219: 9 -> 8
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: storing 1223 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1215: 9 -> 10
9999 mem: storing 1215 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1215
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 103
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1217
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1217 is 1219
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1219: 8 -> 9
9999 mem: storing 1219 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1219
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1215
9999 mem: skipping refcount at 1215
9999 mem: decrementing refcount of 1215: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: storing 1219 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 1223
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1236 is 5
9999 mem: storing 0 in location 1244
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1244 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1241 is 3
9999 mem: storing 1 in location 1245
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1242 is 0
9999 mem: storing 0 in location 1246
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1246 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1237 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 105
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1237 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is "character"
9999 mem: location 1224 is 105
9999 mem: storing 105 in location 1247
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1247 is 105
9999 mem: storing 0 in location 1248
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1235 is 9
9999 mem: storing 0 in location 1250
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1237 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1223: 4 -> 5
9999 mem: storing 1223 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1223
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1223
9999 mem: skipping refcount at 1223
9999 mem: location 1224 is 105
9999 mem: location 1225 is 0
9999 mem: location 1226 is 1219
9999 mem: location 1185 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1225
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1225 is 0
9999 mem: location 1186 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 0
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1223
9999 mem: skipping refcount at 1223
9999 mem: decrementing refcount of 1223: 5 -> 4
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1237
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1238 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1219: 9 -> 10
9999 mem: storing 1219 in location 1185
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1219
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: location 1220 is 104
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1221
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1221 is 1223
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1223: 4 -> 5
9999 mem: storing 1223 in location 1186
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1186 is 1223
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1219
9999 mem: skipping refcount at 1219
9999 mem: decrementing refcount of 1219: 10 -> 9
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: storing 1223 in location 1238
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 66
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1241 is 3
9999 mem: storing 1 in location 1245
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1242 is 0
9999 mem: storing 0 in location 1251
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1245 is 1
9999 mem: location 1251 is 0
9999 mem: storing 0 in location 1252
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1239 is 3
9999 mem: location 1241 is 3
9999 mem: storing 0 in location 1253
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: storing 0 in location 1254
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 0
9998 run: jumping to instruction 80
 106 run: reply {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1231 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 0 in location 1230
9999 mem: clearing target-row:number
9999 mem: storing 0 in location 1232
9999 mem: clearing target-column:number
9999 mem: storing 0 in location 1233
9999 mem: clearing left:number
9999 mem: storing 0 in location 1234
9999 mem: clearing right:number
9999 mem: storing 0 in location 1235
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1236
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1237 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1237
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1238 is 1223
9999 mem: skipping refcount at 1223
9999 mem: decrementing refcount of 1223: 5 -> 4
9999 mem: storing 0 in location 1238
9999 mem: clearing curr
9999 mem: location 1237 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1237
9999 mem: clearing row:number
9999 mem: storing 0 in location 1239
9999 mem: clearing column:number
9999 mem: storing 0 in location 1240
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1241
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1242
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1243 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 11 -> 10
9999 mem: storing 0 in location 1243
9999 mem: clearing off-screen?:boolean
9999 mem: storing 0 in location 1244
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1245
9999 mem: clearing at-cursor?:boolean
9999 mem: storing 0 in location 1246
9999 mem: clearing before-cursor
9999 mem: location 1243 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1243
9999 mem: clearing c:character
9999 mem: storing 0 in location 1247
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1248
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1245
9999 mem: clearing left-of-cursor?:boolean
9999 mem: storing 0 in location 1249
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1242
9999 mem: clearing before-cursor
9999 mem: location 1243 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1243
9999 mem: clearing row
9999 mem: storing 0 in location 1239
9999 mem: clearing column
9999 mem: storing 0 in location 1240
9999 mem: clearing curr
9999 mem: location 1237 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1237
9999 mem: clearing prev
9999 mem: location 1238 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1238
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1250
9999 mem: clearing column
9999 mem: storing 0 in location 1240
9999 mem: clearing row
9999 mem: storing 0 in location 1239
9999 mem: clearing curr
9999 mem: location 1237 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1237
9999 mem: clearing prev
9999 mem: location 1238 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1238
9999 mem: clearing column
9999 mem: storing 0 in location 1240
9999 mem: clearing at-cursor-row?:boolean
9999 mem: storing 0 in location 1245
9999 mem: clearing cursor-outside-line?:boolean
9999 mem: storing 0 in location 1251
9999 mem: clearing before-cursor-on-same-line?:boolean
9999 mem: storing 0 in location 1252
9999 mem: clearing above-cursor-row?:boolean
9999 mem: storing 0 in location 1253
9999 mem: clearing before-cursor?:boolean
9999 mem: storing 0 in location 1254
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1241
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1242
9999 mem: clearing before-cursor
9999 mem: location 1243 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1243
9999 mem: automatically abandoning 1227
9999 abandon: updating refcounts inside 1227: (array number)
9999 abandon: saving 1227 in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9999 mem: storing 1148 in location 1352
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1365
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1366 is 0
9999 mem: incrementing refcount of 1167: 11 -> 12
9999 mem: storing 1167 in location 1366
9990 schedule: move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-to-previous-line-from-left-margin
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1367
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1368
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 50
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1255
9999 mem: location 1370 is 0
9999 mem: incrementing refcount of 1255: 0 -> 1
9999 mem: storing 1255 in location 1370
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1362 is 1
9999 mem: location 1363 is 0
9999 mem: location 1364 is 1167
9999 mem: location 1367 is 3
9999 mem: location 1368 is 0
9999 mem: location 1366 is 1167
9999 mem: location 1365 is 0
9999 mem: location 1370 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1370 is 1255
9999 mem: skipping refcount at 1255
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: incrementing refcount of 1167: 13 -> 14
9999 mem: storing 1 in location 1256
9999 mem: storing 1 in location 1257
9999 mem: storing 0 in location 1258
9999 mem: storing 1167 in location 1259
9999 mem: storing 3 in location 1260
9999 mem: storing 0 in location 1261
9999 mem: storing 1167 in location 1262
9999 mem: storing 0 in location 1263
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1352 is 1148
9999 mem: location 1370 is 1255
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1174 is 0
9999 mem: incrementing refcount of 1148: 6 -> 7
9999 mem: storing 1148 in location 1174
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1255: 1 -> 2
9999 mem: storing 1255 in location 1175
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1159 is 0
9999 mem: location 1176 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1176
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1255
9999 mem: location 1176 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1255: 2 -> 3
9999 mem: storing 1255 in location 1164
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1381
9999 mem: storing 0 in location 1381
9999 mem: storing 0 in location 1382
9999 mem: storing 0 in location 1383
9999 mem: location 1166 is 0
9999 mem: incrementing refcount of 1381: 0 -> 1
9999 mem: storing 1381 in location 1166
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1255
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1381
9999 mem: skipping refcount at 1381
9999 mem: location 1166 is 1381
9999 mem: skipping refcount at 1381
9999 mem: incrementing refcount of 1255: 3 -> 4
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1255 in location 1382
9999 mem: storing 0 in location 1383
 107 run: reply {result: ("address" "list" "address" "operation")}
9999 mem: location 1166 is 1381
9999 mem: clearing x:_elem
9999 mem: location 1164 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 4 -> 3
9999 mem: storing 0 in location 1164
9999 mem: clearing in:address:list:_elem
9999 mem: location 1165 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1381
9999 mem: storing 1381 in location 1176
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1176 is 1381
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1159
9999 mem: location 1159 is 0
9999 mem: incrementing refcount of 1381: 1 -> 2
9999 mem: storing 1381 in location 1159
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1160
9999 mem: location 1160 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1160
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1174 is 1148
9999 mem: clearing op:address:operation
9999 mem: location 1175 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 3 -> 2
9999 mem: storing 0 in location 1175
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1176 is 1381
9999 mem: skipping refcount at 1381
9999 mem: decrementing refcount of 1381: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing undo
9999 mem: location 1176 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1176
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: clearing redo
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9999 mem: storing 1148 in location 1352
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1352 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1351 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 0 in location 1351
9999 mem: clearing editor:address:editor-data
9999 mem: location 1352 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 7 -> 6
9999 mem: storing 0 in location 1352
9999 mem: clearing t:touch-event
9999 mem: storing 0 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: clearing click-row:number
9999 mem: storing 0 in location 1356
9999 mem: clearing click-column:number
9999 mem: storing 0 in location 1357
9999 mem: clearing left:number
9999 mem: storing 0 in location 1358
9999 mem: clearing too-far-left?:boolean
9999 mem: storing 0 in location 1359
9999 mem: clearing right:number
9999 mem: storing 0 in location 1360
9999 mem: clearing too-far-right?:boolean
9999 mem: storing 0 in location 1361
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1362
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1363
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1364 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 0 in location 1364
9999 mem: clearing editor
9999 mem: location 1352 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1352
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1365
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1366 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 13 -> 12
9999 mem: storing 0 in location 1366
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1367
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1368
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1369 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1369
9999 mem: clearing op:address:operation
9999 mem: location 1370 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 2 -> 1
9999 mem: storing 0 in location 1370
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1378
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1379
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1380
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1371
9999 mem: storing 0 in location 1372
9999 mem: storing 0 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
9999 mem: storing 0 in location 1376
9999 mem: storing 0 in location 1377
9999 mem: clearing op:address:operation
9999 mem: location 1370 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1370
9999 mem: clearing editor
9999 mem: location 1352 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1352
9999 mem: automatically abandoning 1348
9999 abandon: updating refcounts inside 1348: (array number)
9999 abandon: saving 1348 in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1335
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1336
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1332 is 1008
9999 mem: location 1335 is 3
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 59 -> 60
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 3
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 3 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1332
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1333 is 1326
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1326: 3 -> 4
9999 mem: storing 1326 in location 1296
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1326
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 1
9999 mem: location 1328 is 1316
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is "number"
9999 mem: location 1327 is 1
9999 mem: storing 1 in location 1297
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 1
9999 mem: location 1328 is 1316
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1328
9998 run: its type is ("address" "array" "event")
9999 mem: location 1328 is 1316
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1316: 1 -> 2
9999 mem: storing 1316 in location 1298
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: storing 2 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 1
9999 mem: location 1299 is 2
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9998 run: base address is 1317
9999 mem: location 1297 is 1
9998 run: address to copy is 1322
9998 run: its type is event
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65517
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: storing 1 in location 1302
9999 mem: storing 65517 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 1
9999 mem: storing 2 in location 1297
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 1
9999 mem: location 1328 is 1316
9999 mem: location 1297 is 2
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy to is 1327
9999 mem: storing 2 in location 1327
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 1
9999 mem: location 1303 is 65517
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1326
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: decrementing refcount of 1316: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing dummy:address:event
9999 mem: location 1301 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1301
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1326
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1337
9999 mem: storing 65517 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 1326 in location 1333
9999 mem: storing 1 in location 1341
9999 mem: storing 0 in location 1342
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1337 is 1
9999 mem: location 1338 is 65517
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1346
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1332 is 1008
9999 mem: location 1334 is 1148
9999 mem: location 1337 is 1
9999 mem: location 1338 is 65517
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 mem: new alloc: 1384
9999 mem: storing 0 in location 1384
9999 mem: storing 0 in location 1385
9999 mem: storing 0 in location 1386
9999 mem: storing 0 in location 1387
9999 mem: storing 0 in location 1388
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
9999 mem: storing 0 in location 1394
9999 mem: storing 0 in location 1395
9999 mem: storing 0 in location 1396
9999 mem: storing 0 in location 1397
9999 mem: storing 0 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
9999 mem: storing 0 in location 1403
9999 mem: storing 0 in location 1404
9999 mem: storing 0 in location 1405
9999 mem: storing 0 in location 1406
9999 mem: storing 0 in location 1407
9999 mem: storing 0 in location 1408
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: storing 0 in location 1419
9999 mem: storing 0 in location 1420
9999 mem: storing 0 in location 1421
9999 mem: storing 0 in location 1422
9999 mem: storing 0 in location 1423
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: storing 0 in location 1431
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: storing 0 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
9999 mem: storing 0 in location 1444
9999 mem: storing 0 in location 1445
9999 mem: storing 0 in location 1446
9999 mem: storing 0 in location 1447
9999 mem: storing 0 in location 1448
9999 mem: storing 0 in location 1449
9999 mem: storing 0 in location 1450
9999 mem: storing 0 in location 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 0 in location 1453
9999 mem: storing 0 in location 1454
9999 mem: storing 0 in location 1455
9999 mem: storing 0 in location 1456
9999 mem: storing 0 in location 1457
9999 mem: storing 0 in location 1458
9999 mem: storing 0 in location 1459
9999 mem: storing 0 in location 1460
9999 mem: storing 0 in location 1461
9999 mem: storing 0 in location 1462
9999 mem: storing 0 in location 1463
9999 mem: storing 0 in location 1464
9999 mem: storing 0 in location 1465
9999 mem: storing 0 in location 1466
9999 mem: storing 0 in location 1467
9999 mem: storing 0 in location 1468
9999 mem: storing 0 in location 1469
9999 mem: storing 0 in location 1470
9999 mem: storing 0 in location 1471
9999 mem: storing 0 in location 1472
9999 mem: storing 0 in location 1473
9999 mem: storing 0 in location 1474
9999 mem: storing 0 in location 1475
9999 mem: storing 0 in location 1476
9999 mem: storing 0 in location 1477
9999 mem: storing 0 in location 1478
9999 mem: storing 0 in location 1479
9999 mem: storing 0 in location 1480
9999 mem: storing 0 in location 1481
9999 mem: storing 0 in location 1482
9999 mem: storing 0 in location 1483
9999 mem: storing 0 in location 1484
9999 mem: storing 0 in location 1485
9999 mem: storing 0 in location 1486
9999 mem: storing 0 in location 1487
9999 mem: storing 102 in location 1385
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1387 is 0
9999 mem: incrementing refcount of 1008: 60 -> 61
9999 mem: storing 1008 in location 1387
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1388 is 0
9999 mem: incrementing refcount of 1148: 6 -> 7
9999 mem: storing 1148 in location 1388
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1389
9999 mem: storing 65517 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1393
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1388 is 1148
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1387 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 61 -> 62
9999 mem: storing 1008 in location 1185
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1186
 106 run: return {width: "number"}
9999 mem: location 1186 is 10
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1394
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1387 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1008: 61 -> 62
9999 mem: storing 1008 in location 1185
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1185 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1186
 106 run: return {height: "number"}
9999 mem: location 1186 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1185 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1395
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1396
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1397
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1211
9999 mem: location 1398 is 0
9999 mem: incrementing refcount of 1211: 10 -> 11
9999 mem: storing 1211 in location 1398
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1399
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1400
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1399 is 3
9999 mem: storing 3 in location 1401
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1400 is 0
9999 mem: storing 0 in location 1402
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1389 is 1
9999 mem: location 1390 is 65517
9999 mem: location 1391 is 0
9999 mem: location 1392 is 0
9999 mem: storing 0 in location 1404
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1404 is 0
9998 run: jumping to instruction 460
 105 run: {k: "number"}, {is-keycode?: "boolean"} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1389 is 1
9999 mem: location 1390 is 65517
9999 mem: location 1391 is 0
9999 mem: location 1392 is 0
9999 mem: storing 1 in location 1475
9999 mem: storing 65517 in location 1474
 105 run: assert {is-keycode?: "boolean"}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1475 is 1
 105 run: {page-up?: "boolean"} <- equal {k: "number"}, {65519: "literal", "page-up": ()}
9999 mem: location 1474 is 65517
9999 mem: storing 0 in location 1447
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 502
 105 run: {page-down?: "boolean"} <- equal {k: "number"}, {65518: "literal", "page-down": ()}
9999 mem: location 1474 is 65517
9999 mem: storing 0 in location 1458
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 541
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: "number"}, {65520: "literal", "end": ()}
9999 mem: location 1474 is 65517
9999 mem: storing 0 in location 1463
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 577
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: "number"}, {65521: "literal", "home": ()}
9999 mem: location 1474 is 65517
9999 mem: storing 0 in location 1464
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 613
 105 run: {move-to-next-line?: "boolean"} <- equal {k: "number"}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1474 is 65517
9999 mem: storing 0 in location 1476
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 648
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: "number"}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1474 is 65517
9999 mem: storing 1 in location 1477
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1449
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1450
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1451 is 0
9999 mem: incrementing refcount of 1167: 12 -> 13
9999 mem: storing 1167 in location 1451
 105 run: {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- move-to-previous-line {editor: ("address" "editor-data")}
9999 mem: location 1388 is 1148
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1488
9999 mem: storing 0 in location 1488
9999 mem: storing 0 in location 1489
9999 mem: storing 0 in location 1490
9999 mem: storing 0 in location 1491
9999 mem: storing 0 in location 1492
9999 mem: storing 0 in location 1493
9999 mem: storing 0 in location 1494
9999 mem: storing 0 in location 1495
9999 mem: storing 0 in location 1496
9999 mem: storing 0 in location 1497
9999 mem: storing 0 in location 1498
9999 mem: storing 0 in location 1499
9999 mem: storing 0 in location 1500
9999 mem: storing 0 in location 1501
9999 mem: storing 0 in location 1502
9999 mem: storing 0 in location 1503
9999 mem: storing 0 in location 1504
9999 mem: storing 0 in location 1505
9999 mem: storing 0 in location 1506
9999 mem: storing 0 in location 1507
9999 mem: storing 0 in location 1508
9999 mem: storing 0 in location 1509
9999 mem: storing 20 in location 1489
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1491 is 0
9999 mem: incrementing refcount of 1148: 7 -> 8
9999 mem: storing 1148 in location 1491
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1492
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1493
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1211
9999 mem: location 1494 is 0
9999 mem: incrementing refcount of 1211: 11 -> 12
9999 mem: storing 1211 in location 1494
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1495
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1496
 106 run: {already-at-top?: "boolean"} <- lesser-or-equal {cursor-row: "number"}, {1: "literal", "top": ()}
9999 mem: location 1492 is 3
9999 mem: storing 0 in location 1497
 106 run: jump-if {already-at-top?: "boolean"}, {: "offset"}
9999 mem: location 1497 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "duplex-list" "character")} <- copy {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1494 is 1211
9999 mem: location 1498 is 0
9999 mem: incrementing refcount of 1211: 12 -> 13
9999 mem: storing 1211 in location 1498
 106 run: {old: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1211
9999 mem: location 1499 is 0
9999 mem: incrementing refcount of 1211: 13 -> 14
9999 mem: storing 1211 in location 1499
 106 run: {c2: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1498 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1498 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1500
 106 run: {at-newline?: "boolean"} <- equal {c2: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1500 is 10
9999 mem: storing 1 in location 1501
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1501 is 1
9998 run: jumping to instruction 23
 106 run: {old: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1211
9999 mem: location 1499 is 1211
9999 mem: skipping refcount at 1211
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1211 in location 1499
 106 run: {curr: ("address" "duplex-list" "character")} <- before-previous-line {curr: ("address" "duplex-list" "character")}, {editor: ("address" "editor-data")}
9999 mem: location 1498 is 1211
9999 mem: location 1491 is 1148
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1510
9999 mem: storing 0 in location 1510
9999 mem: storing 0 in location 1511
9999 mem: storing 0 in location 1512
9999 mem: storing 0 in location 1513
9999 mem: storing 0 in location 1514
9999 mem: storing 0 in location 1515
9999 mem: storing 0 in location 1516
9999 mem: storing 0 in location 1517
9999 mem: storing 0 in location 1518
9999 mem: storing 0 in location 1519
9999 mem: storing 0 in location 1520
9999 mem: storing 0 in location 1521
9999 mem: storing 0 in location 1522
9999 mem: storing 0 in location 1523
9999 mem: storing 0 in location 1524
9999 mem: storing 0 in location 1525
9999 mem: storing 14 in location 1511
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1513 is 0
9999 mem: incrementing refcount of 1211: 14 -> 15
9999 mem: storing 1211 in location 1513
 107 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1514 is 0
9999 mem: incrementing refcount of 1148: 8 -> 9
9999 mem: storing 1148 in location 1514
 107 run: {curr: ("address" "duplex-list" "character")} <- copy {in: ("address" "duplex-list" "character")}
9999 mem: location 1513 is 1211
9999 mem: location 1515 is 0
9999 mem: incrementing refcount of 1211: 15 -> 16
9999 mem: storing 1211 in location 1515
 107 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1515 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1515 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1516
 107 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1514 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1514 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1517
 107 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1514 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1514 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1518
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1518 is 9
9999 mem: location 1517 is 0
9999 mem: storing 9 in location 1519
 107 run: {sentinel: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1514 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1514 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1149
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1149 is 1167
9999 mem: location 1520 is 0
9999 mem: incrementing refcount of 1167: 13 -> 14
9999 mem: storing 1167 in location 1520
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "duplex-list" "character")}, {sentinel: ("address" "duplex-list" "character")}
9999 mem: location 1515 is 1211
9999 mem: location 1520 is 1167
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1139
 108 run: {curr: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1142 is 0
9999 mem: incrementing refcount of 1211: 16 -> 17
9999 mem: storing 1211 in location 1142
 108 run: {start: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1143 is 0
9999 mem: incrementing refcount of 1167: 14 -> 15
9999 mem: storing 1167 in location 1143
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1144
 108 run: jump-if {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1142 is 1211
9998 run: jumping to instruction 7
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "duplex-list" "character")}, {start: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1211
9999 mem: location 1143 is 1167
9999 mem: storing 0 in location 1145
 108 run: jump-unless {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1145 is 0
9998 run: jumping to instruction 12
 108 run: {curr: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1211
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 109 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 17 -> 18
9999 mem: storing 1211 in location 1185
 109 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 109 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 9 -> 10
9999 mem: storing 1207 in location 1186
 109 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 18 -> 17
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1142
 108 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1142 is 1207
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "duplex-list" "character")}, {start: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1207
9999 mem: location 1143 is 1167
9999 mem: storing 0 in location 1145
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1145 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1142 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1142 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 102
9999 mem: storing 102 in location 1146
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1146 is 102
9999 mem: storing 0 in location 1147
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1147 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1144 is 0
9999 mem: storing 1 in location 1144
 108 run: jump {: "offset"}
9998 run: jumping to instruction 14
 108 run: {curr: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1207
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 109 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 10 -> 11
9999 mem: storing 1207 in location 1185
 109 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 109 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 9 -> 10
9999 mem: storing 1203 in location 1186
 109 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 11 -> 10
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1142
 108 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1142 is 1203
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "duplex-list" "character")}, {start: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1203
9999 mem: location 1143 is 1167
9999 mem: storing 0 in location 1145
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1145 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1142 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1142 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 101
9999 mem: storing 101 in location 1146
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1146 is 101
9999 mem: storing 0 in location 1147
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1147 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1144 is 1
9999 mem: storing 2 in location 1144
 108 run: jump {: "offset"}
9998 run: jumping to instruction 14
 108 run: {curr: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1203
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 109 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 10 -> 11
9999 mem: storing 1203 in location 1185
 109 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 109 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1206
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1206 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 9 -> 10
9999 mem: storing 1199 in location 1186
 109 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 11 -> 10
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1142
 108 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1142 is 1199
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "duplex-list" "character")}, {start: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1199
9999 mem: location 1143 is 1167
9999 mem: storing 0 in location 1145
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1145 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1142 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1142 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 100
9999 mem: storing 100 in location 1146
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1146 is 100
9999 mem: storing 0 in location 1147
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1147 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1144 is 2
9999 mem: storing 3 in location 1144
 108 run: jump {: "offset"}
9998 run: jumping to instruction 14
 108 run: {curr: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1199
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 109 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 10 -> 11
9999 mem: storing 1199 in location 1185
 109 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 109 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1202
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1202 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 9 -> 10
9999 mem: storing 1195 in location 1186
 109 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 11 -> 10
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1142
 108 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1142 is 1195
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "duplex-list" "character")}, {start: ("address" "duplex-list" "character")}
9999 mem: location 1142 is 1195
9999 mem: location 1143 is 1167
9999 mem: storing 0 in location 1145
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1145 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1142 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1142 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1196
9998 run: its type is "character"
9999 mem: location 1196 is 10
9999 mem: storing 10 in location 1146
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1146 is 10
9999 mem: storing 1 in location 1147
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1147 is 1
9998 run: jumping to instruction 23
 108 run: reply {result: "number"}
9999 mem: location 1144 is 3
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1142 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 10 -> 9
9999 mem: storing 0 in location 1142
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1143 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 15 -> 14
9999 mem: storing 0 in location 1143
9999 mem: clearing at-start?:boolean
9999 mem: storing 0 in location 1145
9999 mem: clearing curr
9999 mem: location 1142 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1142
9999 mem: clearing at-start?:boolean
9999 mem: storing 0 in location 1145
9999 mem: clearing c:character
9999 mem: storing 0 in location 1146
9999 mem: clearing at-newline?:boolean
9999 mem: storing 0 in location 1147
9999 mem: automatically abandoning 1139
9999 abandon: updating refcounts inside 1139: (array number)
9999 abandon: saving 1139 in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1521
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1521 is 3
9998 run: jumping to instruction 18
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1521 is 3
9999 mem: location 1519 is 9
9999 mem: storing 3 in location 1523
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1523 is 3
9998 run: jumping to instruction 23
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1523 is 3
9999 mem: storing 4 in location 1523
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1524
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1524 is 0
9999 mem: location 1523 is 4
9999 mem: storing 0 in location 1525
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1515 is 1211
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 108 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1211: 17 -> 18
9999 mem: storing 1211 in location 1185
 108 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1211
9998 run: jumping to instruction 5
 108 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1214
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1214 is 1207
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1207: 10 -> 11
9999 mem: storing 1207 in location 1186
 108 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 18 -> 17
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1522
 107 run: jump-unless {prev: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1522 is 1207
9998 run: jump-unless fell through
 107 run: {curr: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1522 is 1207
9999 mem: location 1515 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: incrementing refcount of 1207: 11 -> 12
9999 mem: storing 1207 in location 1515
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1524 is 0
9999 mem: storing 1 in location 1524
 107 run: jump {: "offset"}
9998 run: jumping to instruction 27
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1524 is 1
9999 mem: location 1523 is 4
9999 mem: storing 0 in location 1525
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1515 is 1207
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 108 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1207: 12 -> 13
9999 mem: storing 1207 in location 1185
 108 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1207
9998 run: jumping to instruction 5
 108 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1210
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1210 is 1203
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1203: 10 -> 11
9999 mem: storing 1203 in location 1186
 108 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 13 -> 12
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1522
 107 run: jump-unless {prev: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1522 is 1203
9998 run: jump-unless fell through
 107 run: {curr: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1522 is 1203
9999 mem: location 1515 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 12 -> 11
9999 mem: incrementing refcount of 1203: 11 -> 12
9999 mem: storing 1203 in location 1515
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1524 is 1
9999 mem: storing 2 in location 1524
 107 run: jump {: "offset"}
9998 run: jumping to instruction 27
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1524 is 2
9999 mem: location 1523 is 4
9999 mem: storing 0 in location 1525
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1515 is 1203
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 108 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1203: 12 -> 13
9999 mem: storing 1203 in location 1185
 108 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1203
9998 run: jumping to instruction 5
 108 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1206
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1206 is 1199
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1199: 10 -> 11
9999 mem: storing 1199 in location 1186
 108 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1522
 107 run: jump-unless {prev: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1522 is 1199
9998 run: jump-unless fell through
 107 run: {curr: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1522 is 1199
9999 mem: location 1515 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 12 -> 11
9999 mem: incrementing refcount of 1199: 11 -> 12
9999 mem: storing 1199 in location 1515
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1524 is 2
9999 mem: storing 3 in location 1524
 107 run: jump {: "offset"}
9998 run: jumping to instruction 27
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1524 is 3
9999 mem: location 1523 is 4
9999 mem: storing 0 in location 1525
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "duplex-list" "character")} <- prev_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1515 is 1199
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 108 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1199: 12 -> 13
9999 mem: storing 1199 in location 1185
 108 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1185 is 1199
9998 run: jumping to instruction 5
 108 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1202
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1202 is 1195
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1195: 9 -> 10
9999 mem: storing 1195 in location 1186
 108 run: return {result: ("address" "duplex-list" "character")}
9999 mem: location 1186 is 1195
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1185 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 13 -> 12
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1522
 107 run: jump-unless {prev: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1522 is 1195
9998 run: jump-unless fell through
 107 run: {curr: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1522 is 1195
9999 mem: location 1515 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 12 -> 11
9999 mem: incrementing refcount of 1195: 10 -> 11
9999 mem: storing 1195 in location 1515
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1524 is 3
9999 mem: storing 4 in location 1524
 107 run: jump {: "offset"}
9998 run: jumping to instruction 27
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1524 is 4
9999 mem: location 1523 is 4
9999 mem: storing 1 in location 1525
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 1
9998 run: jumping to instruction 34
 107 run: return {curr: ("address" "duplex-list" "character")}
9999 mem: location 1515 is 1195
9999 mem: clearing in:address:duplex-list:character
9999 mem: location 1513 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 16 -> 15
9999 mem: storing 0 in location 1513
9999 mem: clearing editor:address:editor-data
9999 mem: location 1514 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 9 -> 8
9999 mem: storing 0 in location 1514
9999 mem: clearing c:character
9999 mem: storing 0 in location 1516
9999 mem: clearing left:number
9999 mem: storing 0 in location 1517
9999 mem: clearing right:number
9999 mem: storing 0 in location 1518
9999 mem: clearing max-line-length:number
9999 mem: storing 0 in location 1519
9999 mem: clearing sentinel:address:duplex-list:character
9999 mem: location 1520 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 0 in location 1520
9999 mem: clearing len:number
9999 mem: storing 0 in location 1521
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1522 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 11 -> 10
9999 mem: storing 0 in location 1522
9999 mem: clearing _
9999 mem: clearing max:number
9999 mem: storing 0 in location 1523
9999 mem: clearing max
9999 mem: storing 0 in location 1523
9999 mem: clearing max
9999 mem: storing 0 in location 1523
9999 mem: clearing count:number
9999 mem: storing 0 in location 1524
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1525
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1522 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1522
9999 mem: clearing count
9999 mem: storing 0 in location 1524
9999 mem: automatically abandoning 1510
9999 abandon: updating refcounts inside 1510: (array number)
9999 abandon: saving 1510 in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1195
9999 mem: storing 1195 in location 1498
 106 run: {no-motion?: "boolean"} <- equal {curr: ("address" "duplex-list" "character")}, {old: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1195
9999 mem: location 1499 is 1211
9999 mem: storing 0 in location 1502
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1503
 106 run: jump-unless {no-motion?: "boolean"}, {: "offset"}
9999 mem: location 1502 is 0
9998 run: jumping to instruction 32
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1498 is 1195
9999 mem: location 1494 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 15 -> 14
9999 mem: incrementing refcount of 1195: 10 -> 11
9999 mem: storing 1195 in location 1494
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1211
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1494 is 1195
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 14 -> 13
9999 mem: incrementing refcount of 1195: 11 -> 12
9999 mem: storing 1195 in location 1152
 106 run: {cursor-row: "number"} <- subtract {cursor-row: "number"}, {1: "literal"}
9999 mem: location 1492 is 3
9999 mem: storing 2 in location 1492
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 3
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1492 is 2
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1156
9999 mem: storing 2 in location 1156
 106 run: {target-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1493 is 0
9999 mem: storing 0 in location 1504
 106 run: {cursor-column: "number"} <- copy {left: "number"}
9999 mem: location 1495 is 0
9999 mem: storing 0 in location 1493
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1493 is 0
9999 mem: location 1491 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {target-column: "number"}
9999 mem: location 1493 is 0
9999 mem: location 1504 is 0
9999 mem: storing 1 in location 1505
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1505 is 1
9998 run: jumping to instruction 54
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1503
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1491 is 1148
9999 mem: location 1503 is 0
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1492
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1493
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1494 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 12 -> 11
9999 mem: storing 0 in location 1494
9999 mem: clearing left:number
9999 mem: storing 0 in location 1495
9999 mem: clearing right:number
9999 mem: storing 0 in location 1496
9999 mem: clearing already-at-top?:boolean
9999 mem: storing 0 in location 1497
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1498 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 11 -> 10
9999 mem: storing 0 in location 1498
9999 mem: clearing old:address:duplex-list:character
9999 mem: location 1499 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 13 -> 12
9999 mem: storing 0 in location 1499
9999 mem: clearing c2:character
9999 mem: storing 0 in location 1500
9999 mem: clearing at-newline?:boolean
9999 mem: storing 0 in location 1501
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1498 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1498
9999 mem: clearing no-motion?:boolean
9999 mem: storing 0 in location 1502
9999 mem: clearing old
9999 mem: location 1499 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1499
9999 mem: clearing curr
9999 mem: location 1498 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1498
9999 mem: clearing no-motion?:boolean
9999 mem: storing 0 in location 1502
9999 mem: clearing before-cursor
9999 mem: location 1494 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1494
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1492
9999 mem: clearing target-column:number
9999 mem: storing 0 in location 1504
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1493
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1505
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1498 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1498
9999 mem: clearing currc:character
9999 mem: storing 0 in location 1506
9999 mem: clearing at-newline?:boolean
9999 mem: storing 0 in location 1501
9999 mem: clearing before-cursor
9999 mem: location 1494 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1494
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1493
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1507 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1507
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1508 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1508
9999 mem: clearing top-of-screen
9999 mem: location 1507 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1507
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1509
9999 mem: automatically abandoning 1488
9999 abandon: updating refcounts inside 1488: (array number)
9999 abandon: saving 1488 in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9998 run: result 1 is 0
9999 mem: storing 1148 in location 1388
9999 mem: storing 0 in location 1393
 105 run: {undo-coalesce-tag: "number"} <- copy {3: "literal", "up-arrow": ()}
9999 mem: storing 3 in location 1452
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1453 is 0
9999 mem: incrementing refcount of 1167: 13 -> 14
9999 mem: storing 1167 in location 1453
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1399
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1400
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1452 is 3
9998 run: jump-unless fell through
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1159 is 1381
9999 mem: location 1408 is 0
9999 mem: incrementing refcount of 1381: 1 -> 2
9999 mem: storing 1381 in location 1408
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1408 is 1381
9998 run: jump-unless fell through
 105 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1408 is 1381
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1185 is 0
9999 mem: incrementing refcount of 1381: 2 -> 3
9999 mem: storing 1381 in location 1185
 106 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1185 is 1381
9999 mem: skipping refcount at 1381
9999 mem: location 1382 is 1255
9999 mem: location 1383 is 0
9999 mem: location 1185 is 1381
9999 mem: skipping refcount at 1381
9998 run: address to copy is 1382
9998 run: its type is ("address" "operation")
9999 mem: location 1382 is 1255
9999 mem: location 1186 is 0
9999 mem: incrementing refcount of 1255: 1 -> 2
9999 mem: storing 1255 in location 1186
 106 run: reply {result: ("address" "operation")}
9999 mem: location 1186 is 1255
9999 mem: clearing in:address:list:_elem
9999 mem: location 1185 is 1381
9999 mem: skipping refcount at 1381
9999 mem: decrementing refcount of 1381: 3 -> 2
9999 mem: storing 0 in location 1185
9999 mem: automatically abandoning 1182
9999 abandon: updating refcounts inside 1182: (array number)
9999 abandon: saving 1182 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1255
9999 mem: storing 1255 in location 1407
 105 run: {move: "move-operation"}, {is-move?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1407 is 1255
9999 mem: skipping refcount at 1255
9999 mem: location 1256 is 1
9999 mem: location 1257 is 1
9999 mem: location 1258 is 0
9999 mem: location 1259 is 1167
9999 mem: location 1260 is 3
9999 mem: location 1261 is 0
9999 mem: location 1262 is 1167
9999 mem: location 1263 is 0
9999 mem: location 1264 is 0
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: location 1407 is 1255
9999 mem: skipping refcount at 1255
9999 mem: storing 1 in location 1431
9999 mem: incrementing refcount of 1167: 14 -> 15
9999 mem: incrementing refcount of 1167: 15 -> 16
9999 mem: storing 1 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 1167 in location 1426
9999 mem: storing 3 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 1167 in location 1429
9999 mem: storing 0 in location 1430
 105 run: jump-unless {is-move?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 1
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: "move-operation"}, {tag: "offset"}
9999 mem: location 1424 is 1
9999 mem: location 1425 is 0
9999 mem: location 1426 is 1167
9999 mem: location 1427 is 3
9999 mem: location 1428 is 0
9999 mem: location 1429 is 1167
9999 mem: location 1430 is 0
9998 run: address to copy is 1430
9998 run: its type is "number"
9999 mem: location 1430 is 0
9999 mem: storing 0 in location 1454
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1452 is 3
9999 mem: location 1454 is 0
9999 mem: storing 0 in location 1455
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1455 is 0
9998 run: jumping to instruction 676
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1526
9999 mem: storing 0 in location 1526
9999 mem: storing 0 in location 1527
9999 mem: storing 0 in location 1528
9999 mem: storing 0 in location 1529
9999 mem: storing 0 in location 1530
9999 mem: storing 0 in location 1531
9999 mem: storing 0 in location 1532
9999 mem: storing 0 in location 1533
9999 mem: storing 0 in location 1534
9999 mem: storing 0 in location 1535
9999 mem: storing 0 in location 1536
9999 mem: storing 0 in location 1537
9999 mem: location 1407 is 1255
9999 mem: skipping refcount at 1255
9999 mem: decrementing refcount of 1255: 2 -> 1
9999 mem: incrementing refcount of 1526: 0 -> 1
9999 mem: storing 1526 in location 1407
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1449 is 3
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1167
9999 mem: location 1399 is 2
9999 mem: location 1400 is 0
9999 mem: location 1453 is 1167
9999 mem: location 1452 is 3
9999 mem: location 1407 is 1526
9999 mem: skipping refcount at 1526
9999 mem: location 1407 is 1526
9999 mem: skipping refcount at 1526
9999 mem: incrementing refcount of 1167: 16 -> 17
9999 mem: incrementing refcount of 1167: 17 -> 18
9999 mem: storing 1 in location 1527
9999 mem: storing 3 in location 1528
9999 mem: storing 0 in location 1529
9999 mem: storing 1167 in location 1530
9999 mem: storing 2 in location 1531
9999 mem: storing 0 in location 1532
9999 mem: storing 1167 in location 1533
9999 mem: storing 3 in location 1534
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1388 is 1148
9999 mem: location 1407 is 1526
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1174 is 0
9999 mem: incrementing refcount of 1148: 8 -> 9
9999 mem: storing 1148 in location 1174
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1526: 1 -> 2
9999 mem: storing 1526 in location 1175
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1159 is 1381
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1381: 2 -> 3
9999 mem: storing 1381 in location 1176
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1526
9999 mem: location 1176 is 1381
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1526: 2 -> 3
9999 mem: storing 1526 in location 1164
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1165 is 0
9999 mem: incrementing refcount of 1381: 3 -> 4
9999 mem: storing 1381 in location 1165
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1538
9999 mem: storing 0 in location 1538
9999 mem: storing 0 in location 1539
9999 mem: storing 0 in location 1540
9999 mem: location 1166 is 0
9999 mem: incrementing refcount of 1538: 0 -> 1
9999 mem: storing 1538 in location 1166
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1526
9999 mem: location 1165 is 1381
9999 mem: location 1166 is 1538
9999 mem: skipping refcount at 1538
9999 mem: location 1166 is 1538
9999 mem: skipping refcount at 1538
9999 mem: incrementing refcount of 1526: 3 -> 4
9999 mem: incrementing refcount of 1381: 4 -> 5
9999 mem: storing 1526 in location 1539
9999 mem: storing 1381 in location 1540
 107 run: reply {result: ("address" "list" "address" "operation")}
9999 mem: location 1166 is 1538
9999 mem: clearing x:_elem
9999 mem: location 1164 is 1526
9999 mem: skipping refcount at 1526
9999 mem: decrementing refcount of 1526: 4 -> 3
9999 mem: storing 0 in location 1164
9999 mem: clearing in:address:list:_elem
9999 mem: location 1165 is 1381
9999 mem: skipping refcount at 1381
9999 mem: decrementing refcount of 1381: 5 -> 4
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1538
9999 mem: storing 1538 in location 1176
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1381
9999 mem: location 1160 is 0
9999 mem: location 1176 is 1538
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1159
9999 mem: location 1159 is 1381
9999 mem: skipping refcount at 1381
9999 mem: decrementing refcount of 1381: 4 -> 3
9999 mem: incrementing refcount of 1538: 1 -> 2
9999 mem: storing 1538 in location 1159
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1160
9999 mem: location 1160 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1160
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1174 is 1148
9999 mem: clearing op:address:operation
9999 mem: location 1175 is 1526
9999 mem: skipping refcount at 1526
9999 mem: decrementing refcount of 1526: 3 -> 2
9999 mem: storing 0 in location 1175
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1176 is 1538
9999 mem: skipping refcount at 1538
9999 mem: decrementing refcount of 1538: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing undo
9999 mem: location 1176 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1176
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: clearing redo
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9999 mem: storing 1148 in location 1388
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1387 is 1008
9999 mem: location 1388 is 1148
9999 mem: location 1393 is 0
9999 mem: clearing e:event
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
9999 mem: clearing screen-width:number
9999 mem: storing 0 in location 1394
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1395
9999 mem: clearing left:number
9999 mem: storing 0 in location 1396
9999 mem: clearing right:number
9999 mem: storing 0 in location 1397
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 12 -> 11
9999 mem: storing 0 in location 1398
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing save-row:number
9999 mem: storing 0 in location 1401
9999 mem: clearing save-column:number
9999 mem: storing 0 in location 1402
9999 mem: clearing c:character
9999 mem: storing 0 in location 1403
9999 mem: clearing is-unicode?:boolean
9999 mem: storing 0 in location 1404
9999 mem: clearing redo?:boolean
9999 mem: storing 0 in location 1405
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 1526
9999 mem: skipping refcount at 1526
9999 mem: decrementing refcount of 1526: 2 -> 1
9999 mem: storing 0 in location 1407
9999 mem: clearing redo
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 1381
9999 mem: skipping refcount at 1381
9999 mem: decrementing refcount of 1381: 3 -> 2
9999 mem: storing 0 in location 1408
9999 mem: clearing undo
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing data:address:duplex-list:character
9999 mem: location 1422 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1422
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing move:move-operation
9999 mem: decrementing refcount of 1167: 18 -> 17
9999 mem: decrementing refcount of 1167: 17 -> 16
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1442
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing undo?:boolean
9999 mem: storing 0 in location 1443
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing undo
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing redo
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing anchor:address:duplex-list:character
9999 mem: location 1444 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1444
9999 mem: clearing deleted:address:duplex-list:character
9999 mem: location 1445 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1445
9999 mem: clearing old-cursor:address:duplex-list:character
9999 mem: location 1446 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1446
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1447
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 16 -> 15
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 15 -> 14
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1458
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing delete-to-end-of-line?:boolean
9999 mem: storing 0 in location 1459
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1460 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1460
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing delete-to-start-of-line?:boolean
9999 mem: storing 0 in location 1462
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1460 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1460
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1463
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1464
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing delete-previous-character?:boolean
9999 mem: storing 0 in location 1465
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing backspaced-cell:address:duplex-list:character
9999 mem: location 1466 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1466
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing backspaced-so-far:address:duplex-list:character
9999 mem: location 1467 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1467
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing tab?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1469 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1469
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1470 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1470
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1442
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1471 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1471
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1469 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1469
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1442
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1471 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1471
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing regular-character?:boolean
9999 mem: storing 0 in location 1473
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1469 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1469
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1470 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1470
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1442
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1471 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1471
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing k:number
9999 mem: storing 0 in location 1474
9999 mem: clearing is-keycode?:boolean
9999 mem: storing 0 in location 1475
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1447
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1458
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1463
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1464
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-next-line?:boolean
9999 mem: storing 0 in location 1476
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-previous-line?:boolean
9999 mem: storing 0 in location 1477
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-previous-character?:boolean
9999 mem: storing 0 in location 1478
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1479 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1479
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-next-character?:boolean
9999 mem: storing 0 in location 1480
9999 mem: clearing next-cursor:address:duplex-list:character
9999 mem: location 1481 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1481
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing delete-next-character?:boolean
9999 mem: storing 0 in location 1482
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing deleted-cell:address:duplex-list:character
9999 mem: location 1483 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1483
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing delete-until:address:duplex-list:character
9999 mem: location 1484 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1484
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deleted-so-far:address:duplex-list:character
9999 mem: location 1485 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1485
9999 mem: clearing deleted-so-far
9999 mem: location 1485 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1485
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing paste-end?:boolean
9999 mem: storing 0 in location 1486
9999 mem: clearing paste-start?:boolean
9999 mem: storing 0 in location 1487
9999 mem: automatically abandoning 1384
9999 abandon: updating refcounts inside 1384: (array number)
9999 abandon: saving 1384 in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1148
9998 run: result 2 is 0
9999 mem: storing 1008 in location 1332
9999 mem: storing 1148 in location 1334
9999 mem: storing 0 in location 1347
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1335
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1336
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1332 is 1008
9999 mem: location 1335 is 2
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 61 -> 62
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1332
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1333 is 1326
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1326: 4 -> 5
9999 mem: storing 1326 in location 1296
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1326
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 2
9999 mem: location 1328 is 1316
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1327
9998 run: its type is "number"
9999 mem: location 1327 is 2
9999 mem: storing 2 in location 1297
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9999 mem: location 1327 is 2
9999 mem: location 1328 is 1316
9999 mem: location 1296 is 1326
9999 mem: skipping refcount at 1326
9998 run: address to copy is 1328
9998 run: its type is ("address" "array" "event")
9999 mem: location 1328 is 1316
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1316: 1 -> 2
9999 mem: storing 1316 in location 1298
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: storing 2 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 2
9999 mem: location 1299 is 2
9999 mem: storing 1 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1182
9999 mem: location 1301 is 0
9999 mem: incrementing refcount of 1182: 0 -> 1
9999 mem: storing 1182 in location 1301
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1301 is 1182
9999 mem: skipping refcount at 1182
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1296 is 1326
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1316
9999 mem: skipping refcount at 1316
9999 mem: decrementing refcount of 1316: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing result
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing result:event
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1326
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 1326 in location 1333
9999 mem: storing 1 in location 1341
9999 mem: storing 1 in location 1342
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1332 is 1008
9999 mem: location 1333 is 1326
9999 mem: location 1334 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1332 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 0 in location 1332
9999 mem: clearing console:address:console
9999 mem: location 1333 is 1326
9999 mem: skipping refcount at 1326
9999 mem: decrementing refcount of 1326: 5 -> 4
9999 mem: storing 0 in location 1333
9999 mem: clearing editor:address:editor-data
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 9 -> 8
9999 mem: storing 0 in location 1334
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1335
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1336
9999 mem: clearing screen
9999 mem: location 1332 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1332
9999 mem: clearing e:event
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: clearing console:address:console
9999 mem: location 1333 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1333
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1341
9999 mem: clearing quit?:boolean
9999 mem: storing 0 in location 1342
9999 mem: clearing t:touch-event
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: clearing is-touch?:boolean
9999 mem: storing 0 in location 1346
9999 mem: clearing screen
9999 mem: location 1332 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1332
9999 mem: clearing editor
9999 mem: location 1334 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1334
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1347
9999 mem: clearing screen
9999 mem: location 1332 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1332
9999 mem: automatically abandoning 1329
9999 abandon: updating refcounts inside 1329: (array number)
9999 abandon: saving 1329 in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 2 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1543
9999 mem: storing 'text' tag at 1543
9999 mem: storing character 48 at 1544
9999 mem: storing console in 1547
9999 mem: storing console data in 1549
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9992 transform: --- compute address offsets for run_1002
9993 transform: - compute address offsets for editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9993 transform: - compute address offsets for reply 
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1547
9999 mem: location 2 is 1148
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
9999 mem: new alloc from free list: 1329
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1332 is 0
9999 mem: incrementing refcount of 1008: 61 -> 62
9999 mem: storing 1008 in location 1332
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1333 is 0
9999 mem: incrementing refcount of 1547: 1 -> 2
9999 mem: storing 1547 in location 1333
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1334 is 0
9999 mem: incrementing refcount of 1148: 8 -> 9
9999 mem: storing 1148 in location 1334
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1335
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1336
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1332 is 1008
9999 mem: location 1335 is 2
9999 mem: location 1336 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 62 -> 63
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1332
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1333 is 1547
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1547: 2 -> 3
9999 mem: storing 1547 in location 1296
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1547
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9999 mem: location 1548 is 0
9999 mem: location 1549 is 1541
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9998 run: address to copy is 1548
9998 run: its type is "number"
9999 mem: location 1548 is 0
9999 mem: storing 0 in location 1297
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9999 mem: location 1548 is 0
9999 mem: location 1549 is 1541
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9998 run: address to copy is 1549
9998 run: its type is ("address" "array" "event")
9999 mem: location 1549 is 1541
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1541: 1 -> 2
9999 mem: storing 1541 in location 1298
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1541
9999 mem: skipping refcount at 1541
9999 mem: storing 1 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 0
9999 mem: location 1299 is 1
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1541
9999 mem: skipping refcount at 1541
9998 run: base address is 1542
9999 mem: location 1297 is 0
9998 run: address to copy is 1543
9998 run: its type is event
9999 mem: location 1543 is 0
9999 mem: location 1544 is 48
9999 mem: location 1545 is 0
9999 mem: location 1546 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 48 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 0
9999 mem: storing 1 in location 1297
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9999 mem: location 1548 is 0
9999 mem: location 1549 is 1541
9999 mem: location 1297 is 1
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9998 run: address to copy to is 1548
9999 mem: storing 1 in location 1548
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 0
9999 mem: location 1303 is 48
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1547
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1541
9999 mem: skipping refcount at 1541
9999 mem: decrementing refcount of 1541: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing dummy:address:event
9999 mem: location 1301 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1301
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1547
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1337
9999 mem: storing 48 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 1547 in location 1333
9999 mem: storing 1 in location 1341
9999 mem: storing 0 in location 1342
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1337 is 0
9999 mem: location 1338 is 48
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 mem: storing 0 in location 1346
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1332 is 1008
9999 mem: location 1334 is 1148
9999 mem: location 1337 is 0
9999 mem: location 1338 is 48
9999 mem: location 1339 is 0
9999 mem: location 1340 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1384
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1387 is 0
9999 mem: incrementing refcount of 1008: 63 -> 64
9999 mem: storing 1008 in location 1387
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1388 is 0
9999 mem: incrementing refcount of 1148: 9 -> 10
9999 mem: storing 1148 in location 1388
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1389
9999 mem: storing 48 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1393
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1388 is 1148
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1387 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1550
9999 mem: storing 0 in location 1550
9999 mem: storing 0 in location 1551
9999 mem: storing 0 in location 1552
9999 mem: storing 0 in location 1553
9999 mem: storing 0 in location 1554
9999 mem: storing 3 in location 1551
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1008: 64 -> 65
9999 mem: storing 1008 in location 1553
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1553 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1554
 106 run: return {width: "number"}
9999 mem: location 1554 is 10
9999 mem: clearing screen:address:screen
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1394
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1387 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1008: 64 -> 65
9999 mem: storing 1008 in location 1553
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1553 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1554
 106 run: return {height: "number"}
9999 mem: location 1554 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 65 -> 64
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1395
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1396
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1397
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1195
9999 mem: location 1398 is 0
9999 mem: incrementing refcount of 1195: 10 -> 11
9999 mem: storing 1195 in location 1398
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1399
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1400
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1399 is 2
9999 mem: storing 2 in location 1401
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1400 is 0
9999 mem: storing 0 in location 1402
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1389 is 0
9999 mem: location 1390 is 48
9999 mem: location 1391 is 0
9999 mem: location 1392 is 0
9999 mem: storing 1 in location 1404
9999 mem: storing 48 in location 1403
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1404 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1405
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1405 is 0
9998 run: jumping to instruction 73
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1443
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1443 is 0
9998 run: jumping to instruction 128
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1447
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 167
9990 schedule: handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-to-previous-line-from-left-margin
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1458
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 206
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1459
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1459 is 0
9998 run: jumping to instruction 227
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1462
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1462 is 0
9998 run: jumping to instruction 249
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1463
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 285
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1464
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1464 is 0
9998 run: jumping to instruction 321
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1465
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 361
 105 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1468
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 0
9998 run: jumping to instruction 399
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1403 is 48
9999 mem: storing 0 in location 1472
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 421
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1403 is 48
9999 mem: storing 1 in location 1473
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1393
 105 run: jump-if {regular-character?: "boolean"}, {: "offset"}
9999 mem: location 1473 is 1
9998 run: jumping to instruction 427
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1451 is 0
9999 mem: incrementing refcount of 1167: 14 -> 15
9999 mem: storing 1167 in location 1451
 105 run: {cursor-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1195
9999 mem: location 1469 is 0
9999 mem: incrementing refcount of 1195: 11 -> 12
9999 mem: storing 1195 in location 1469
 105 run: {editor: ("address" "editor-data")}, {screen: ("address" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "editor-data")}, {c: "character"}, {screen: ("address" "screen")}
9999 mem: location 1388 is 1148
9999 mem: location 1403 is 48
9999 mem: location 1387 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1348
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1351 is 0
9999 mem: incrementing refcount of 1148: 10 -> 11
9999 mem: storing 1148 in location 1351
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1352
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1353 is 0
9999 mem: incrementing refcount of 1008: 64 -> 65
9999 mem: storing 1008 in location 1353
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1152
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1152 is 1195
9999 mem: location 1354 is 0
9999 mem: incrementing refcount of 1195: 12 -> 13
9999 mem: storing 1195 in location 1354
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1352 is 48
9999 mem: location 1354 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1174
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1195: 13 -> 14
9999 mem: storing 1195 in location 1175
 107 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1555
9999 mem: storing 0 in location 1555
9999 mem: storing 0 in location 1556
9999 mem: storing 0 in location 1557
9999 mem: storing 0 in location 1558
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1555: 0 -> 1
9999 mem: storing 1555 in location 1176
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1176 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 0
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1174 is 48
9999 mem: location 1176 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy to is 1556
9999 mem: storing 48 in location 1556
 107 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1199
9999 mem: location 1177 is 0
9999 mem: incrementing refcount of 1199: 11 -> 12
9999 mem: storing 1199 in location 1177
 107 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1199
9999 mem: location 1198 is 1191
9999 mem: location 1176 is 1555
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy to is 1197
9999 mem: location 1197 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 12 -> 11
9999 mem: incrementing refcount of 1555: 1 -> 2
9999 mem: storing 1555 in location 1197
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 0
9999 mem: location 1175 is 1195
9999 mem: location 1176 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy to is 1558
9999 mem: location 1558 is 0
9999 mem: incrementing refcount of 1195: 14 -> 15
9999 mem: storing 1195 in location 1558
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1176 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1195
9999 mem: location 1177 is 1199
9999 mem: location 1176 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy to is 1557
9999 mem: location 1557 is 0
9999 mem: incrementing refcount of 1199: 11 -> 12
9999 mem: storing 1199 in location 1557
 107 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1177 is 1199
9998 run: jumping to instruction 12
 107 run: {next-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1177 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1195
9999 mem: location 1176 is 1555
9999 mem: location 1177 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy to is 1202
9999 mem: location 1202 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 15 -> 14
9999 mem: incrementing refcount of 1555: 2 -> 3
9999 mem: storing 1555 in location 1202
 107 run: reply {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1175 is 1195
9999 mem: clearing x:_elem
9999 mem: storing 0 in location 1174
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1175 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 14 -> 13
9999 mem: storing 0 in location 1175
9999 mem: clearing new-node:address:duplex-list:_elem
9999 mem: location 1176 is 1555
9999 mem: skipping refcount at 1555
9999 mem: decrementing refcount of 1555: 3 -> 2
9999 mem: storing 0 in location 1176
9999 mem: clearing next-node:address:duplex-list:_elem
9999 mem: location 1177 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 12 -> 11
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1354 is 1195
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1195: 13 -> 14
9999 mem: storing 1195 in location 1553
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1195
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1555
9999 mem: location 1198 is 1191
9999 mem: location 1553 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1555
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1555: 2 -> 3
9999 mem: storing 1555 in location 1554
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1555
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 14 -> 13
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1555
9999 mem: storing 1555 in location 1354
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1195
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1354 is 1555
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1152
9999 mem: location 1152 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 13 -> 12
9999 mem: incrementing refcount of 1555: 3 -> 4
9999 mem: storing 1555 in location 1152
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1355
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1356
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1357
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 9
9999 mem: storing 9 in location 1358
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1355 is 2
9999 mem: storing 2 in location 1359
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1356 is 0
9999 mem: storing 0 in location 1360
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1353 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1553
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1553 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1554
 107 run: return {width: "number"}
9999 mem: location 1554 is 10
9999 mem: clearing screen:address:screen
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1361
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1353 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1553
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1553 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1554
 107 run: return {height: "number"}
9999 mem: location 1554 is 5
9999 mem: clearing screen:address:screen
9999 mem: location 1553 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1362
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1358 is 9
9999 mem: storing 8 in location 1363
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1356 is 0
9999 mem: location 1363 is 8
9999 mem: storing 0 in location 1364
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 47
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1356 is 0
9999 mem: storing 1 in location 1356
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1356 is 1
9999 mem: location 1351 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1157
9999 mem: storing 1 in location 1157
 106 run: {next: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1354 is 1555
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1555: 4 -> 5
9999 mem: storing 1555 in location 1553
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1555
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1199
9999 mem: location 1558 is 1195
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1557 is 1199
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1199: 11 -> 12
9999 mem: storing 1199 in location 1554
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9999 mem: decrementing refcount of 1555: 5 -> 4
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1371
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1371 is 1199
9999 mem: storing 0 in location 1372
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 63
 106 run: jump-unless {next: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1199
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1356 is 1
9999 mem: location 1361 is 10
9999 mem: storing 0 in location 1375
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "duplex-list" "character")} <- copy {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1354 is 1555
9999 mem: location 1377 is 0
9999 mem: incrementing refcount of 1555: 4 -> 5
9999 mem: storing 1555 in location 1377
 106 run: move-cursor {screen: ("address" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1353 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1164
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1166
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 0
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1164
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1360 is 0
9999 mem: storing 0 in location 1378
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1370
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1378 is 0
9999 mem: location 1358 is 9
9999 mem: storing 0 in location 1375
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1377 is 1555
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1377 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1199
9999 mem: location 1558 is 1195
9999 mem: location 1377 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1556
9998 run: its type is "character"
9999 mem: location 1556 is 48
9999 mem: storing 48 in location 1379
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1379 is 48
9999 mem: storing 0 in location 1380
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1353 is 1008
9999 mem: location 1379 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1272
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 48
  90 print-character: 48
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 48
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 0
9999 mem: storing 20 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 48
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 48
9999 mem: location 1272 is 7
9999 mem: storing 48 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 20
9998 run: address to copy to is 1056
9999 mem: location 1289 is 48
9999 mem: location 1290 is 7
9999 mem: storing 48 in location 1056
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 0
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 0
9999 mem: storing 1 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 1
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1378 is 0
9999 mem: storing 1 in location 1378
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1377 is 1555
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1555: 5 -> 6
9999 mem: storing 1555 in location 1553
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1555
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1199
9999 mem: location 1558 is 1195
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1557 is 1199
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1199: 12 -> 13
9999 mem: storing 1199 in location 1554
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9999 mem: decrementing refcount of 1555: 6 -> 5
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1377
 106 run: jump {: "offset"}
9998 run: jumping to instruction 72
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1370
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1378 is 1
9999 mem: location 1358 is 9
9999 mem: storing 0 in location 1375
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1377 is 1199
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1377 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1555
9999 mem: location 1377 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1200
9998 run: its type is "character"
9999 mem: location 1200 is 100
9999 mem: storing 100 in location 1379
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1379 is 100
9999 mem: storing 0 in location 1380
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1353 is 1008
9999 mem: location 1379 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1272
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 100
  90 print-character: 100
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1
9999 mem: storing 21 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 100
9999 mem: location 1272 is 7
9999 mem: storing 100 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 21
9998 run: address to copy to is 1058
9999 mem: location 1289 is 100
9999 mem: location 1290 is 7
9999 mem: storing 100 in location 1058
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 1
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 1
9999 mem: storing 2 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 2
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1378 is 1
9999 mem: storing 2 in location 1378
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1377 is 1199
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1199: 13 -> 14
9999 mem: storing 1199 in location 1553
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1199
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1199
9999 mem: skipping refcount at 1199
9999 mem: location 1200 is 100
9999 mem: location 1201 is 1203
9999 mem: location 1202 is 1555
9999 mem: location 1553 is 1199
9999 mem: skipping refcount at 1199
9998 run: address to copy is 1201
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1201 is 1203
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1203: 11 -> 12
9999 mem: storing 1203 in location 1554
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1203
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 14 -> 13
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: storing 1203 in location 1377
 106 run: jump {: "offset"}
9998 run: jumping to instruction 72
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1370
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1378 is 2
9999 mem: location 1358 is 9
9999 mem: storing 0 in location 1375
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1377 is 1203
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1377 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1377 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is "character"
9999 mem: location 1204 is 101
9999 mem: storing 101 in location 1379
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1379 is 101
9999 mem: storing 0 in location 1380
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1353 is 1008
9999 mem: location 1379 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1272
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 101
  90 print-character: 101
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 101
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 2
9999 mem: storing 22 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 101
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 101
9999 mem: location 1272 is 7
9999 mem: storing 101 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 22
9998 run: address to copy to is 1060
9999 mem: location 1289 is 101
9999 mem: location 1290 is 7
9999 mem: storing 101 in location 1060
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 2
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 2
9999 mem: storing 3 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 3
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1378 is 2
9999 mem: storing 3 in location 1378
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1377 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1203: 12 -> 13
9999 mem: storing 1203 in location 1553
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1203
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 101
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1553 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1207: 11 -> 12
9999 mem: storing 1207 in location 1554
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1207
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1203
9999 mem: skipping refcount at 1203
9999 mem: decrementing refcount of 1203: 13 -> 12
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: storing 1207 in location 1377
 106 run: jump {: "offset"}
9998 run: jumping to instruction 72
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1370
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1378 is 3
9999 mem: location 1358 is 9
9999 mem: storing 0 in location 1375
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1377 is 1207
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1377 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1377 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 102
9999 mem: storing 102 in location 1379
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1379 is 102
9999 mem: storing 0 in location 1380
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "screen")}, {currc: "character"}
9999 mem: location 1353 is 1008
9999 mem: location 1379 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1267
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1270 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1270
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1271
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1272
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1274
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1271 is 102
  90 print-character: 102
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1270 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1276
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1277
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1278
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1280
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1279 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1271 is 102
9999 mem: storing 0 in location 1281
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1284 is 20
9999 mem: location 1280 is 3
9999 mem: storing 23 in location 1284
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 0
9999 mem: incrementing refcount of 1014: 1 -> 2
9999 mem: storing 1014 in location 1285
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1286
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1271 is 102
9999 mem: storing 0 in location 1287
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1271 is 102
9999 mem: location 1272 is 7
9999 mem: storing 102 in location 1289
9999 mem: storing 7 in location 1290
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1284 is 23
9998 run: address to copy to is 1062
9999 mem: location 1289 is 102
9999 mem: location 1290 is 7
9999 mem: storing 102 in location 1062
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1291
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1280 is 3
9999 mem: location 1291 is 9
9999 mem: storing 0 in location 1292
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1280 is 3
9999 mem: storing 4 in location 1280
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1280 is 4
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1270 is 1008
9999 mem: clearing screen:address:screen
9999 mem: location 1270 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1270
9999 mem: clearing c:character
9999 mem: storing 0 in location 1271
9999 mem: clearing color:number
9999 mem: storing 0 in location 1272
9999 mem: clearing color-found?:boolean
9999 mem: storing 0 in location 1273
9999 mem: clearing color
9999 mem: storing 0 in location 1272
9999 mem: clearing bg-color:number
9999 mem: storing 0 in location 1274
9999 mem: clearing bg-color-found?:boolean
9999 mem: storing 0 in location 1275
9999 mem: clearing bg-color
9999 mem: storing 0 in location 1274
9999 mem: clearing width:number
9999 mem: storing 0 in location 1276
9999 mem: clearing height:number
9999 mem: storing 0 in location 1277
9999 mem: clearing row:number
9999 mem: storing 0 in location 1278
9999 mem: clearing legal?:boolean
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing column:number
9999 mem: storing 0 in location 1280
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing legal?
9999 mem: storing 0 in location 1279
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1281
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1282
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1283
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing row
9999 mem: storing 0 in location 1278
9999 mem: clearing index:number
9999 mem: storing 0 in location 1284
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing buf:address:array:screen-cell
9999 mem: location 1285 is 1014
9999 mem: skipping refcount at 1014
9999 mem: decrementing refcount of 1014: 2 -> 1
9999 mem: storing 0 in location 1285
9999 mem: clearing len:number
9999 mem: storing 0 in location 1286
9999 mem: clearing backspace?:boolean
9999 mem: storing 0 in location 1287
9999 mem: clearing at-left?:boolean
9999 mem: storing 0 in location 1288
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: clearing index
9999 mem: storing 0 in location 1284
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing cursor:screen-cell
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
9999 mem: clearing right:number
9999 mem: storing 0 in location 1291
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1292
9999 mem: clearing column
9999 mem: storing 0 in location 1280
9999 mem: automatically abandoning 1267
9999 abandon: updating refcounts inside 1267: (array number)
9999 abandon: saving 1267 in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1378 is 3
9999 mem: storing 4 in location 1378
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1377 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1207: 12 -> 13
9999 mem: storing 1207 in location 1553
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1207
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 102
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1553 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1211: 11 -> 12
9999 mem: storing 1211 in location 1554
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1211
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1207
9999 mem: skipping refcount at 1207
9999 mem: decrementing refcount of 1207: 13 -> 12
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: storing 1211 in location 1377
 106 run: jump {: "offset"}
9998 run: jumping to instruction 72
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1370
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1378 is 4
9999 mem: location 1358 is 9
9999 mem: storing 0 in location 1375
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1375 is 0
9998 run: jumping to instruction 77
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1377 is 1211
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1377 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1377 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1379
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1379 is 10
9999 mem: storing 1 in location 1380
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 1
9998 run: jumping to instruction 86
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1370
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1351 is 1148
9999 mem: location 1353 is 1008
9999 mem: location 1370 is 0
9999 mem: clearing c:character
9999 mem: storing 0 in location 1352
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1354 is 1555
9999 mem: skipping refcount at 1555
9999 mem: decrementing refcount of 1555: 5 -> 4
9999 mem: storing 0 in location 1354
9999 mem: clearing before-cursor
9999 mem: location 1354 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1354
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1355
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1356
9999 mem: clearing left:number
9999 mem: storing 0 in location 1357
9999 mem: clearing right:number
9999 mem: storing 0 in location 1358
9999 mem: clearing save-row:number
9999 mem: storing 0 in location 1359
9999 mem: clearing save-column:number
9999 mem: storing 0 in location 1360
9999 mem: clearing screen-width:number
9999 mem: storing 0 in location 1361
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1362
9999 mem: clearing wrap-column:number
9999 mem: storing 0 in location 1363
9999 mem: clearing at-wrap?:boolean
9999 mem: storing 0 in location 1364
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1356
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1356
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1355
9999 mem: clearing below-screen?:boolean
9999 mem: storing 0 in location 1365
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing left:number
9999 mem: storing 0 in location 1357
9999 mem: clearing right:number
9999 mem: storing 0 in location 1358
9999 mem: clearing max:number
9999 mem: storing 0 in location 1367
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1368 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1368
9999 mem: clearing top-of-screen
9999 mem: location 1366 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1366
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1369
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1356
9999 mem: clearing next:address:duplex-list:character
9999 mem: location 1371 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 13 -> 12
9999 mem: storing 0 in location 1371
9999 mem: clearing at-end?:boolean
9999 mem: storing 0 in location 1372
9999 mem: clearing bottom:number
9999 mem: storing 0 in location 1373
9999 mem: clearing at-bottom?:boolean
9999 mem: storing 0 in location 1374
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1375
9999 mem: clearing overflow?:boolean
9999 mem: storing 0 in location 1376
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1375
9999 mem: clearing curr:address:duplex-list:character
9999 mem: location 1377 is 1211
9999 mem: skipping refcount at 1211
9999 mem: decrementing refcount of 1211: 12 -> 11
9999 mem: storing 0 in location 1377
9999 mem: clearing curr-column:number
9999 mem: storing 0 in location 1378
9999 mem: clearing at-right?:boolean
9999 mem: storing 0 in location 1375
9999 mem: clearing currc:character
9999 mem: storing 0 in location 1379
9999 mem: clearing at-newline?:boolean
9999 mem: storing 0 in location 1380
9999 mem: clearing curr-column
9999 mem: storing 0 in location 1378
9999 mem: clearing curr
9999 mem: location 1377 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1377
9999 mem: automatically abandoning 1348
9999 abandon: updating refcounts inside 1348: (array number)
9999 abandon: saving 1348 in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: storing 1148 in location 1388
9999 mem: storing 1008 in location 1387
9999 mem: storing 0 in location 1393
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1150
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1150 is 1167
9999 mem: location 1453 is 0
9999 mem: incrementing refcount of 1167: 15 -> 16
9999 mem: storing 1167 in location 1453
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1399
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1400
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1388 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1159 is 1538
9999 mem: location 1408 is 0
9999 mem: incrementing refcount of 1538: 1 -> 2
9999 mem: storing 1538 in location 1408
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1408 is 1538
9998 run: jump-unless fell through
 105 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1408 is 1538
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1538: 2 -> 3
9999 mem: storing 1538 in location 1553
 106 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1553 is 1538
9999 mem: skipping refcount at 1538
9999 mem: location 1539 is 1526
9999 mem: location 1540 is 1381
9999 mem: location 1553 is 1538
9999 mem: skipping refcount at 1538
9998 run: address to copy is 1539
9998 run: its type is ("address" "operation")
9999 mem: location 1539 is 1526
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1526: 1 -> 2
9999 mem: storing 1526 in location 1554
 106 run: reply {result: ("address" "operation")}
9999 mem: location 1554 is 1526
9999 mem: clearing in:address:list:_elem
9999 mem: location 1553 is 1538
9999 mem: skipping refcount at 1538
9999 mem: decrementing refcount of 1538: 3 -> 2
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1526
9999 mem: storing 1526 in location 1407
 105 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1407 is 1526
9999 mem: skipping refcount at 1526
9999 mem: location 1527 is 1
9999 mem: location 1528 is 3
9999 mem: location 1529 is 0
9999 mem: location 1530 is 1167
9999 mem: location 1531 is 2
9999 mem: location 1532 is 0
9999 mem: location 1533 is 1167
9999 mem: location 1534 is 3
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: location 1407 is 1526
9999 mem: skipping refcount at 1526
9999 mem: storing 0 in location 1441
 105 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1441 is 0
9998 run: jumping to instruction 451
 105 run: {insert-from: ("address" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "duplex-list" "character")}
9999 mem: location 1469 is 1195
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1195: 12 -> 13
9999 mem: storing 1195 in location 1553
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1195
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 10
9999 mem: location 1197 is 1555
9999 mem: location 1198 is 1191
9999 mem: location 1553 is 1195
9999 mem: skipping refcount at 1195
9998 run: address to copy is 1197
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1197 is 1555
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1555: 4 -> 5
9999 mem: storing 1555 in location 1554
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1555
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 13 -> 12
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1555
9999 mem: storing 1555 in location 1442
 105 run: {insert-to: ("address" "duplex-list" "character")} <- next_2 {insert-from: ("address" "duplex-list" "character")}
9999 mem: location 1442 is 1555
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: location 1553 is 0
9999 mem: incrementing refcount of 1555: 5 -> 6
9999 mem: storing 1555 in location 1553
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1553 is 1555
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1199
9999 mem: location 1558 is 1195
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1557 is 1199
9999 mem: location 1554 is 0
9999 mem: incrementing refcount of 1199: 12 -> 13
9999 mem: storing 1199 in location 1554
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1554 is 1199
9999 mem: clearing in:address:duplex-list:_elem
9999 mem: location 1553 is 1555
9999 mem: skipping refcount at 1555
9999 mem: decrementing refcount of 1555: 6 -> 5
9999 mem: storing 0 in location 1553
9999 mem: automatically abandoning 1550
9999 abandon: updating refcounts inside 1550: (array number)
9999 abandon: saving 1550 in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1199
9999 mem: storing 1199 in location 1471
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1559
9999 mem: storing 0 in location 1559
9999 mem: storing 0 in location 1560
9999 mem: storing 0 in location 1561
9999 mem: storing 0 in location 1562
9999 mem: storing 0 in location 1563
9999 mem: storing 0 in location 1564
9999 mem: storing 0 in location 1565
9999 mem: storing 0 in location 1566
9999 mem: storing 0 in location 1567
9999 mem: storing 0 in location 1568
9999 mem: storing 0 in location 1569
9999 mem: storing 0 in location 1570
9999 mem: location 1407 is 1526
9999 mem: skipping refcount at 1526
9999 mem: decrementing refcount of 1526: 2 -> 1
9999 mem: incrementing refcount of 1559: 0 -> 1
9999 mem: storing 1559 in location 1407
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {insert-from: ("address" "duplex-list" "character")}, {insert-to: ("address" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1401 is 2
9999 mem: location 1402 is 0
9999 mem: location 1451 is 1167
9999 mem: location 1399 is 2
9999 mem: location 1400 is 1
9999 mem: location 1453 is 1167
9999 mem: location 1442 is 1555
9999 mem: location 1471 is 1199
9999 mem: location 1407 is 1559
9999 mem: skipping refcount at 1559
9999 mem: location 1407 is 1559
9999 mem: skipping refcount at 1559
9999 mem: incrementing refcount of 1167: 16 -> 17
9999 mem: incrementing refcount of 1167: 17 -> 18
9999 mem: incrementing refcount of 1555: 5 -> 6
9999 mem: incrementing refcount of 1199: 13 -> 14
9999 mem: storing 0 in location 1560
9999 mem: storing 2 in location 1561
9999 mem: storing 0 in location 1562
9999 mem: storing 1167 in location 1563
9999 mem: storing 2 in location 1564
9999 mem: storing 1 in location 1565
9999 mem: storing 1167 in location 1566
9999 mem: storing 1555 in location 1567
9999 mem: storing 1199 in location 1568
9999 mem: storing 1 in location 1569
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1388 is 1148
9999 mem: location 1407 is 1559
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1171
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: location 1174 is 0
9999 mem: incrementing refcount of 1148: 11 -> 12
9999 mem: storing 1148 in location 1174
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1175 is 0
9999 mem: incrementing refcount of 1559: 1 -> 2
9999 mem: storing 1559 in location 1175
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1159
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1159 is 1538
9999 mem: location 1176 is 0
9999 mem: incrementing refcount of 1538: 2 -> 3
9999 mem: storing 1538 in location 1176
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1175 is 1559
9999 mem: location 1176 is 1538
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1559: 2 -> 3
9999 mem: storing 1559 in location 1164
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: location 1165 is 0
9999 mem: incrementing refcount of 1538: 3 -> 4
9999 mem: storing 1538 in location 1165
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1571
9999 mem: storing 0 in location 1571
9999 mem: storing 0 in location 1572
9999 mem: storing 0 in location 1573
9999 mem: location 1166 is 0
9999 mem: incrementing refcount of 1571: 0 -> 1
9999 mem: storing 1571 in location 1166
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1164 is 1559
9999 mem: location 1165 is 1538
9999 mem: location 1166 is 1571
9999 mem: skipping refcount at 1571
9999 mem: location 1166 is 1571
9999 mem: skipping refcount at 1571
9999 mem: incrementing refcount of 1559: 3 -> 4
9999 mem: incrementing refcount of 1538: 4 -> 5
9999 mem: storing 1559 in location 1572
9999 mem: storing 1538 in location 1573
 107 run: reply {result: ("address" "list" "address" "operation")}
9999 mem: location 1166 is 1571
9999 mem: clearing x:_elem
9999 mem: location 1164 is 1559
9999 mem: skipping refcount at 1559
9999 mem: decrementing refcount of 1559: 4 -> 3
9999 mem: storing 0 in location 1164
9999 mem: clearing in:address:list:_elem
9999 mem: location 1165 is 1538
9999 mem: skipping refcount at 1538
9999 mem: decrementing refcount of 1538: 5 -> 4
9999 mem: storing 0 in location 1165
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1571
9999 mem: storing 1571 in location 1176
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1538
9999 mem: location 1160 is 0
9999 mem: location 1176 is 1571
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1159
9999 mem: location 1159 is 1538
9999 mem: skipping refcount at 1538
9999 mem: decrementing refcount of 1538: 4 -> 3
9999 mem: incrementing refcount of 1571: 1 -> 2
9999 mem: storing 1571 in location 1159
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1571
9999 mem: location 1160 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1160
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1571
9999 mem: location 1160 is 0
9999 mem: location 1177 is 0
9999 mem: location 1174 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy to is 1160
9999 mem: location 1160 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1160
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1174 is 1148
9999 mem: clearing op:address:operation
9999 mem: location 1175 is 1559
9999 mem: skipping refcount at 1559
9999 mem: decrementing refcount of 1559: 3 -> 2
9999 mem: storing 0 in location 1175
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1176 is 1571
9999 mem: skipping refcount at 1571
9999 mem: decrementing refcount of 1571: 2 -> 1
9999 mem: storing 0 in location 1176
9999 mem: clearing undo
9999 mem: location 1176 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1176
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: clearing redo
9999 mem: location 1177 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1177
9999 mem: automatically abandoning 1171
9999 abandon: updating refcounts inside 1171: (array number)
9999 abandon: saving 1171 in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1148
9999 mem: storing 1148 in location 1388
9990 schedule: handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-to-previous-line-from-left-margin
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1387 is 1008
9999 mem: location 1388 is 1148
9999 mem: location 1393 is 0
9999 mem: clearing e:event
9999 mem: storing 0 in location 1389
9999 mem: storing 0 in location 1390
9999 mem: storing 0 in location 1391
9999 mem: storing 0 in location 1392
9999 mem: clearing screen-width:number
9999 mem: storing 0 in location 1394
9999 mem: clearing screen-height:number
9999 mem: storing 0 in location 1395
9999 mem: clearing left:number
9999 mem: storing 0 in location 1396
9999 mem: clearing right:number
9999 mem: storing 0 in location 1397
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 12 -> 11
9999 mem: storing 0 in location 1398
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing save-row:number
9999 mem: storing 0 in location 1401
9999 mem: clearing save-column:number
9999 mem: storing 0 in location 1402
9999 mem: clearing c:character
9999 mem: storing 0 in location 1403
9999 mem: clearing is-unicode?:boolean
9999 mem: storing 0 in location 1404
9999 mem: clearing redo?:boolean
9999 mem: storing 0 in location 1405
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 1559
9999 mem: skipping refcount at 1559
9999 mem: decrementing refcount of 1559: 2 -> 1
9999 mem: storing 0 in location 1407
9999 mem: clearing redo
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 1538
9999 mem: skipping refcount at 1538
9999 mem: decrementing refcount of 1538: 3 -> 2
9999 mem: storing 0 in location 1408
9999 mem: clearing undo
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing data:address:duplex-list:character
9999 mem: location 1422 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1422
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 1555
9999 mem: skipping refcount at 1555
9999 mem: decrementing refcount of 1555: 6 -> 5
9999 mem: storing 0 in location 1442
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing undo?:boolean
9999 mem: storing 0 in location 1443
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing undo
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing redo:address:list:address:operation
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing redo
9999 mem: location 1406 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1406
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing anchor:address:duplex-list:character
9999 mem: location 1444 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1444
9999 mem: clearing deleted:address:duplex-list:character
9999 mem: location 1445 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1445
9999 mem: clearing old-cursor:address:duplex-list:character
9999 mem: location 1446 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1446
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing start:address:duplex-list:character
9999 mem: location 1420 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1420
9999 mem: clearing end:address:duplex-list:character
9999 mem: location 1421 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1421
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing cursor-row
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column
9999 mem: storing 0 in location 1400
9999 mem: clearing top:address:duplex-list:character
9999 mem: location 1423 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1423
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1447
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 18 -> 17
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 1167
9999 mem: skipping refcount at 1167
9999 mem: decrementing refcount of 1167: 17 -> 16
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1458
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing delete-to-end-of-line?:boolean
9999 mem: storing 0 in location 1459
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1460 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1460
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing delete-to-start-of-line?:boolean
9999 mem: storing 0 in location 1462
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing deleted-cells:address:duplex-list:character
9999 mem: location 1460 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1460
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1463
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1464
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing delete-previous-character?:boolean
9999 mem: storing 0 in location 1465
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing backspaced-cell:address:duplex-list:character
9999 mem: location 1466 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1466
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing backspaced-so-far:address:duplex-list:character
9999 mem: location 1467 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1467
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing tab?:boolean
9999 mem: storing 0 in location 1468
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1469 is 1195
9999 mem: skipping refcount at 1195
9999 mem: decrementing refcount of 1195: 11 -> 10
9999 mem: storing 0 in location 1469
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1470 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1470
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1442
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1471 is 1199
9999 mem: skipping refcount at 1199
9999 mem: decrementing refcount of 1199: 14 -> 13
9999 mem: storing 0 in location 1471
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing newline?:boolean
9999 mem: storing 0 in location 1472
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1469 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1469
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1442
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1471 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1471
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing regular-character?:boolean
9999 mem: storing 0 in location 1473
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing cursor-before:address:duplex-list:character
9999 mem: location 1469 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1469
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing typing:insert-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing is-insert?:boolean
9999 mem: storing 0 in location 1441
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing insert-until:address:duplex-list:character
9999 mem: location 1470 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1470
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing typing
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1432
9999 mem: storing 0 in location 1433
9999 mem: storing 0 in location 1434
9999 mem: storing 0 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
9999 mem: storing 0 in location 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 0 in location 1440
9999 mem: clearing insert-from:address:duplex-list:character
9999 mem: location 1442 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1442
9999 mem: clearing insert-to:address:duplex-list:character
9999 mem: location 1471 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1471
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing k:number
9999 mem: storing 0 in location 1474
9999 mem: clearing is-keycode?:boolean
9999 mem: storing 0 in location 1475
9999 mem: clearing page-up?:boolean
9999 mem: storing 0 in location 1447
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing page-down?:boolean
9999 mem: storing 0 in location 1458
9999 mem: clearing old-top:address:duplex-list:character
9999 mem: location 1448 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1448
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing top-of-screen:address:duplex-list:character
9999 mem: location 1456 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1456
9999 mem: clearing no-movement?:boolean
9999 mem: storing 0 in location 1457
9999 mem: clearing move-to-end-of-line?:boolean
9999 mem: storing 0 in location 1463
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-start-of-line?:boolean
9999 mem: storing 0 in location 1464
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-next-line?:boolean
9999 mem: storing 0 in location 1476
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-previous-line?:boolean
9999 mem: storing 0 in location 1477
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-previous-character?:boolean
9999 mem: storing 0 in location 1478
9999 mem: clearing prev:address:duplex-list:character
9999 mem: location 1479 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1479
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move-to-next-character?:boolean
9999 mem: storing 0 in location 1480
9999 mem: clearing next-cursor:address:duplex-list:character
9999 mem: location 1481 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1481
9999 mem: clearing cursor-row-before:number
9999 mem: storing 0 in location 1449
9999 mem: clearing cursor-column-before:number
9999 mem: storing 0 in location 1450
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing before-cursor
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo-coalesce-tag:number
9999 mem: storing 0 in location 1452
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing move:move-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing is-move?:boolean
9999 mem: storing 0 in location 1431
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing move
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1424
9999 mem: storing 0 in location 1425
9999 mem: storing 0 in location 1426
9999 mem: storing 0 in location 1427
9999 mem: storing 0 in location 1428
9999 mem: storing 0 in location 1429
9999 mem: storing 0 in location 1430
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing delete-next-character?:boolean
9999 mem: storing 0 in location 1482
9999 mem: clearing top-before:address:duplex-list:character
9999 mem: location 1451 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1451
9999 mem: clearing deleted-cell:address:duplex-list:character
9999 mem: location 1483 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1483
9999 mem: clearing top-after:address:duplex-list:character
9999 mem: location 1453 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1453
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1399
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1400
9999 mem: clearing before-cursor:address:duplex-list:character
9999 mem: location 1398 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1398
9999 mem: clearing undo:address:list:address:operation
9999 mem: location 1408 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1408
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deletion:delete-operation
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing is-delete?:boolean
9999 mem: storing 0 in location 1419
9999 mem: clearing previous-coalesce-tag:number
9999 mem: storing 0 in location 1454
9999 mem: clearing coalesce?:boolean
9999 mem: storing 0 in location 1455
9999 mem: clearing delete-until:address:duplex-list:character
9999 mem: location 1484 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1484
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deleted-so-far:address:duplex-list:character
9999 mem: location 1485 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1485
9999 mem: clearing deleted-so-far
9999 mem: location 1485 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1485
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing deletion
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1409
9999 mem: storing 0 in location 1410
9999 mem: storing 0 in location 1411
9999 mem: storing 0 in location 1412
9999 mem: storing 0 in location 1413
9999 mem: storing 0 in location 1414
9999 mem: storing 0 in location 1415
9999 mem: storing 0 in location 1416
9999 mem: storing 0 in location 1417
9999 mem: storing 0 in location 1418
9999 mem: clearing op:address:operation
9999 mem: location 1407 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1407
9999 mem: clearing deleted-until:address:duplex-list:character
9999 mem: location 1461 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1461
9999 mem: clearing paste-end?:boolean
9999 mem: storing 0 in location 1486
9999 mem: clearing paste-start?:boolean
9999 mem: storing 0 in location 1487
9999 mem: automatically abandoning 1384
9999 abandon: updating refcounts inside 1384: (array number)
9999 abandon: saving 1384 in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1148
9998 run: result 2 is 0
9999 mem: storing 1008 in location 1332
9999 mem: storing 1148 in location 1334
9999 mem: storing 0 in location 1347
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1571
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 2
9999 mem: storing 2 in location 1335
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: location 1149 is 1167
9999 mem: location 1150 is 1167
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1555
9999 mem: location 1153 is 0
9999 mem: location 1154 is 9
9999 mem: location 1155 is 3
9999 mem: location 1156 is 2
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1
9999 mem: location 1159 is 1571
9999 mem: location 1160 is 0
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 1
9999 mem: storing 1 in location 1336
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1332 is 1008
9999 mem: location 1335 is 2
9999 mem: location 1336 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1161
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: location 1164 is 0
9999 mem: incrementing refcount of 1008: 65 -> 66
9999 mem: storing 1008 in location 1164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1165
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1166
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1164 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1165 is 2
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 2 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1
9999 mem: location 1164 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1164 is 1008
9999 mem: clearing new-row:number
9999 mem: storing 0 in location 1165
9999 mem: clearing new-column:number
9999 mem: storing 0 in location 1166
9999 mem: automatically abandoning 1161
9999 abandon: updating refcounts inside 1161: (array number)
9999 abandon: saving 1161 in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 1332
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1333 is 1547
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: location 1296 is 0
9999 mem: incrementing refcount of 1547: 3 -> 4
9999 mem: storing 1547 in location 1296
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1296 is 1547
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9999 mem: location 1548 is 1
9999 mem: location 1549 is 1541
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9998 run: address to copy is 1548
9998 run: its type is "number"
9999 mem: location 1548 is 1
9999 mem: storing 1 in location 1297
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9999 mem: location 1548 is 1
9999 mem: location 1549 is 1541
9999 mem: location 1296 is 1547
9999 mem: skipping refcount at 1547
9998 run: address to copy is 1549
9998 run: its type is ("address" "array" "event")
9999 mem: location 1549 is 1541
9999 mem: location 1298 is 0
9999 mem: incrementing refcount of 1541: 1 -> 2
9999 mem: storing 1541 in location 1298
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1541
9999 mem: skipping refcount at 1541
9999 mem: storing 1 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 1
9999 mem: location 1299 is 1
9999 mem: storing 1 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1550
9999 mem: location 1301 is 0
9999 mem: incrementing refcount of 1550: 0 -> 1
9999 mem: storing 1550 in location 1301
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1301 is 1550
9999 mem: skipping refcount at 1550
9999 mem: location 1551 is 0
9999 mem: location 1552 is 0
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1296 is 1547
9999 mem: clearing current-event-index:number
9999 mem: storing 0 in location 1297
9999 mem: clearing buf:address:array:event
9999 mem: location 1298 is 1541
9999 mem: skipping refcount at 1541
9999 mem: decrementing refcount of 1541: 2 -> 1
9999 mem: storing 0 in location 1298
9999 mem: clearing max:number
9999 mem: storing 0 in location 1299
9999 mem: clearing done?:boolean
9999 mem: storing 0 in location 1300
9999 mem: clearing result
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing current-event-index
9999 mem: storing 0 in location 1297
9999 mem: clearing result:event
9999 mem: storing 0 in location 1302
9999 mem: storing 0 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1306
9999 mem: automatically abandoning 1293
9999 abandon: updating refcounts inside 1293: (array number)
9999 abandon: saving 1293 in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1547
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: storing 1547 in location 1333
9999 mem: storing 1 in location 1341
9999 mem: storing 1 in location 1342
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1341 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1342 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1332 is 1008
9999 mem: location 1333 is 1547
9999 mem: location 1334 is 1148
9999 mem: clearing screen:address:screen
9999 mem: location 1332 is 1008
9999 mem: skipping refcount at 1008
9999 mem: decrementing refcount of 1008: 66 -> 65
9999 mem: storing 0 in location 1332
9999 mem: clearing console:address:console
9999 mem: location 1333 is 1547
9999 mem: skipping refcount at 1547
9999 mem: decrementing refcount of 1547: 4 -> 3
9999 mem: storing 0 in location 1333
9999 mem: clearing editor:address:editor-data
9999 mem: location 1334 is 1148
9999 mem: skipping refcount at 1148
9999 mem: decrementing refcount of 1148: 12 -> 11
9999 mem: storing 0 in location 1334
9999 mem: clearing cursor-row:number
9999 mem: storing 0 in location 1335
9999 mem: clearing cursor-column:number
9999 mem: storing 0 in location 1336
9999 mem: clearing screen
9999 mem: location 1332 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1332
9999 mem: clearing e:event
9999 mem: storing 0 in location 1337
9999 mem: storing 0 in location 1338
9999 mem: storing 0 in location 1339
9999 mem: storing 0 in location 1340
9999 mem: clearing console:address:console
9999 mem: location 1333 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1333
9999 mem: clearing found?:boolean
9999 mem: storing 0 in location 1341
9999 mem: clearing quit?:boolean
9999 mem: storing 0 in location 1342
9999 mem: clearing t:touch-event
9999 mem: storing 0 in location 1343
9999 mem: storing 0 in location 1344
9999 mem: storing 0 in location 1345
9999 mem: clearing is-touch?:boolean
9999 mem: storing 0 in location 1346
9999 mem: clearing screen
9999 mem: location 1332 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1332
9999 mem: clearing editor
9999 mem: location 1334 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1334
9999 mem: clearing go-render?:boolean
9999 mem: storing 0 in location 1347
9999 mem: clearing screen
9999 mem: location 1332 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1332
9999 mem: automatically abandoning 1329
9999 abandon: updating refcounts inside 1329: (array number)
9999 abandon: saving 1329 in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .0def      .\n    .ghi       .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
