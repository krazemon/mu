 102 run: assume-console {"\n    left-click 3, 0\n    press up-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {up-arrow: ()}
9992 load: after rewriting: press {up-arrow: ()}
9999 mem: storing 'left-click' event starting at 1342
9999 mem: storing 'press' event starting at 1346
9999 mem: storing console in 1350
9999 mem: storing console data in 1352
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1350
9999 mem: location 2 is 1151
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1353
9999 mem: storing 14 in location 1354
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 101 -> 102
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 6 -> 7
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 1
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 102 -> 103
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 103 -> 102
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 102 -> 103
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1350
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1312
9999 mem: incrementing refcount of 1350: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1350
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1351
9999 mem: storing 1351 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 0
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1352
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1352 is 1340
9999 mem: storing 1340 in location 1314
9999 mem: incrementing refcount of 1340: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 2 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 0
9999 mem: location 1315 is 2
9999 mem: storing 0 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9998 run: base address is 1341
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 0
9998 run: address to copy is 1342
9998 run: its type is event
9999 mem: location 1342 is 2
9999 mem: location 1343 is 65513
9999 mem: location 1344 is 3
9999 mem: location 1345 is 0
9999 mem: storing 2 in location 1318
9999 mem: storing 65513 in location 1319
9999 mem: storing 3 in location 1320
9999 mem: storing 0 in location 1321
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 0
9999 mem: location 1313 is 1351
9999 mem: storing 1 in location 1351
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1318 is 2
9999 mem: location 1319 is 65513
9999 mem: location 1320 is 3
9999 mem: location 1321 is 0
9999 mem: location 1312 is 1350
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1350
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1361
9999 mem: storing 65513 in location 1362
9999 mem: storing 3 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1350: 2 -> 1
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 1 -> 2
9999 mem: storing 1 in location 1365
9999 mem: storing 0 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1361 is 2
9999 mem: location 1362 is 65513
9999 mem: location 1363 is 3
9999 mem: location 1364 is 0
9999 mem: storing 1362 in location 1367
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 1362
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 mem: location 1367 is 1362
9999 mem: location 1362 is 65513
9999 mem: location 1363 is 3
9999 mem: location 1364 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1369
9999 mem: storing 27 in location 1370
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1372
9999 mem: incrementing refcount of 1008: 103 -> 104
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1373
9999 mem: incrementing refcount of 1151: 7 -> 8
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1374
9999 mem: storing 3 in location 1375
9999 mem: storing 0 in location 1376
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1373 is 1151
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1374 is 65513
9999 mem: location 1375 is 3
9999 mem: location 1376 is 0
9998 run: address to copy is 1375
9998 run: its type is "number"
9999 mem: location 1375 is 3
9999 mem: storing 3 in location 1377
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1377 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1374 is 65513
9999 mem: location 1375 is 3
9999 mem: location 1376 is 0
9998 run: address to copy is 1376
9998 run: its type is "number"
9999 mem: location 1376 is 0
9999 mem: storing 0 in location 1378
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1379
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1378 is 0
9999 mem: location 1379 is 0
9999 mem: storing 0 in location 1380
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1381
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1378 is 0
9999 mem: location 1381 is 9
9999 mem: storing 0 in location 1382
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 1
9999 mem: storing 1 in location 1383
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1384
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1385
9999 mem: incrementing refcount of 1170: 10 -> 11
9990 schedule: move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-to-previous-line-from-left-margin
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1372 is 1008
9999 mem: location 1373 is 1151
9999 mem: location 1377 is 3
9999 mem: location 1378 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1398
9999 mem: storing 26 in location 1399
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1401
9999 mem: incrementing refcount of 1008: 104 -> 105
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1402
9999 mem: incrementing refcount of 1151: 8 -> 9
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1403
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1404
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1402 is 1151
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1405
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1406
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1401 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 105 -> 106
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1199
 107 run: return {height: "number"}
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1407
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1408
9999 mem: incrementing refcount of 1170: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1170
9999 mem: storing 1170 in location 1409
9999 mem: incrementing refcount of 1170: 12 -> 13
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 14 -> 13
9999 mem: storing 1191 in location 1408
9999 mem: incrementing refcount of 1191: 13 -> 14
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1410
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1411
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 1
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1412
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1403 is 3
9999 mem: location 1412 is 1159
9999 mem: storing 3 in location 1159
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1413
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1404 is 0
9999 mem: location 1413 is 1160
9999 mem: storing 0 in location 1160
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1170
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1402 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1414
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1191
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1408 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1192
9998 run: its type is "character"
9999 mem: location 1192 is 97
9999 mem: storing 97 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 97
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 0
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 15 -> 14
9999 mem: storing 1200 in location 1408
9999 mem: incrementing refcount of 1200: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1170
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 167
9999 mem: location 1172 is 1191
9999 mem: location 1173 is 0
9999 mem: location 1198 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1191
9999 mem: storing 1191 in location 1199
9999 mem: incrementing refcount of 1191: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1191
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1191
9999 mem: decrementing refcount of 1170: 14 -> 13
9999 mem: storing 1191 in location 1409
9999 mem: incrementing refcount of 1191: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1200
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1408 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 98
9999 mem: storing 98 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 98
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 1
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 15 -> 14
9999 mem: storing 1204 in location 1408
9999 mem: incrementing refcount of 1204: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1191
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1191 in location 1198
9999 mem: incrementing refcount of 1191: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1191
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 97
9999 mem: location 1193 is 1200
9999 mem: location 1194 is 1170
9999 mem: location 1198 is 1191
9999 mem: skipping refcount at 1191
9998 run: address to copy is 1193
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1193 is 1200
9999 mem: storing 1200 in location 1199
9999 mem: incrementing refcount of 1200: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1191: 17 -> 16
9999 mem: storing 1200 in location 1409
9999 mem: incrementing refcount of 1200: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 1
9999 mem: storing 2 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1204
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1408 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 99
9999 mem: storing 99 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 99
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 2
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 15 -> 14
9999 mem: storing 1208 in location 1408
9999 mem: incrementing refcount of 1208: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1198
9999 mem: incrementing refcount of 1200: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 98
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1191
9999 mem: location 1198 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1199
9999 mem: incrementing refcount of 1204: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 17 -> 16
9999 mem: storing 1204 in location 1409
9999 mem: incrementing refcount of 1204: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 2
9999 mem: storing 3 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1208
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 1
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1408 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 10
9999 mem: storing 1 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1410 is 1
9999 mem: storing 2 in location 1410
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1411
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 15 -> 14
9999 mem: storing 1212 in location 1408
9999 mem: incrementing refcount of 1212: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1198
9999 mem: incrementing refcount of 1204: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 99
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1198 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 17 -> 16
9999 mem: storing 1208 in location 1409
9999 mem: incrementing refcount of 1208: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1212
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1408 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 100
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 0
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 15 -> 14
9999 mem: storing 1216 in location 1408
9999 mem: incrementing refcount of 1216: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1198
9999 mem: incrementing refcount of 1208: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1198 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 17 -> 16
9999 mem: storing 1212 in location 1409
9999 mem: incrementing refcount of 1212: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1216
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1408 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 101
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 1
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 15 -> 14
9999 mem: storing 1220 in location 1408
9999 mem: incrementing refcount of 1220: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 17 -> 16
9999 mem: storing 1216 in location 1409
9999 mem: incrementing refcount of 1216: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 1
9999 mem: storing 2 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1220
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1408 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 102
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 2
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 15 -> 14
9999 mem: storing 1224 in location 1408
9999 mem: incrementing refcount of 1224: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 17 -> 16
9999 mem: storing 1220 in location 1409
9999 mem: incrementing refcount of 1220: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 2
9999 mem: storing 3 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1224
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 2
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1408 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 10
9999 mem: storing 1 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1410 is 2
9999 mem: storing 3 in location 1410
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1411
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 15 -> 14
9999 mem: storing 1228 in location 1408
9999 mem: incrementing refcount of 1228: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1199
9999 mem: incrementing refcount of 1224: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 17 -> 16
9999 mem: storing 1224 in location 1409
9999 mem: incrementing refcount of 1224: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1228
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 3
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 1 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 0
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 1 in location 1417
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1224
9999 mem: location 1414 is 1155
9999 mem: decrementing refcount of 1170: 13 -> 12
9999 mem: storing 1224 in location 1155
9999 mem: incrementing refcount of 1224: 16 -> 17
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1408 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1229
9998 run: its type is "character"
9999 mem: location 1229 is 103
9999 mem: storing 103 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 103
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 0
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 15 -> 14
9999 mem: storing 1232 in location 1408
9999 mem: incrementing refcount of 1232: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1224
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1226
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1226 is 1228
9999 mem: storing 1228 in location 1199
9999 mem: incrementing refcount of 1228: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1228
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1228
9999 mem: decrementing refcount of 1224: 18 -> 17
9999 mem: storing 1228 in location 1409
9999 mem: incrementing refcount of 1228: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 0
9999 mem: storing 1 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1232
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 3
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 1 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 1
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1417
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1408 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1233
9998 run: its type is "character"
9999 mem: location 1233 is 104
9999 mem: storing 104 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 104
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 1
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1232
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 15 -> 14
9999 mem: storing 1236 in location 1408
9999 mem: incrementing refcount of 1236: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1228
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1228 in location 1198
9999 mem: incrementing refcount of 1228: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1228
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9999 mem: location 1229 is 103
9999 mem: location 1230 is 1232
9999 mem: location 1231 is 1224
9999 mem: location 1198 is 1228
9999 mem: skipping refcount at 1228
9998 run: address to copy is 1230
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1230 is 1232
9999 mem: storing 1232 in location 1199
9999 mem: incrementing refcount of 1232: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1232
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1232
9999 mem: decrementing refcount of 1228: 17 -> 16
9999 mem: storing 1232 in location 1409
9999 mem: incrementing refcount of 1232: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 1
9999 mem: storing 2 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 1236
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1410 is 3
9999 mem: location 1407 is 5
9999 mem: storing 0 in location 1415
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1415 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 1 in location 1416
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 2
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1417
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1408 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1408 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1237
9998 run: its type is "character"
9999 mem: location 1237 is 105
9999 mem: storing 105 in location 1418
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1418 is 105
9999 mem: storing 0 in location 1419
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1419 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1411 is 2
9999 mem: location 1406 is 9
9999 mem: storing 0 in location 1421
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1408 is 1236
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1236 in location 1198
9999 mem: incrementing refcount of 1236: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1236
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9999 mem: location 1237 is 105
9999 mem: location 1238 is 0
9999 mem: location 1239 is 1232
9999 mem: location 1198 is 1236
9999 mem: skipping refcount at 1236
9998 run: address to copy is 1238
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1238 is 0
9999 mem: storing 0 in location 1199
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1236: 14 -> 13
9999 mem: storing 0 in location 1408
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1409 is 1232
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1232 in location 1198
9999 mem: incrementing refcount of 1232: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1232
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9999 mem: location 1233 is 104
9999 mem: location 1234 is 1236
9999 mem: location 1235 is 1228
9999 mem: location 1198 is 1232
9999 mem: skipping refcount at 1232
9998 run: address to copy is 1234
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1234 is 1236
9999 mem: storing 1236 in location 1199
9999 mem: incrementing refcount of 1236: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1199 is 1236
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1236
9999 mem: decrementing refcount of 1232: 17 -> 16
9999 mem: storing 1236 in location 1409
9999 mem: incrementing refcount of 1236: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1411 is 2
9999 mem: storing 3 in location 1411
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1408 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 1 in location 1416
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1411 is 3
9999 mem: location 1413 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1422
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1416 is 1
9999 mem: location 1422 is 0
9999 mem: storing 0 in location 1423
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1424
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: storing 0 in location 1425
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1402 is 1151
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 9 -> 8
9999 mem: storing 1151 in location 1373
9999 mem: incrementing refcount of 1151: 8 -> 9
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1386
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1387
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1388
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1373 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1389
9999 mem: incrementing refcount of 1170: 12 -> 13
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1270
9999 mem: storing 1270 in location 1391
9999 mem: incrementing refcount of 1270: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1383 is 1
9999 mem: location 1384 is 0
9999 mem: location 1385 is 1170
9999 mem: location 1387 is 3
9999 mem: location 1388 is 0
9999 mem: location 1389 is 1170
9999 mem: location 1386 is 0
9999 mem: location 1391 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1391 is 1270
9999 mem: skipping refcount at 1270
9999 mem: storing 1 in location 1271
9999 mem: storing 1 in location 1272
9999 mem: storing 0 in location 1273
9999 mem: storing 1170 in location 1274
9999 mem: storing 3 in location 1275
9999 mem: storing 0 in location 1276
9999 mem: storing 1170 in location 1277
9999 mem: storing 0 in location 1278
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1373 is 1151
9999 mem: location 1391 is 1270
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1187
9999 mem: incrementing refcount of 1151: 9 -> 10
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1188
9999 mem: incrementing refcount of 1270: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1189
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1188 is 1270
9999 mem: location 1189 is 1162
9999 mem: location 1162 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1164
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1270 in location 1167
9999 mem: incrementing refcount of 1270: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1168
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1426
9999 mem: storing 1426 in location 1169
9999 mem: incrementing refcount of 1426: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1270
9999 mem: location 1168 is 0
9999 mem: location 1169 is 1426
9999 mem: skipping refcount at 1426
9999 mem: location 1169 is 1426
9999 mem: skipping refcount at 1426
9999 mem: storing 1270 in location 1427
9999 mem: storing 0 in location 1428
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1426
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1426
9999 mem: location 1189 is 1162
9999 mem: storing 1426 in location 1162
9999 mem: incrementing refcount of 1426: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1190 is 1163
9999 mem: storing 0 in location 1163
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1187 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 10 -> 9
9999 mem: storing 1151 in location 1373
9999 mem: incrementing refcount of 1151: 9 -> 10
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1373 is 1151
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 3
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 106 -> 107
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 107 -> 106
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 106 -> 107
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1350
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1312
9999 mem: incrementing refcount of 1350: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1350
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 1
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1351
9999 mem: storing 1351 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 1
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1352
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1352 is 1340
9999 mem: storing 1340 in location 1314
9999 mem: incrementing refcount of 1340: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 2 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 1
9999 mem: location 1315 is 2
9999 mem: storing 0 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9998 run: base address is 1341
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 1
9998 run: address to copy is 1346
9998 run: its type is event
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65517
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 1 in location 1318
9999 mem: storing 65517 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 1
9999 mem: location 1313 is 1351
9999 mem: storing 2 in location 1351
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1318 is 1
9999 mem: location 1319 is 65517
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1312 is 1350
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1350
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1361
9999 mem: storing 65517 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1350: 3 -> 2
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 2 -> 3
9999 mem: storing 1 in location 1365
9999 mem: storing 0 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1361 is 1
9999 mem: location 1362 is 65517
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: storing 0 in location 1367
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 mem: location 1361 is 1
9999 mem: location 1362 is 65517
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1429
9999 mem: storing 85 in location 1430
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1432
9999 mem: incrementing refcount of 1008: 107 -> 108
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 10 -> 11
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1434
9999 mem: storing 65517 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1433 is 1151
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 108 -> 109
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1199
 106 run: return {width: "number"}
9999 mem: location 1199 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1439
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1198
9999 mem: incrementing refcount of 1008: 109 -> 110
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1198 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1198 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1199
 106 run: return {height: "number"}
9999 mem: location 1199 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1440
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1441
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1442
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1444
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1445
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1444 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1446
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1445 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1447
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1434 is 1
9999 mem: location 1435 is 65517
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: storing 0 in location 1448
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1448 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1434 is 1
9999 mem: location 1435 is 65517
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: storing 1435 in location 1502
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1502 is 1435
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1502 is 1435
9999 mem: location 1435 is 65517
9999 mem: storing 0 in location 1465
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1502 is 1435
9999 mem: location 1435 is 65517
9999 mem: storing 0 in location 1481
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 523
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-moves-to-previous-line-from-left-margin
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1502 is 1435
9999 mem: location 1435 is 65517
9999 mem: storing 0 in location 1488
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1502 is 1435
9999 mem: location 1435 is 65517
9999 mem: storing 0 in location 1489
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1502 is 1435
9999 mem: location 1435 is 65517
9999 mem: storing 0 in location 1503
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1503 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1502 is 1435
9999 mem: location 1435 is 65517
9999 mem: storing 1 in location 1504
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1504 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 3
9999 mem: storing 3 in location 1468
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1469
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1470
9999 mem: incrementing refcount of 1170: 13 -> 14
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-previous-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1433 is 1151
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1516
9999 mem: storing 20 in location 1517
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1519
9999 mem: incrementing refcount of 1151: 11 -> 12
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1520
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1521
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1522
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1523
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1519 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1524
 106 run: {already-at-top?: "boolean"} <- lesser-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal", "top": ()}
9999 mem: location 1520 is 1159
9999 mem: location 1159 is 3
9999 mem: storing 0 in location 1525
 106 run: jump-if {already-at-top?: "boolean"}, {: "offset"}
9999 mem: location 1525 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1522 is 1155
9999 mem: location 1155 is 1224
9999 mem: storing 1224 in location 1526
9999 mem: incrementing refcount of 1224: 17 -> 18
 106 run: {old: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1224
9999 mem: storing 1224 in location 1527
9999 mem: incrementing refcount of 1224: 18 -> 19
 106 run: {c2: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1526 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1526 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1528
 106 run: {at-newline?: "boolean"} <- equal {c2: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1528 is 10
9999 mem: storing 1 in location 1529
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1529 is 1
9998 run: jumping to instruction 21
 106 run: {old: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1224
9999 mem: decrementing refcount of 1224: 19 -> 18
9999 mem: storing 1224 in location 1527
9999 mem: incrementing refcount of 1224: 18 -> 19
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- before-previous-line {curr: ("address" "shared" "duplex-list" "character")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1526 is 1224
9999 mem: location 1519 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1538
9999 mem: storing 14 in location 1539
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1541
9999 mem: incrementing refcount of 1224: 19 -> 20
 107 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1542
9999 mem: incrementing refcount of 1151: 12 -> 13
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1541 is 1224
9999 mem: storing 1224 in location 1543
9999 mem: incrementing refcount of 1224: 20 -> 21
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1543 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1543 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1544
 107 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1542 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1542 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1545
 107 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1542 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1542 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1546
 107 run: {max-line-length: "number"} <- subtract {right: "number"}, {left: "number"}, {-1: "literal", "exclusive-right": ()}, {1: "literal", "wrap-icon": ()}
9999 mem: location 1546 is 9
9999 mem: location 1545 is 0
9999 mem: storing 9 in location 1547
 107 run: {sentinel: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1542 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1224
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 3
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1542 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1152 is 1170
9999 mem: storing 1170 in location 1548
9999 mem: incrementing refcount of 1170: 14 -> 15
 107 run: {len: "number"} <- previous-line-length {curr: ("address" "shared" "duplex-list" "character")}, {sentinel: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1543 is 1224
9999 mem: location 1548 is 1170
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1119
9999 mem: incrementing refcount of 1224: 21 -> 22
 108 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1120
9999 mem: incrementing refcount of 1170: 15 -> 16
 108 run: {result: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1121
 108 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1224
9998 run: jumping to instruction 6
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1224
9999 mem: location 1120 is 1170
9999 mem: storing 0 in location 1122
 108 run: jump-unless {at-start?: "boolean"}, {1: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 9
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1224
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 22 -> 23
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 16 -> 17
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1224: 23 -> 22
9999 mem: storing 1220 in location 1119
9999 mem: incrementing refcount of 1220: 17 -> 18
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1220
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1220
9999 mem: location 1120 is 1170
9999 mem: storing 0 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1119 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1123
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 102
9999 mem: storing 0 in location 1124
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1220
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 18 -> 19
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 16 -> 17
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1220: 19 -> 18
9999 mem: storing 1216 in location 1119
9999 mem: incrementing refcount of 1216: 17 -> 18
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1216
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1216
9999 mem: location 1120 is 1170
9999 mem: storing 0 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1119 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1123
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 101
9999 mem: storing 0 in location 1124
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1216
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 18 -> 19
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 16 -> 17
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1216: 19 -> 18
9999 mem: storing 1212 in location 1119
9999 mem: incrementing refcount of 1212: 17 -> 18
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1212
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1212
9999 mem: location 1120 is 1170
9999 mem: storing 0 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1119 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1123
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 100
9999 mem: storing 0 in location 1124
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 108 run: {result: "number"} <- add {result: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 108 run: jump {: "offset"}
9998 run: jumping to instruction 10
 108 run: {curr: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1212
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 109 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 18 -> 19
 109 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 109 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 16 -> 17
 109 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1212: 19 -> 18
9999 mem: storing 1208 in location 1119
9999 mem: incrementing refcount of 1208: 17 -> 18
 108 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1119 is 1208
9998 run: jump-unless fell through
 108 run: {at-start?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1208
9999 mem: location 1120 is 1170
9999 mem: storing 0 in location 1122
 108 run: jump-if {at-start?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 108 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1119 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 10
9999 mem: storing 10 in location 1123
 108 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 10
9999 mem: storing 1 in location 1124
 108 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 1
9998 run: jumping to instruction 19
 108 run: reply {result: "number"}
9999 mem: location 1121 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1549
 107 run: jump-if {len: "number"}, {: "offset"}
9999 mem: location 1549 is 3
9998 run: jumping to instruction 16
 107 run: _, {max: "number"} <- divide-with-remainder {len: "number"}, {max-line-length: "number"}
9999 mem: location 1549 is 3
9999 mem: location 1547 is 9
9999 mem: storing 3 in location 1551
 107 run: jump-if {max: "number"}, {: "offset"}
9999 mem: location 1551 is 3
9998 run: jumping to instruction 21
 107 run: {max: "number"} <- add {max: "number"}, {1: "literal"}
9999 mem: location 1551 is 3
9999 mem: storing 4 in location 1551
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1552
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1552 is 0
9999 mem: location 1551 is 4
9999 mem: storing 0 in location 1553
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1553 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1543 is 1224
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1224 in location 1198
9999 mem: incrementing refcount of 1224: 22 -> 23
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1224
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1198 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1227
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1227 is 1220
9999 mem: storing 1220 in location 1199
9999 mem: incrementing refcount of 1220: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1220
9999 mem: storing 1220 in location 1550
9999 mem: incrementing refcount of 1220: 19 -> 20
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1550 is 1220
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1550 is 1220
9999 mem: decrementing refcount of 1224: 23 -> 22
9999 mem: storing 1220 in location 1543
9999 mem: incrementing refcount of 1220: 20 -> 21
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1552 is 0
9999 mem: storing 1 in location 1552
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1552 is 1
9999 mem: location 1551 is 4
9999 mem: storing 0 in location 1553
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1553 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1543 is 1220
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1198
9999 mem: incrementing refcount of 1220: 21 -> 22
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1220
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1198 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1223
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1223 is 1216
9999 mem: storing 1216 in location 1199
9999 mem: incrementing refcount of 1216: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1220: 22 -> 21
9999 mem: storing 1216 in location 1550
9999 mem: incrementing refcount of 1216: 19 -> 20
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1550 is 1216
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1550 is 1216
9999 mem: decrementing refcount of 1220: 21 -> 20
9999 mem: storing 1216 in location 1543
9999 mem: incrementing refcount of 1216: 20 -> 21
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1552 is 1
9999 mem: storing 2 in location 1552
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1552 is 2
9999 mem: location 1551 is 4
9999 mem: storing 0 in location 1553
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1553 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1543 is 1216
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1198
9999 mem: incrementing refcount of 1216: 21 -> 22
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1216
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1198 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1212
9999 mem: storing 1212 in location 1199
9999 mem: incrementing refcount of 1212: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1216: 22 -> 21
9999 mem: storing 1212 in location 1550
9999 mem: incrementing refcount of 1212: 19 -> 20
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1550 is 1212
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1550 is 1212
9999 mem: decrementing refcount of 1216: 21 -> 20
9999 mem: storing 1212 in location 1543
9999 mem: incrementing refcount of 1212: 20 -> 21
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1552 is 2
9999 mem: storing 3 in location 1552
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1552 is 3
9999 mem: location 1551 is 4
9999 mem: storing 0 in location 1553
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1553 is 0
9998 run: jump-if fell through
 107 run: {prev: ("address" "shared" "duplex-list" "character")} <- prev_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1543 is 1212
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1198
9999 mem: incrementing refcount of 1212: 21 -> 22
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1198 is 1212
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1198 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1208
9999 mem: storing 1208 in location 1199
9999 mem: incrementing refcount of 1208: 18 -> 19
 108 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1199 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1212: 22 -> 21
9999 mem: storing 1208 in location 1550
9999 mem: incrementing refcount of 1208: 19 -> 20
 107 run: jump-unless {prev: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1550 is 1208
9998 run: jump-unless fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1550 is 1208
9999 mem: decrementing refcount of 1212: 21 -> 20
9999 mem: storing 1208 in location 1543
9999 mem: incrementing refcount of 1208: 20 -> 21
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1552 is 3
9999 mem: storing 4 in location 1552
 107 run: jump {: "offset"}
9998 run: jumping to instruction 25
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1552 is 4
9999 mem: location 1551 is 4
9999 mem: storing 1 in location 1553
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1553 is 1
9998 run: jumping to instruction 32
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1543 is 1208
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1224: 22 -> 21
9999 mem: storing 1208 in location 1526
9999 mem: incrementing refcount of 1208: 21 -> 22
 106 run: {no-motion?: "boolean"} <- equal {curr: ("address" "shared" "duplex-list" "character")}, {old: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1208
9999 mem: location 1527 is 1224
9999 mem: storing 0 in location 1530
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1531
 106 run: jump-unless {no-motion?: "boolean"}, {1: "offset"}
9999 mem: location 1530 is 0
9998 run: jumping to instruction 29
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1526 is 1208
9999 mem: location 1522 is 1155
9999 mem: decrementing refcount of 1224: 21 -> 20
9999 mem: storing 1208 in location 1155
9999 mem: incrementing refcount of 1208: 22 -> 23
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- subtract {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1520 is 1159
9999 mem: location 1159 is 3
9999 mem: location 1520 is 1159
9999 mem: storing 2 in location 1159
 106 run: {target-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1521 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1532
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1523 is 0
9999 mem: location 1521 is 1160
9999 mem: storing 0 in location 1160
 106 run: {done?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {target-column: "number"}
9999 mem: location 1521 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1532 is 0
9999 mem: storing 1 in location 1533
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1533 is 1
9998 run: jumping to instruction 45
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1531
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1519 is 1151
9999 mem: location 1531 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1151: 13 -> 12
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 12 -> 13
9999 mem: storing 0 in location 1438
 105 run: {undo-coalesce-tag: "number"} <- copy {3: "literal", "up-arrow": ()}
9999 mem: storing 3 in location 1471
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1472
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1473
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1474
9999 mem: incrementing refcount of 1170: 16 -> 17
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1471 is 3
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1452
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1426
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1426
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1426 in location 1198
9999 mem: incrementing refcount of 1426: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1198 is 1426
9999 mem: skipping refcount at 1426
9999 mem: location 1427 is 1270
9999 mem: location 1428 is 0
9999 mem: location 1198 is 1426
9999 mem: skipping refcount at 1426
9998 run: address to copy is 1427
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1427 is 1270
9999 mem: storing 1270 in location 1199
9999 mem: incrementing refcount of 1270: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1199 is 1270
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1270
9999 mem: storing 1270 in location 1451
9999 mem: incrementing refcount of 1270: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1451 is 1270
9999 mem: skipping refcount at 1270
9999 mem: location 1271 is 1
9999 mem: location 1272 is 1
9999 mem: location 1273 is 0
9999 mem: location 1274 is 1170
9999 mem: location 1275 is 3
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1170
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1451 is 1270
9999 mem: skipping refcount at 1270
9999 mem: storing 1272 in location 1457
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1457 is 1272
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1457 is 1272
9999 mem: location 1272 is 1
9999 mem: location 1273 is 0
9999 mem: location 1274 is 1170
9999 mem: location 1275 is 3
9999 mem: location 1276 is 0
9999 mem: location 1277 is 1170
9999 mem: location 1278 is 0
9999 mem: location 1457 is 1272
9998 run: address to copy is 1278
9998 run: its type is "number"
9999 mem: location 1278 is 0
9999 mem: storing 0 in location 1475
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1471 is 3
9999 mem: location 1475 is 0
9999 mem: storing 0 in location 1476
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1476 is 0
9998 run: jumping to instruction 666
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1554
9999 mem: decrementing refcount of 1270: 5 -> 4
9999 mem: storing 1554 in location 1451
9999 mem: incrementing refcount of 1554: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1468 is 3
9999 mem: location 1469 is 0
9999 mem: location 1470 is 1170
9999 mem: location 1472 is 2
9999 mem: location 1473 is 0
9999 mem: location 1474 is 1170
9999 mem: location 1471 is 3
9999 mem: location 1451 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1451 is 1554
9999 mem: skipping refcount at 1554
9999 mem: storing 1 in location 1555
9999 mem: storing 3 in location 1556
9999 mem: storing 0 in location 1557
9999 mem: storing 1170 in location 1558
9999 mem: storing 2 in location 1559
9999 mem: storing 0 in location 1560
9999 mem: storing 1170 in location 1561
9999 mem: storing 3 in location 1562
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1433 is 1151
9999 mem: location 1451 is 1554
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1187
9999 mem: incrementing refcount of 1151: 13 -> 14
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1554 in location 1188
9999 mem: incrementing refcount of 1554: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1426
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1189
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1188 is 1554
9999 mem: location 1189 is 1162
9999 mem: location 1162 is 1426
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1164
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1554 in location 1167
9999 mem: incrementing refcount of 1554: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1426 in location 1168
9999 mem: incrementing refcount of 1426: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1566
9999 mem: storing 1566 in location 1169
9999 mem: incrementing refcount of 1566: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1554
9999 mem: location 1168 is 1426
9999 mem: location 1169 is 1566
9999 mem: skipping refcount at 1566
9999 mem: location 1169 is 1566
9999 mem: skipping refcount at 1566
9999 mem: storing 1554 in location 1567
9999 mem: storing 1426 in location 1568
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1566
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1566
9999 mem: location 1189 is 1162
9999 mem: decrementing refcount of 1426: 4 -> 3
9999 mem: storing 1566 in location 1162
9999 mem: incrementing refcount of 1566: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1190 is 1163
9999 mem: storing 0 in location 1163
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1187 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 14 -> 13
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 13 -> 14
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1432 is 1008
9999 mem: location 1433 is 1151
9999 mem: location 1438 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1151
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 110 -> 109
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 109 -> 110
9999 mem: decrementing refcount of 1151: 14 -> 13
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 13 -> 14
9999 mem: storing 0 in location 1368
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 110 -> 111
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 110 -> 111
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1350
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1350 in location 1312
9999 mem: incrementing refcount of 1350: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1350
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 2
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1351
9999 mem: storing 1351 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9999 mem: location 1351 is 2
9999 mem: location 1352 is 1340
9999 mem: location 1312 is 1350
9999 mem: skipping refcount at 1350
9998 run: address to copy is 1352
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1352 is 1340
9999 mem: storing 1340 in location 1314
9999 mem: incrementing refcount of 1340: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 2 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1351
9999 mem: location 1351 is 2
9999 mem: location 1315 is 2
9999 mem: storing 1 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1195
9999 mem: storing 1195 in location 1317
9999 mem: incrementing refcount of 1195: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1317 is 1195
9999 mem: skipping refcount at 1195
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1199 is 0
9999 mem: location 1312 is 1350
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1350
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1350: 4 -> 3
9999 mem: storing 1350 in location 1357
9999 mem: incrementing refcount of 1350: 3 -> 4
9999 mem: storing 1 in location 1365
9999 mem: storing 1 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1350
9999 mem: location 1358 is 1151
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 2 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [0]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type {"0": "literal-string"}
9999 mem: storing 'type' event starting at 1571
9999 mem: storing 'text' tag at 1571
9999 mem: storing character 48 at 1572
9999 mem: storing console in 1575
9999 mem: storing console data in 1577
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1575
9999 mem: location 2 is 1151
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1353
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 111 -> 112
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1575 in location 1357
9999 mem: incrementing refcount of 1575: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 14 -> 15
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 112 -> 113
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 113 -> 112
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 112 -> 113
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1575
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1575 in location 1312
9999 mem: incrementing refcount of 1575: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1575
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9999 mem: location 1576 is 0
9999 mem: location 1577 is 1569
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9998 run: address to copy is 1576
9999 mem: storing 1576 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9999 mem: location 1576 is 0
9999 mem: location 1577 is 1569
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9998 run: address to copy is 1577
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1577 is 1569
9999 mem: storing 1569 in location 1314
9999 mem: incrementing refcount of 1569: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1569
9999 mem: skipping refcount at 1569
9999 mem: storing 1 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1576
9999 mem: location 1576 is 0
9999 mem: location 1315 is 1
9999 mem: storing 0 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1314 is 1569
9999 mem: skipping refcount at 1569
9998 run: base address is 1570
9999 mem: location 1313 is 1576
9999 mem: location 1576 is 0
9998 run: address to copy is 1571
9998 run: its type is event
9999 mem: location 1571 is 0
9999 mem: location 1572 is 48
9999 mem: location 1573 is 0
9999 mem: location 1574 is 0
9999 mem: storing 0 in location 1318
9999 mem: storing 48 in location 1319
9999 mem: storing 0 in location 1320
9999 mem: storing 0 in location 1321
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1313 is 1576
9999 mem: location 1576 is 0
9999 mem: location 1313 is 1576
9999 mem: storing 1 in location 1576
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1318 is 0
9999 mem: location 1319 is 48
9999 mem: location 1320 is 0
9999 mem: location 1321 is 0
9999 mem: location 1312 is 1575
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1575
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1361
9999 mem: storing 48 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1575: 2 -> 1
9999 mem: storing 1575 in location 1357
9999 mem: incrementing refcount of 1575: 1 -> 2
9999 mem: storing 1 in location 1365
9999 mem: storing 0 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1361 is 0
9999 mem: location 1362 is 48
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 mem: storing 0 in location 1367
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1356 is 1008
9999 mem: location 1358 is 1151
9999 mem: location 1361 is 0
9999 mem: location 1362 is 48
9999 mem: location 1363 is 0
9999 mem: location 1364 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1429
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1432
9999 mem: incrementing refcount of 1008: 113 -> 114
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 15 -> 16
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1434
9999 mem: storing 48 in location 1435
9999 mem: storing 0 in location 1436
9999 mem: storing 0 in location 1437
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1433 is 1151
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1578
9999 mem: storing 3 in location 1579
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1581
9999 mem: incrementing refcount of 1008: 114 -> 115
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1581 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1582
 106 run: return {width: "number"}
9999 mem: location 1582 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1439
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1581
9999 mem: incrementing refcount of 1008: 115 -> 116
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1581 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1582
 106 run: return {height: "number"}
9999 mem: location 1582 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1440
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1441
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1442
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1443
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1444
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1445
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1444 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1446
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1445 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1447
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1434 is 0
9999 mem: location 1435 is 48
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: storing 1435 in location 1448
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1448 is 1435
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1449
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1449 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1460
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1460 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1465
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1465 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1481
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1482
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1487
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1488
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1488 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1489
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1490
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1490 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1494
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1494 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 0 in location 1498
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1498 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: storing 1 in location 1501
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1438
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1501 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1483
9999 mem: incrementing refcount of 1170: 17 -> 18
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1443 is 1155
9999 mem: location 1155 is 1208
9999 mem: storing 1208 in location 1495
9999 mem: incrementing refcount of 1208: 23 -> 24
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1433 is 1151
9999 mem: location 1448 is 1435
9999 mem: location 1435 is 48
9999 mem: location 1432 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1583
9999 mem: storing 31 in location 1584
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1586
9999 mem: incrementing refcount of 1151: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1587
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1588
9999 mem: incrementing refcount of 1008: 116 -> 117
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1208
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1589
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1587 is 48
9999 mem: location 1589 is 1155
9999 mem: location 1155 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1187
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1188
9999 mem: incrementing refcount of 1208: 24 -> 25
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1616
9999 mem: storing 1616 in location 1189
9999 mem: incrementing refcount of 1616: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1189 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 0
9999 mem: location 1618 is 0
9999 mem: location 1619 is 0
9999 mem: location 1187 is 48
9999 mem: location 1189 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy to is 1617
9999 mem: storing 48 in location 1617
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1190
9999 mem: incrementing refcount of 1212: 20 -> 21
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1189 is 1616
9999 mem: location 1188 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy to is 1210
9999 mem: storing 1616 in location 1210
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 48
9999 mem: location 1618 is 0
9999 mem: location 1619 is 0
9999 mem: location 1188 is 1208
9999 mem: location 1189 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy to is 1619
9999 mem: storing 1208 in location 1619
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1189 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 48
9999 mem: location 1618 is 0
9999 mem: location 1619 is 1208
9999 mem: location 1190 is 1212
9999 mem: location 1189 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy to is 1618
9999 mem: storing 1212 in location 1618
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1190 is 1212
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1190 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1189 is 1616
9999 mem: location 1190 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy to is 1215
9999 mem: storing 1616 in location 1215
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1188 is 1208
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1589 is 1155
9999 mem: location 1155 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1581
9999 mem: incrementing refcount of 1208: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1616
9999 mem: location 1211 is 1204
9999 mem: location 1581 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1616
9999 mem: storing 1616 in location 1582
9999 mem: incrementing refcount of 1616: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1616
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1616
9999 mem: location 1589 is 1155
9999 mem: decrementing refcount of 1208: 26 -> 25
9999 mem: storing 1616 in location 1155
9999 mem: incrementing refcount of 1616: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1590
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9999 mem: storing 1160 in location 1591
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1592
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 0
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1586 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1157
9998 run: its type is "number"
9999 mem: location 1157 is 9
9999 mem: storing 9 in location 1593
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1590 is 1159
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1594
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1591 is 1160
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1595
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1588 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1581
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1581 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1582
 107 run: return {width: "number"}
9999 mem: location 1582 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1596
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1588 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1581
9999 mem: incrementing refcount of 1008: 118 -> 119
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1581 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1581 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1582
 107 run: return {height: "number"}
9999 mem: location 1582 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1597
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1593 is 9
9999 mem: storing 8 in location 1598
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1591 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1598 is 8
9999 mem: storing 0 in location 1599
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1599 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1591 is 1160
9999 mem: location 1160 is 0
9999 mem: location 1591 is 1160
9999 mem: storing 1 in location 1160
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1589 is 1155
9999 mem: location 1155 is 1616
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1616 in location 1581
9999 mem: incrementing refcount of 1616: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1616
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 48
9999 mem: location 1618 is 1212
9999 mem: location 1619 is 1208
9999 mem: location 1581 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1618
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1618 is 1212
9999 mem: storing 1212 in location 1582
9999 mem: incrementing refcount of 1212: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: storing 1212 in location 1606
9999 mem: incrementing refcount of 1212: 22 -> 23
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1606 is 1212
9999 mem: storing 0 in location 1607
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1607 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1606 is 1212
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1591 is 1160
9999 mem: location 1160 is 1
9999 mem: location 1596 is 10
9999 mem: storing 0 in location 1610
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1610 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1589 is 1155
9999 mem: location 1155 is 1616
9999 mem: storing 1616 in location 1612
9999 mem: incrementing refcount of 1616: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1588 is 1008
9999 mem: location 1594 is 2
9999 mem: location 1595 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1595 is 0
9999 mem: storing 0 in location 1613
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1605
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1613 is 0
9999 mem: location 1593 is 9
9999 mem: storing 0 in location 1610
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1612 is 1616
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1612 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 48
9999 mem: location 1618 is 1212
9999 mem: location 1619 is 1208
9999 mem: location 1612 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1617
9998 run: its type is "character"
9999 mem: location 1617 is 48
9999 mem: storing 48 in location 1614
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1614 is 48
9999 mem: storing 0 in location 1615
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1588 is 1008
9999 mem: location 1614 is 48
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1287
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-to-previous-line-from-left-margin
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 48
  90 print-character: 48 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 48
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 48
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 20
9999 mem: storing 1056 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 100
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 48
9999 mem: location 1305 is 1056
9999 mem: storing 48 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1056
9999 mem: location 1056 is 48
9999 mem: location 1057 is 7
9999 mem: location 1304 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1057
9999 mem: storing 7 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1295 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1613 is 0
9999 mem: storing 1 in location 1613
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1612 is 1616
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1616 in location 1581
9999 mem: incrementing refcount of 1616: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1616
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 48
9999 mem: location 1618 is 1212
9999 mem: location 1619 is 1208
9999 mem: location 1581 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1618
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1618 is 1212
9999 mem: storing 1212 in location 1582
9999 mem: incrementing refcount of 1212: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1616: 6 -> 5
9999 mem: storing 1212 in location 1612
9999 mem: incrementing refcount of 1212: 24 -> 25
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1605
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1613 is 1
9999 mem: location 1593 is 9
9999 mem: storing 0 in location 1610
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1612 is 1212
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1612 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1616
9999 mem: location 1612 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 100
9999 mem: storing 100 in location 1614
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1614 is 100
9999 mem: storing 0 in location 1615
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1588 is 1008
9999 mem: location 1614 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1287
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 100
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 21
9999 mem: storing 1058 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 101
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 100
9999 mem: location 1305 is 1058
9999 mem: storing 100 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1058
9999 mem: location 1058 is 100
9999 mem: location 1059 is 7
9999 mem: location 1304 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1059
9999 mem: storing 7 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1295 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1613 is 1
9999 mem: storing 2 in location 1613
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1612 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1581
9999 mem: incrementing refcount of 1212: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 100
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1616
9999 mem: location 1581 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1582
9999 mem: incrementing refcount of 1216: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 26 -> 25
9999 mem: storing 1216 in location 1612
9999 mem: incrementing refcount of 1216: 21 -> 22
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1605
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1613 is 2
9999 mem: location 1593 is 9
9999 mem: storing 0 in location 1610
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1612 is 1216
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1612 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1612 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 101
9999 mem: storing 101 in location 1614
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1614 is 101
9999 mem: storing 0 in location 1615
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1588 is 1008
9999 mem: location 1614 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1287
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 101
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 22
9999 mem: storing 1060 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 102
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 101
9999 mem: location 1305 is 1060
9999 mem: storing 101 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1060
9999 mem: location 1060 is 101
9999 mem: location 1061 is 7
9999 mem: location 1304 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1061
9999 mem: storing 7 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1295 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1613 is 2
9999 mem: storing 3 in location 1613
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1612 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1581
9999 mem: incrementing refcount of 1216: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 101
9999 mem: location 1218 is 1220
9999 mem: location 1219 is 1212
9999 mem: location 1581 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 1220
9999 mem: storing 1220 in location 1582
9999 mem: incrementing refcount of 1220: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1220
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1220
9999 mem: decrementing refcount of 1216: 23 -> 22
9999 mem: storing 1220 in location 1612
9999 mem: incrementing refcount of 1220: 21 -> 22
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1605
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1613 is 3
9999 mem: location 1593 is 9
9999 mem: storing 0 in location 1610
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1612 is 1220
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1612 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1612 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1221
9998 run: its type is "character"
9999 mem: location 1221 is 102
9999 mem: storing 102 in location 1614
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1614 is 102
9999 mem: storing 0 in location 1615
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1588 is 1008
9999 mem: location 1614 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1282
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1285
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1286
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1287
9999 mem: storing 0 in location 1288
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1288 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1287
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1289
9999 mem: storing 0 in location 1290
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1290 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1289
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1286 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1285 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1291
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1292
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1293
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1293 is 2
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1292 is 5
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1295
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1291 is 10
9999 mem: storing 1 in location 1294
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1294 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1296
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1296 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1293 is 2
9999 mem: location 1291 is 10
9999 mem: storing 20 in location 1299
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1299 is 20
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1299
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1285 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1300
9999 mem: incrementing refcount of 1014: 68 -> 69
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1301
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1286 is 102
9999 mem: storing 0 in location 1302
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1302 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1300 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1299 is 23
9999 mem: storing 1062 in location 1304
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 32
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1305
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1286 is 102
9999 mem: location 1305 is 1062
9999 mem: storing 102 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1304 is 1062
9999 mem: location 1062 is 102
9999 mem: location 1063 is 7
9999 mem: location 1304 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1306
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1287 is 7
9999 mem: location 1306 is 1063
9999 mem: storing 7 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1291 is 10
9999 mem: storing 9 in location 1307
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1307 is 9
9999 mem: storing 0 in location 1308
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1308 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1295 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1295 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1285 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1613 is 3
9999 mem: storing 4 in location 1613
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1612 is 1220
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1220 in location 1581
9999 mem: incrementing refcount of 1220: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1220
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1220
9999 mem: skipping refcount at 1220
9999 mem: location 1221 is 102
9999 mem: location 1222 is 1224
9999 mem: location 1223 is 1216
9999 mem: location 1581 is 1220
9999 mem: skipping refcount at 1220
9998 run: address to copy is 1222
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1222 is 1224
9999 mem: storing 1224 in location 1582
9999 mem: incrementing refcount of 1224: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1224
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1224
9999 mem: decrementing refcount of 1220: 23 -> 22
9999 mem: storing 1224 in location 1612
9999 mem: incrementing refcount of 1224: 21 -> 22
 106 run: jump {: "offset"}
9998 run: jumping to instruction 65
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1605
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1613 is 4
9999 mem: location 1593 is 9
9999 mem: storing 0 in location 1610
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1610 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1612 is 1224
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1612 is 1224
9999 mem: skipping refcount at 1224
9999 mem: location 1225 is 10
9999 mem: location 1226 is 1228
9999 mem: location 1227 is 1220
9999 mem: location 1612 is 1224
9999 mem: skipping refcount at 1224
9998 run: address to copy is 1225
9998 run: its type is "character"
9999 mem: location 1225 is 10
9999 mem: storing 10 in location 1614
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1614 is 10
9999 mem: storing 1 in location 1615
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1615 is 1
9998 run: jumping to instruction 77
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1605
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1586 is 1151
9999 mem: location 1588 is 1008
9999 mem: location 1605 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1151: 17 -> 16
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 16 -> 17
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1432
9999 mem: incrementing refcount of 1008: 123 -> 124
9999 mem: storing 0 in location 1438
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1170
9999 mem: storing 1170 in location 1485
9999 mem: incrementing refcount of 1170: 18 -> 19
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1433 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1452
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1566
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1452 is 1162
9999 mem: location 1162 is 1566
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1566 in location 1581
9999 mem: incrementing refcount of 1566: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1581 is 1566
9999 mem: skipping refcount at 1566
9999 mem: location 1567 is 1554
9999 mem: location 1568 is 1426
9999 mem: location 1581 is 1566
9999 mem: skipping refcount at 1566
9998 run: address to copy is 1567
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1567 is 1554
9999 mem: storing 1554 in location 1582
9999 mem: incrementing refcount of 1554: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1582 is 1554
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1554
9999 mem: storing 1554 in location 1451
9999 mem: incrementing refcount of 1554: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1451 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1555 is 1
9999 mem: location 1556 is 3
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1170
9999 mem: location 1559 is 2
9999 mem: location 1560 is 0
9999 mem: location 1561 is 1170
9999 mem: location 1562 is 3
9999 mem: location 1563 is 0
9999 mem: location 1564 is 0
9999 mem: location 1565 is 0
9999 mem: location 1451 is 1554
9999 mem: skipping refcount at 1554
9999 mem: storing 0 in location 1458
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1458 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1495 is 1208
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1581
9999 mem: incrementing refcount of 1208: 25 -> 26
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1208
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 10
9999 mem: location 1210 is 1616
9999 mem: location 1211 is 1204
9999 mem: location 1581 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1616
9999 mem: storing 1616 in location 1582
9999 mem: incrementing refcount of 1616: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1616
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1616
9999 mem: storing 1616 in location 1459
9999 mem: incrementing refcount of 1616: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1459 is 1616
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1616 in location 1581
9999 mem: incrementing refcount of 1616: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1581 is 1616
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1581 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 48
9999 mem: location 1618 is 1212
9999 mem: location 1619 is 1208
9999 mem: location 1581 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1618
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1618 is 1212
9999 mem: storing 1212 in location 1582
9999 mem: incrementing refcount of 1212: 25 -> 26
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1582 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1212
9999 mem: storing 1212 in location 1497
9999 mem: incrementing refcount of 1212: 26 -> 27
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1620
9999 mem: decrementing refcount of 1554: 5 -> 4
9999 mem: storing 1620 in location 1451
9999 mem: incrementing refcount of 1620: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1446 is 2
9999 mem: location 1447 is 0
9999 mem: location 1483 is 1170
9999 mem: location 1444 is 1159
9999 mem: location 1159 is 2
9999 mem: location 1445 is 1160
9999 mem: location 1160 is 1
9999 mem: location 1485 is 1170
9999 mem: location 1459 is 1616
9999 mem: location 1497 is 1212
9999 mem: location 1451 is 1620
9999 mem: skipping refcount at 1620
9999 mem: location 1451 is 1620
9999 mem: skipping refcount at 1620
9999 mem: storing 0 in location 1621
9999 mem: storing 2 in location 1622
9999 mem: storing 0 in location 1623
9999 mem: storing 1170 in location 1624
9999 mem: storing 2 in location 1625
9999 mem: storing 1 in location 1626
9999 mem: storing 1170 in location 1627
9999 mem: storing 1616 in location 1628
9999 mem: storing 1212 in location 1629
9999 mem: storing 1 in location 1630
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1433 is 1151
9999 mem: location 1451 is 1620
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1184
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1187
9999 mem: incrementing refcount of 1151: 17 -> 18
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1620 in location 1188
9999 mem: incrementing refcount of 1620: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1566
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1189
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1188 is 1620
9999 mem: location 1189 is 1162
9999 mem: location 1162 is 1566
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1164
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1620 in location 1167
9999 mem: incrementing refcount of 1620: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1566 in location 1168
9999 mem: incrementing refcount of 1566: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1632
9999 mem: storing 1632 in location 1169
9999 mem: incrementing refcount of 1632: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1620
9999 mem: location 1168 is 1566
9999 mem: location 1169 is 1632
9999 mem: skipping refcount at 1632
9999 mem: location 1169 is 1632
9999 mem: skipping refcount at 1632
9999 mem: storing 1620 in location 1633
9999 mem: storing 1566 in location 1634
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1169 is 1632
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1632
9999 mem: location 1189 is 1162
9999 mem: decrementing refcount of 1566: 4 -> 3
9999 mem: storing 1632 in location 1162
9999 mem: incrementing refcount of 1632: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1632
9999 mem: location 1163 is 0
9999 mem: location 1187 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1163
9999 mem: storing 1163 in location 1190
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1190 is 1163
9999 mem: storing 0 in location 1163
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1187 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1151: 18 -> 17
9999 mem: storing 1151 in location 1433
9999 mem: incrementing refcount of 1151: 17 -> 18
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1432 is 1008
9999 mem: location 1433 is 1151
9999 mem: location 1438 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1151
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 123 -> 124
9999 mem: decrementing refcount of 1151: 18 -> 17
9999 mem: storing 1151 in location 1358
9999 mem: incrementing refcount of 1151: 17 -> 18
9999 mem: storing 0 in location 1368
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1632
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1159
9998 run: its type is "number"
9999 mem: location 1159 is 2
9999 mem: storing 2 in location 1359
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 1170
9999 mem: location 1153 is 1170
9999 mem: location 1154 is 0
9999 mem: location 1155 is 1616
9999 mem: location 1156 is 0
9999 mem: location 1157 is 9
9999 mem: location 1158 is 3
9999 mem: location 1159 is 2
9999 mem: location 1160 is 1
9999 mem: location 1161 is 1
9999 mem: location 1162 is 1632
9999 mem: location 1163 is 0
9999 mem: location 1358 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1160
9998 run: its type is "number"
9999 mem: location 1160 is 1
9999 mem: storing 1 in location 1360
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1356 is 1008
9999 mem: location 1359 is 2
9999 mem: location 1360 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 124 -> 125
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1356
9999 mem: incrementing refcount of 1008: 124 -> 125
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1357 is 1575
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1309
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1575 in location 1312
9999 mem: incrementing refcount of 1575: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1312 is 1575
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9999 mem: location 1576 is 1
9999 mem: location 1577 is 1569
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9998 run: address to copy is 1576
9999 mem: storing 1576 in location 1313
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9999 mem: location 1576 is 1
9999 mem: location 1577 is 1569
9999 mem: location 1312 is 1575
9999 mem: skipping refcount at 1575
9998 run: address to copy is 1577
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1577 is 1569
9999 mem: storing 1569 in location 1314
9999 mem: incrementing refcount of 1569: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1314 is 1569
9999 mem: skipping refcount at 1569
9999 mem: storing 1 in location 1315
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1313 is 1576
9999 mem: location 1576 is 1
9999 mem: location 1315 is 1
9999 mem: storing 1 in location 1316
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1578
9999 mem: storing 1578 in location 1317
9999 mem: incrementing refcount of 1578: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1317 is 1578
9999 mem: skipping refcount at 1578
9999 mem: location 1579 is 0
9999 mem: location 1580 is 0
9999 mem: location 1581 is 0
9999 mem: location 1582 is 0
9999 mem: location 1312 is 1575
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1575
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: storing 0 in location 1364
9999 mem: decrementing refcount of 1575: 3 -> 2
9999 mem: storing 1575 in location 1357
9999 mem: incrementing refcount of 1575: 2 -> 3
9999 mem: storing 1 in location 1365
9999 mem: storing 1 in location 1366
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1356 is 1008
9999 mem: location 1357 is 1575
9999 mem: location 1358 is 1151
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .0def      .\n    .ghi       .\n    .┈┈┈┈┈┈┈┈┈┈.\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
