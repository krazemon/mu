 102 run: assume-console {"\n    left-click 2, 3\n    press home\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {3: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {3: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {home: ()}
9992 load: after rewriting: press {home: ()}
9999 mem: storing 'left-click' event starting at 1291
9999 mem: storing 'press' event starting at 1295
9999 mem: storing console in 1299
9999 mem: storing console data in 1301
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1299
9999 mem: location 2 is 1147
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1302
9999 mem: storing 14 in location 1303
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 22 -> 23
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1306
9999 mem: incrementing refcount of 1299: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1307
9999 mem: incrementing refcount of 1147: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1308
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1309
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1305 is 1008
9999 mem: location 1308 is 1
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 23 -> 24
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1306 is 1299
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1318
9999 mem: storing 12 in location 1319
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1321
9999 mem: incrementing refcount of 1299: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1321 is 1299
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1289
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9999 mem: storing 1300 in location 1322
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 0
9999 mem: location 1301 is 1289
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1301 is 1289
9999 mem: storing 1289 in location 1323
9999 mem: incrementing refcount of 1289: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1323 is 1289
9999 mem: skipping refcount at 1289
9999 mem: storing 2 in location 1324
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1322 is 1300
9999 mem: location 1300 is 0
9999 mem: location 1324 is 2
9999 mem: storing 0 in location 1325
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1289
9999 mem: skipping refcount at 1289
9998 run: base address is 1290
9999 mem: location 1322 is 1300
9999 mem: location 1300 is 0
9998 run: address to copy is 1291
9998 run: its type is event
9999 mem: location 1291 is 2
9999 mem: location 1292 is 65513
9999 mem: location 1293 is 2
9999 mem: location 1294 is 3
9999 mem: storing 2 in location 1327
9999 mem: storing 65513 in location 1328
9999 mem: storing 2 in location 1329
9999 mem: storing 3 in location 1330
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1322 is 1300
9999 mem: location 1300 is 0
9999 mem: location 1322 is 1300
9999 mem: storing 1 in location 1300
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1327 is 2
9999 mem: location 1328 is 65513
9999 mem: location 1329 is 2
9999 mem: location 1330 is 3
9999 mem: location 1321 is 1299
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 3]
9998 run: result 1 is 1299
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1310
9999 mem: storing 65513 in location 1311
9999 mem: storing 2 in location 1312
9999 mem: storing 3 in location 1313
9999 mem: decrementing refcount of 1299: 2 -> 1
9999 mem: storing 1299 in location 1306
9999 mem: incrementing refcount of 1299: 1 -> 2
9999 mem: storing 1 in location 1314
9999 mem: storing 0 in location 1315
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1314 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1310 is 2
9999 mem: location 1311 is 65513
9999 mem: location 1312 is 2
9999 mem: location 1313 is 3
9999 mem: storing 1311 in location 1316
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1316 is 1311
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1305 is 1008
9999 mem: location 1307 is 1147
9999 mem: location 1316 is 1311
9999 mem: location 1311 is 65513
9999 mem: location 1312 is 2
9999 mem: location 1313 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1332
9999 mem: storing 27 in location 1333
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1335
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1336
9999 mem: incrementing refcount of 1147: 5 -> 6
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1337
9999 mem: storing 2 in location 1338
9999 mem: storing 3 in location 1339
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1336 is 1147
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 2
9999 mem: location 1339 is 3
9998 run: address to copy is 1338
9998 run: its type is "number"
9999 mem: location 1338 is 2
9999 mem: storing 2 in location 1340
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1340 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1337 is 65513
9999 mem: location 1338 is 2
9999 mem: location 1339 is 3
9998 run: address to copy is 1339
9998 run: its type is "number"
9999 mem: location 1339 is 3
9999 mem: storing 3 in location 1341
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1342
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1341 is 3
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1343
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1344
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1341 is 3
9999 mem: location 1344 is 9
9999 mem: storing 0 in location 1345
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 1
9999 mem: storing 1 in location 1346
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1347
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1348
9999 mem: incrementing refcount of 1166: 8 -> 9
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1335 is 1008
9999 mem: location 1336 is 1147
9999 mem: location 1340 is 2
9999 mem: location 1341 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1361
9999 mem: storing 26 in location 1362
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1364
9999 mem: incrementing refcount of 1008: 25 -> 26
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1365
9999 mem: incrementing refcount of 1147: 6 -> 7
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1366
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1367
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1365 is 1147
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1368
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1369
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1364 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1194
9999 mem: incrementing refcount of 1008: 26 -> 27
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1194 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1195
 107 run: return {height: "number"}
9999 mem: location 1195 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1370
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1371
9999 mem: incrementing refcount of 1166: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1166
9999 mem: storing 1166 in location 1372
9999 mem: incrementing refcount of 1166: 10 -> 11
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1194
9999 mem: incrementing refcount of 1166: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1166
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1187
9999 mem: location 1169 is 0
9999 mem: location 1194 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1187
9999 mem: storing 1187 in location 1195
9999 mem: incrementing refcount of 1187: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1187
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: decrementing refcount of 1166: 12 -> 11
9999 mem: storing 1187 in location 1371
9999 mem: incrementing refcount of 1187: 9 -> 10
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1373
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1368 is 0
9999 mem: storing 0 in location 1374
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 1
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1375
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1366 is 2
9999 mem: location 1375 is 1155
9999 mem: storing 2 in location 1155
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1376
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1367 is 3
9999 mem: location 1376 is 1156
9999 mem: storing 3 in location 1156
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1166
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1365 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1377
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1187
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1370 is 5
9999 mem: storing 0 in location 1378
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 1
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 0 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1371 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 49
9999 mem: location 1189 is 1196
9999 mem: location 1190 is 1166
9999 mem: location 1371 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1188
9998 run: its type is "character"
9999 mem: location 1188 is 49
9999 mem: storing 49 in location 1381
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 49
9999 mem: storing 0 in location 1382
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1374 is 0
9999 mem: location 1369 is 9
9999 mem: storing 0 in location 1384
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1187 in location 1194
9999 mem: incrementing refcount of 1187: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1187
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 49
9999 mem: location 1189 is 1196
9999 mem: location 1190 is 1166
9999 mem: location 1194 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1189 is 1196
9999 mem: storing 1196 in location 1195
9999 mem: incrementing refcount of 1196: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1187: 11 -> 10
9999 mem: storing 1196 in location 1371
9999 mem: incrementing refcount of 1196: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1166
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1166 in location 1194
9999 mem: incrementing refcount of 1166: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1166
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1166
9999 mem: skipping refcount at 1166
9999 mem: location 1167 is 167
9999 mem: location 1168 is 1187
9999 mem: location 1169 is 0
9999 mem: location 1194 is 1166
9999 mem: skipping refcount at 1166
9998 run: address to copy is 1168
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1168 is 1187
9999 mem: storing 1187 in location 1195
9999 mem: incrementing refcount of 1187: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1187
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1187
9999 mem: decrementing refcount of 1166: 12 -> 11
9999 mem: storing 1187 in location 1372
9999 mem: incrementing refcount of 1187: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1374 is 0
9999 mem: storing 1 in location 1374
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1196
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1370 is 5
9999 mem: storing 0 in location 1378
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 1
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 0 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1371 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 50
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1187
9999 mem: location 1371 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1197
9998 run: its type is "character"
9999 mem: location 1197 is 50
9999 mem: storing 50 in location 1381
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 50
9999 mem: storing 0 in location 1382
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1374 is 1
9999 mem: location 1369 is 9
9999 mem: storing 0 in location 1384
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1194
9999 mem: incrementing refcount of 1196: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 50
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1187
9999 mem: location 1194 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1195
9999 mem: incrementing refcount of 1200: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1196: 11 -> 10
9999 mem: storing 1200 in location 1371
9999 mem: incrementing refcount of 1200: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1187
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1187 in location 1194
9999 mem: incrementing refcount of 1187: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1187
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1187
9999 mem: skipping refcount at 1187
9999 mem: location 1188 is 49
9999 mem: location 1189 is 1196
9999 mem: location 1190 is 1166
9999 mem: location 1194 is 1187
9999 mem: skipping refcount at 1187
9998 run: address to copy is 1189
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1189 is 1196
9999 mem: storing 1196 in location 1195
9999 mem: incrementing refcount of 1196: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1196
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1196
9999 mem: decrementing refcount of 1187: 13 -> 12
9999 mem: storing 1196 in location 1372
9999 mem: incrementing refcount of 1196: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1374 is 1
9999 mem: storing 2 in location 1374
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1200
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1370 is 5
9999 mem: storing 0 in location 1378
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 1
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 0 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1371 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 51
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1371 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1201
9998 run: its type is "character"
9999 mem: location 1201 is 51
9999 mem: storing 51 in location 1381
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 51
9999 mem: storing 0 in location 1382
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1374 is 2
9999 mem: location 1369 is 9
9999 mem: storing 0 in location 1384
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1194
9999 mem: incrementing refcount of 1200: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 51
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1194 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1195
9999 mem: incrementing refcount of 1204: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 11 -> 10
9999 mem: storing 1204 in location 1371
9999 mem: incrementing refcount of 1204: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1196
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1196 in location 1194
9999 mem: incrementing refcount of 1196: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1196
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1196
9999 mem: skipping refcount at 1196
9999 mem: location 1197 is 50
9999 mem: location 1198 is 1200
9999 mem: location 1199 is 1187
9999 mem: location 1194 is 1196
9999 mem: skipping refcount at 1196
9998 run: address to copy is 1198
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1198 is 1200
9999 mem: storing 1200 in location 1195
9999 mem: incrementing refcount of 1200: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1200
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1200
9999 mem: decrementing refcount of 1196: 13 -> 12
9999 mem: storing 1200 in location 1372
9999 mem: incrementing refcount of 1200: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1374 is 2
9999 mem: storing 3 in location 1374
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1204
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1373 is 1
9999 mem: location 1370 is 5
9999 mem: storing 0 in location 1378
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 1
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 0 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1371 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1371 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 10
9999 mem: storing 10 in location 1381
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 10
9999 mem: storing 1 in location 1382
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 1
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 0 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1373 is 1
9999 mem: storing 2 in location 1373
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1368 is 0
9999 mem: storing 0 in location 1374
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1194
9999 mem: incrementing refcount of 1204: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1194 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1195
9999 mem: incrementing refcount of 1208: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 11 -> 10
9999 mem: storing 1208 in location 1371
9999 mem: incrementing refcount of 1208: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1200
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1200 in location 1194
9999 mem: incrementing refcount of 1200: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1200
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1200
9999 mem: skipping refcount at 1200
9999 mem: location 1201 is 51
9999 mem: location 1202 is 1204
9999 mem: location 1203 is 1196
9999 mem: location 1194 is 1200
9999 mem: skipping refcount at 1200
9998 run: address to copy is 1202
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1202 is 1204
9999 mem: storing 1204 in location 1195
9999 mem: incrementing refcount of 1204: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: decrementing refcount of 1200: 13 -> 12
9999 mem: storing 1204 in location 1372
9999 mem: incrementing refcount of 1204: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1208
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1370 is 5
9999 mem: storing 0 in location 1378
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 1 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1374 is 0
9999 mem: location 1376 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1380
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1371 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 52
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1371 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 52
9999 mem: storing 52 in location 1381
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 52
9999 mem: storing 0 in location 1382
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1374 is 0
9999 mem: location 1369 is 9
9999 mem: storing 0 in location 1384
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1194
9999 mem: incrementing refcount of 1208: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 52
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1194 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1195
9999 mem: incrementing refcount of 1212: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 11 -> 10
9999 mem: storing 1212 in location 1371
9999 mem: incrementing refcount of 1212: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1204
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1204 in location 1194
9999 mem: incrementing refcount of 1204: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1204
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1194 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1206
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1206 is 1208
9999 mem: storing 1208 in location 1195
9999 mem: incrementing refcount of 1208: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: decrementing refcount of 1204: 13 -> 12
9999 mem: storing 1208 in location 1372
9999 mem: incrementing refcount of 1208: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1374 is 0
9999 mem: storing 1 in location 1374
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1212
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1370 is 5
9999 mem: storing 0 in location 1378
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 1 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1374 is 1
9999 mem: location 1376 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1380
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1371 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 53
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1371 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 53
9999 mem: storing 53 in location 1381
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 53
9999 mem: storing 0 in location 1382
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1374 is 1
9999 mem: location 1369 is 9
9999 mem: storing 0 in location 1384
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1212
9999 trace: incrementing callstack depth to 6
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-to-start-of-line-with-home
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1194
9999 mem: incrementing refcount of 1212: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 53
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1194 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1195
9999 mem: incrementing refcount of 1216: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 11 -> 10
9999 mem: storing 1216 in location 1371
9999 mem: incrementing refcount of 1216: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1194
9999 mem: incrementing refcount of 1208: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 52
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1194 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1210
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1210 is 1212
9999 mem: storing 1212 in location 1195
9999 mem: incrementing refcount of 1212: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: decrementing refcount of 1208: 13 -> 12
9999 mem: storing 1212 in location 1372
9999 mem: incrementing refcount of 1212: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1374 is 1
9999 mem: storing 2 in location 1374
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 1216
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1370 is 5
9999 mem: storing 0 in location 1378
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1378 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 1 in location 1379
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1374 is 2
9999 mem: location 1376 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 0 in location 1380
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1371 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 54
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1371 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 54
9999 mem: storing 54 in location 1381
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1381 is 54
9999 mem: storing 0 in location 1382
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1382 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1374 is 2
9999 mem: location 1369 is 9
9999 mem: storing 0 in location 1384
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1371 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1194
9999 mem: incrementing refcount of 1216: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 54
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1194 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1218
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1195
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1216: 10 -> 9
9999 mem: storing 0 in location 1371
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1194
9999 mem: incrementing refcount of 1212: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1194 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 53
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1194 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1214
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1214 is 1216
9999 mem: storing 1216 in location 1195
9999 mem: incrementing refcount of 1216: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1195 is 1216
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1216
9999 mem: decrementing refcount of 1212: 13 -> 12
9999 mem: storing 1216 in location 1372
9999 mem: incrementing refcount of 1216: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1374 is 2
9999 mem: storing 3 in location 1374
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1371 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 1 in location 1379
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1374 is 3
9999 mem: location 1376 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 1 in location 1385
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1379 is 1
9999 mem: location 1385 is 1
9999 mem: storing 1 in location 1386
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 0 in location 1387
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1386 is 1
9999 mem: location 1387 is 0
9999 mem: storing 1 in location 1388
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1388 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1373 is 2
9999 mem: location 1375 is 1155
9999 mem: storing 2 in location 1155
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1374 is 3
9999 mem: location 1376 is 1156
9999 mem: storing 3 in location 1156
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1372 is 1216
9999 mem: location 1377 is 1151
9999 mem: decrementing refcount of 1166: 11 -> 10
9999 mem: storing 1216 in location 1151
9999 mem: incrementing refcount of 1216: 11 -> 12
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1365 is 1147
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 7 -> 6
9999 mem: storing 1147 in location 1336
9999 mem: incrementing refcount of 1147: 6 -> 7
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1349
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1350
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1351
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1336 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1352
9999 mem: incrementing refcount of 1166: 10 -> 11
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1349 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1250
9999 mem: storing 1250 in location 1354
9999 mem: incrementing refcount of 1250: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1346 is 1
9999 mem: location 1347 is 0
9999 mem: location 1348 is 1166
9999 mem: location 1350 is 2
9999 mem: location 1351 is 3
9999 mem: location 1352 is 1166
9999 mem: location 1349 is 0
9999 mem: location 1354 is 1250
9999 mem: skipping refcount at 1250
9999 mem: location 1354 is 1250
9999 mem: skipping refcount at 1250
9999 mem: storing 1 in location 1251
9999 mem: storing 1 in location 1252
9999 mem: storing 0 in location 1253
9999 mem: storing 1166 in location 1254
9999 mem: storing 2 in location 1255
9999 mem: storing 3 in location 1256
9999 mem: storing 1166 in location 1257
9999 mem: storing 0 in location 1258
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1336 is 1147
9999 mem: location 1354 is 1250
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1180
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1183
9999 mem: incrementing refcount of 1147: 7 -> 8
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1184
9999 mem: incrementing refcount of 1250: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1184 is 1250
9999 mem: location 1185 is 1158
9999 mem: location 1158 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1250 in location 1163
9999 mem: incrementing refcount of 1250: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1164
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1389
9999 mem: storing 1389 in location 1165
9999 mem: incrementing refcount of 1389: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1163 is 1250
9999 mem: location 1164 is 0
9999 mem: location 1165 is 1389
9999 mem: skipping refcount at 1389
9999 mem: location 1165 is 1389
9999 mem: skipping refcount at 1389
9999 mem: storing 1250 in location 1390
9999 mem: storing 0 in location 1391
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1389
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1389
9999 mem: location 1185 is 1158
9999 mem: storing 1389 in location 1158
9999 mem: incrementing refcount of 1389: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1186
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1186 is 1159
9999 mem: storing 0 in location 1159
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1183 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 8 -> 7
9999 mem: storing 1147 in location 1336
9999 mem: incrementing refcount of 1147: 7 -> 8
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1336 is 1147
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1308
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1309
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1305 is 1008
9999 mem: location 1308 is 2
9999 mem: location 1309 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 28 -> 27
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 27 -> 28
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1306 is 1299
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1318
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1321
9999 mem: incrementing refcount of 1299: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1321 is 1299
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1289
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9999 mem: storing 1300 in location 1322
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 1
9999 mem: location 1301 is 1289
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1301 is 1289
9999 mem: storing 1289 in location 1323
9999 mem: incrementing refcount of 1289: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1323 is 1289
9999 mem: skipping refcount at 1289
9999 mem: storing 2 in location 1324
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1322 is 1300
9999 mem: location 1300 is 1
9999 mem: location 1324 is 2
9999 mem: storing 0 in location 1325
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1289
9999 mem: skipping refcount at 1289
9998 run: base address is 1290
9999 mem: location 1322 is 1300
9999 mem: location 1300 is 1
9998 run: address to copy is 1295
9998 run: its type is event
9999 mem: location 1295 is 1
9999 mem: location 1296 is 65521
9999 mem: location 1297 is 0
9999 mem: location 1298 is 0
9999 mem: storing 1 in location 1327
9999 mem: storing 65521 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: storing 0 in location 1330
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1322 is 1300
9999 mem: location 1300 is 1
9999 mem: location 1322 is 1300
9999 mem: storing 2 in location 1300
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1327 is 1
9999 mem: location 1328 is 65521
9999 mem: location 1329 is 0
9999 mem: location 1330 is 0
9999 mem: location 1321 is 1299
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65521, 0, 0]
9998 run: result 1 is 1299
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1310
9999 mem: storing 65521 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: decrementing refcount of 1299: 3 -> 2
9999 mem: storing 1299 in location 1306
9999 mem: incrementing refcount of 1299: 2 -> 3
9999 mem: storing 1 in location 1314
9999 mem: storing 0 in location 1315
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1314 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1310 is 1
9999 mem: location 1311 is 65521
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 mem: storing 0 in location 1316
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1316 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1305 is 1008
9999 mem: location 1307 is 1147
9999 mem: location 1310 is 1
9999 mem: location 1311 is 65521
9999 mem: location 1312 is 0
9999 mem: location 1313 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1392
9999 mem: storing 85 in location 1393
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1395
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1396
9999 mem: incrementing refcount of 1147: 8 -> 9
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1397
9999 mem: storing 65521 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1401
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1396 is 1147
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1395 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1194
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1194 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1195
 106 run: return {width: "number"}
9999 mem: location 1195 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1402
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1395 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1194
9999 mem: incrementing refcount of 1008: 30 -> 31
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1194 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1194 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1195
 106 run: return {height: "number"}
9999 mem: location 1195 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1403
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1404
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1153
9998 run: its type is "number"
9999 mem: location 1153 is 9
9999 mem: storing 9 in location 1405
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1406
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1407
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1408
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1407 is 1155
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1409
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1408 is 1156
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1410
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1397 is 1
9999 mem: location 1398 is 65521
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: storing 0 in location 1411
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1411 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1397 is 1
9999 mem: location 1398 is 65521
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: storing 1398 in location 1465
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1465 is 1398
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65521
9999 mem: storing 0 in location 1428
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1428 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65521
9999 mem: storing 0 in location 1444
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1444 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65521
9999 mem: storing 0 in location 1451
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65521
9999 mem: storing 1 in location 1452
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1431
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 3
9999 mem: storing 3 in location 1432
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1433
9999 mem: incrementing refcount of 1166: 11 -> 12
 105 run: move-to-start-of-line {editor: ("address" "shared" "editor-data")}
9999 mem: location 1396 is 1147
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 9
9999 mem: allocating size 11
9999 mem: new alloc: 1479
9999 mem: storing 9 in location 1480
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1482
9999 mem: incrementing refcount of 1147: 9 -> 10
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1483
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 3
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9999 mem: storing 1156 in location 1484
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1483 is 0
9999 mem: location 1484 is 1156
9999 mem: storing 0 in location 1156
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1485
 106 run: {init: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1216
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1482 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1166
9999 mem: storing 1166 in location 1486
9999 mem: incrementing refcount of 1166: 12 -> 13
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1216
9999 mem: location 1486 is 1166
9999 mem: storing 0 in location 1487
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 54
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1217
9998 run: its type is "character"
9999 mem: location 1217 is 54
9999 mem: storing 54 in location 1488
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1488 is 54
9999 mem: storing 0 in location 1489
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1216
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1216 in location 1194
9999 mem: incrementing refcount of 1216: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1216
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1194 is 1216
9999 mem: skipping refcount at 1216
9999 mem: location 1217 is 54
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1212
9999 mem: location 1194 is 1216
9999 mem: skipping refcount at 1216
9998 run: address to copy is 1219
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1219 is 1212
9999 mem: storing 1212 in location 1195
9999 mem: incrementing refcount of 1212: 12 -> 13
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1212
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1212
9999 mem: location 1485 is 1151
9999 mem: decrementing refcount of 1216: 13 -> 12
9999 mem: storing 1212 in location 1151
9999 mem: incrementing refcount of 1212: 13 -> 14
 106 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1212
 106 run: jump {: "offset"}
9998 run: jumping to instruction 8
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1212
9999 mem: location 1486 is 1166
9999 mem: storing 0 in location 1487
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 53
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1213
9998 run: its type is "character"
9999 mem: location 1213 is 53
9999 mem: storing 53 in location 1488
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1488 is 53
9999 mem: storing 0 in location 1489
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1212
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1212 in location 1194
9999 mem: incrementing refcount of 1212: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1212
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1194 is 1212
9999 mem: skipping refcount at 1212
9999 mem: location 1213 is 53
9999 mem: location 1214 is 1216
9999 mem: location 1215 is 1208
9999 mem: location 1194 is 1212
9999 mem: skipping refcount at 1212
9998 run: address to copy is 1215
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1215 is 1208
9999 mem: storing 1208 in location 1195
9999 mem: incrementing refcount of 1208: 12 -> 13
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1208
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1208
9999 mem: location 1485 is 1151
9999 mem: decrementing refcount of 1212: 15 -> 14
9999 mem: storing 1208 in location 1151
9999 mem: incrementing refcount of 1208: 13 -> 14
 106 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1208
 106 run: jump {: "offset"}
9998 run: jumping to instruction 8
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1208
9999 mem: location 1486 is 1166
9999 mem: storing 0 in location 1487
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 52
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1209
9998 run: its type is "character"
9999 mem: location 1209 is 52
9999 mem: storing 52 in location 1488
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1488 is 52
9999 mem: storing 0 in location 1489
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 0
9998 run: jump-if fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1208
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1208 in location 1194
9999 mem: incrementing refcount of 1208: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1194 is 1208
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1194 is 1208
9999 mem: skipping refcount at 1208
9999 mem: location 1209 is 52
9999 mem: location 1210 is 1212
9999 mem: location 1211 is 1204
9999 mem: location 1194 is 1208
9999 mem: skipping refcount at 1208
9998 run: address to copy is 1211
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1211 is 1204
9999 mem: storing 1204 in location 1195
9999 mem: incrementing refcount of 1204: 12 -> 13
 107 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1204
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1204
9999 mem: location 1485 is 1151
9999 mem: decrementing refcount of 1208: 15 -> 14
9999 mem: storing 1204 in location 1151
9999 mem: incrementing refcount of 1204: 13 -> 14
 106 run: assert {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {"move-to-start-of-line tried to move before start of text": "literal-string"}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1204
 106 run: jump {: "offset"}
9998 run: jumping to instruction 8
 106 run: {at-start-of-text?: "boolean"} <- equal {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1204
9999 mem: location 1486 is 1166
9999 mem: storing 0 in location 1487
 106 run: jump-if {at-start-of-text?: "boolean"}, {: "offset"}
9999 mem: location 1487 is 0
9998 run: jump-if fell through
 106 run: {prev: "character"} <- get {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": (), "lookup": ()}, {value: "offset"}
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1204
9999 mem: skipping refcount at 1204
9999 mem: location 1205 is 10
9999 mem: location 1206 is 1208
9999 mem: location 1207 is 1200
9999 mem: location 1485 is 1151
9999 mem: location 1151 is 1204
9999 mem: skipping refcount at 1204
9998 run: address to copy is 1205
9998 run: its type is "character"
9999 mem: location 1205 is 10
9999 mem: storing 10 in location 1488
 106 run: {at-start-of-line?: "boolean"} <- equal {prev: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1488 is 10
9999 mem: storing 1 in location 1489
 106 run: jump-if {at-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1489 is 1
9998 run: jumping to instruction 16
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}
9999 mem: location 1482 is 1147
9999 abandon: saving in free-list of size 11
9999 trace: reply: decrementing callstack depth from 5
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1434
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1435
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1436
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1396 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1166
9999 mem: storing 1166 in location 1437
9999 mem: incrementing refcount of 1166: 13 -> 14
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1434 is 0
9998 run: jumping to instruction 591
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1490
9999 mem: storing 1490 in location 1414
9999 mem: incrementing refcount of 1490: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1431 is 2
9999 mem: location 1432 is 3
9999 mem: location 1433 is 1166
9999 mem: location 1435 is 2
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1166
9999 mem: location 1434 is 0
9999 mem: location 1414 is 1490
9999 mem: skipping refcount at 1490
9999 mem: location 1414 is 1490
9999 mem: skipping refcount at 1490
9999 mem: storing 1 in location 1491
9999 mem: storing 2 in location 1492
9999 mem: storing 3 in location 1493
9999 mem: storing 1166 in location 1494
9999 mem: storing 2 in location 1495
9999 mem: storing 0 in location 1496
9999 mem: storing 1166 in location 1497
9999 mem: storing 0 in location 1498
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1396 is 1147
9999 mem: location 1414 is 1490
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1180
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1183
9999 mem: incrementing refcount of 1147: 10 -> 11
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1490 in location 1184
9999 mem: incrementing refcount of 1490: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1389
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1184 is 1490
9999 mem: location 1185 is 1158
9999 mem: location 1158 is 1389
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1160
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1490 in location 1163
9999 mem: incrementing refcount of 1490: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1389 in location 1164
9999 mem: incrementing refcount of 1389: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1502
9999 mem: storing 1502 in location 1165
9999 mem: incrementing refcount of 1502: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1163 is 1490
9999 mem: location 1164 is 1389
9999 mem: location 1165 is 1502
9999 mem: skipping refcount at 1502
9999 mem: location 1165 is 1502
9999 mem: skipping refcount at 1502
9999 mem: storing 1490 in location 1503
9999 mem: storing 1389 in location 1504
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1165 is 1502
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1502
9999 mem: location 1185 is 1158
9999 mem: decrementing refcount of 1389: 3 -> 2
9999 mem: storing 1502 in location 1158
9999 mem: incrementing refcount of 1502: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1502
9999 mem: location 1159 is 0
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1159
9999 mem: storing 1159 in location 1186
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1186 is 1159
9999 mem: storing 0 in location 1159
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1183 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1147: 11 -> 10
9999 mem: storing 1147 in location 1396
9999 mem: incrementing refcount of 1147: 10 -> 11
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1401
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1395 is 1008
9999 mem: location 1396 is 1147
9999 mem: location 1401 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1147
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 31 -> 30
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 30 -> 31
9999 mem: decrementing refcount of 1147: 11 -> 10
9999 mem: storing 1147 in location 1307
9999 mem: incrementing refcount of 1147: 10 -> 11
9999 mem: storing 0 in location 1317
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1502
9999 mem: location 1159 is 0
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 1308
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1502
9999 mem: location 1159 is 0
9999 mem: location 1307 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 1309
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1305 is 1008
9999 mem: location 1308 is 2
9999 mem: location 1309 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 32 -> 31
9999 mem: storing 1008 in location 1305
9999 mem: incrementing refcount of 1008: 31 -> 32
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1306 is 1299
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1318
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1299 in location 1321
9999 mem: incrementing refcount of 1299: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1321 is 1299
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 2
9999 mem: location 1301 is 1289
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1300
9999 mem: storing 1300 in location 1322
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9999 mem: location 1300 is 2
9999 mem: location 1301 is 1289
9999 mem: location 1321 is 1299
9999 mem: skipping refcount at 1299
9998 run: address to copy is 1301
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1301 is 1289
9999 mem: storing 1289 in location 1323
9999 mem: incrementing refcount of 1289: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1323 is 1289
9999 mem: skipping refcount at 1289
9999 mem: storing 2 in location 1324
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1322 is 1300
9999 mem: location 1300 is 2
9999 mem: location 1324 is 2
9999 mem: storing 1 in location 1325
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1191
9999 mem: storing 1191 in location 1326
9999 mem: incrementing refcount of 1191: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1326 is 1191
9999 mem: skipping refcount at 1191
9999 mem: location 1192 is 0
9999 mem: location 1193 is 0
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1321 is 1299
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1299
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1310
9999 mem: storing 0 in location 1311
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: decrementing refcount of 1299: 4 -> 3
9999 mem: storing 1299 in location 1306
9999 mem: incrementing refcount of 1299: 3 -> 4
9999 mem: storing 1 in location 1314
9999 mem: storing 1 in location 1315
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1314 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1315 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1305 is 1008
9999 mem: location 1306 is 1299
9999 mem: location 1307 is 1147
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1502
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 2
9999 mem: storing 2 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 1166
9999 mem: location 1149 is 1166
9999 mem: location 1150 is 0
9999 mem: location 1151 is 1204
9999 mem: location 1152 is 0
9999 mem: location 1153 is 9
9999 mem: location 1154 is 2
9999 mem: location 1155 is 2
9999 mem: location 1156 is 0
9999 mem: location 1157 is 1
9999 mem: location 1158 is 1502
9999 mem: location 1159 is 0
9999 mem: location 2 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1156
9998 run: its type is "number"
9999 mem: location 1156 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 2\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
