9991 parse: --- defining scenario_editor-provides-edited-contents
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"abc": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 1, 2\n    type [def]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    left-click 1, 2\n    type [def]\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:address:shared:array:character <- editor-contents 2:address:shared:editor-data\n    4:array:character <- copy *3:address:shared:array:character\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:address:shared:array:character <- editor-contents 2:address:shared:editor-data\n    4:array:character <- copy *3:address:shared:array:character\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    4:array:character <- [abdefc]\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    4:array:character <- [abdefc]\n  ": "literal-string"}
9999 parse: recipe scenario_editor-provides-edited-contents has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-provides-edited-contents
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-provides-edited-contents
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-provides-edited-contents
9991 transform: --- deduce types for recipe scenario_editor-provides-edited-contents
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-provides-edited-contents
9991 transform: --- collect surrounding spaces for recipe scenario_editor-provides-edited-contents
9991 transform: --- transform names for recipe scenario_editor-provides-edited-contents
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-provides-edited-contents
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-provides-edited-contents
9991 transform: --- transform braces for recipe scenario_editor-provides-edited-contents
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- perform checks for recipe scenario_editor-provides-edited-contents
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-provides-edited-contents
9991 transform: --- type-check calls inside recipe scenario_editor-provides-edited-contents
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-provides-edited-contents
9991 transform: --- type-check merge instructions in recipe scenario_editor-provides-edited-contents
9991 transform: --- check types of reply instructions in recipe scenario_editor-provides-edited-contents
9991 transform: --- checking reply instructions against header for scenario_editor-provides-edited-contents
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-provides-edited-contents
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 50 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1116
9999 mem: storing 8 in location 1117
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1120
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9998 run: address to copy to is 1016
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9998 run: address to copy to is 1018
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9998 run: address to copy to is 1020
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9998 run: address to copy to is 1022
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9998 run: address to copy to is 1024
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9998 run: address to copy to is 1026
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9998 run: address to copy to is 1028
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9998 run: address to copy to is 1030
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9998 run: address to copy to is 1032
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9998 run: address to copy to is 1034
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9998 run: address to copy to is 1036
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9998 run: address to copy to is 1038
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9998 run: address to copy to is 1040
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9998 run: address to copy to is 1042
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9998 run: address to copy to is 1044
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9998 run: address to copy to is 1046
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9998 run: address to copy to is 1048
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9998 run: address to copy to is 1050
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9998 run: address to copy to is 1052
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9998 run: address to copy to is 1054
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9998 run: address to copy to is 1056
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9998 run: address to copy to is 1058
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9998 run: address to copy to is 1060
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9998 run: address to copy to is 1062
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9998 run: address to copy to is 1064
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9998 run: address to copy to is 1066
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9998 run: address to copy to is 1068
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9998 run: address to copy to is 1070
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9998 run: address to copy to is 1072
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9998 run: address to copy to is 1074
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9998 run: address to copy to is 1076
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9998 run: address to copy to is 1078
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9998 run: address to copy to is 1080
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9998 run: address to copy to is 1082
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9998 run: address to copy to is 1084
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9998 run: address to copy to is 1086
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9998 run: address to copy to is 1088
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9998 run: address to copy to is 1090
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9998 run: address to copy to is 1092
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9998 run: address to copy to is 1094
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9998 run: address to copy to is 1096
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9998 run: address to copy to is 1098
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9998 run: address to copy to is 1100
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9998 run: address to copy to is 1102
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9998 run: address to copy to is 1104
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9998 run: address to copy to is 1106
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9998 run: address to copy to is 1108
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9998 run: address to copy to is 1110
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9998 run: address to copy to is 1112
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: "screen-cell"} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: storing 0 in location 1124
9999 mem: storing 7 in location 1125
 104 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}, {curr: "screen-cell"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9998 run: address to copy to is 1114
9999 mem: location 1124 is 0
9999 mem: location 1125 is 7
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"abc": "literal-string"}
9999 mem: new string alloc: 1126
9999 mem: storing 1126 in location 1
9999 mem: incrementing refcount of 1126: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1126
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1131
9999 mem: storing 7 in location 1132
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1126 in location 1134
9999 mem: incrementing refcount of 1126: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1135
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1136
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1137
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1137 is 10
9999 mem: storing 9 in location 1137
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1140
9999 mem: storing 1140 in location 1138
9999 mem: incrementing refcount of 1140: 0 -> 1
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}, {left: "number"}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1136 is 0
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1145
9999 mem: storing 0 in location 1145
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}, {right: "number"}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1137 is 9
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1146
9999 mem: storing 9 in location 1146
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {1: "literal", "top": ()}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1148
9999 mem: storing 1 in location 1148
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {left: "number"}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1136 is 0
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1149
9999 mem: storing 0 in location 1149
 103 run: {init: ("address" "shared" "duplex-list" "character")} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1153
9999 mem: storing 4 in location 1154
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1156
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1157
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1159
9999 mem: storing 1159 in location 1158
9999 mem: incrementing refcount of 1159: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1156 is 167
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1158 is 1159
9999 mem: skipping refcount at 1159
9999 mem: storing 167 in location 1160
9999 mem: storing 0 in location 1161
9999 mem: storing 0 in location 1162
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1157 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1159
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1159
9999 mem: storing 1159 in location 1139
9999 mem: incrementing refcount of 1159: 1 -> 2
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1139 is 1159
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1141
9999 mem: storing 1159 in location 1141
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1139 is 1159
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1142
9999 mem: storing 1159 in location 1142
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {init: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1139 is 1159
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1144
9999 mem: storing 1159 in location 1144
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1138 is 1140
9999 mem: location 1134 is 1126
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1119
9999 mem: incrementing refcount of 1140: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1126 in location 1120
9999 mem: incrementing refcount of 1126: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1120 is 1126
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9999 mem: storing 3 in location 1121
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1121 is 3
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1119 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1159
9999 mem: storing 1159 in location 1123
9999 mem: incrementing refcount of 1159: 2 -> 3
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 0
9998 run: address to copy is 1128
9998 run: its type is character
9999 mem: location 1128 is 97
9999 mem: storing 97 in location 1125
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1125 is 97
9999 mem: location 1123 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1163
9999 mem: storing 5 in location 1164
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1166
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1167
9999 mem: incrementing refcount of 1159: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1170
9999 mem: storing 1170 in location 1168
9999 mem: incrementing refcount of 1170: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1168 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 0
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1166 is 97
9999 mem: location 1168 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy to is 1171
9999 mem: storing 97 in location 1171
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1167 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1169
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1167 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1168 is 1170
9999 mem: location 1167 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1161
9999 mem: storing 1170 in location 1161
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1167 is 1159
9999 mem: location 1168 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy to is 1173
9999 mem: storing 1159 in location 1173
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1159
9999 mem: location 1169 is 0
9999 mem: location 1168 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy to is 1172
9999 mem: storing 0 in location 1172
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1159
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1123 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1174
9999 mem: storing 3 in location 1175
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1177
9999 mem: incrementing refcount of 1159: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1170
9999 mem: location 1162 is 0
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1170
9999 mem: storing 1170 in location 1178
9999 mem: incrementing refcount of 1170: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1170
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1170
9999 mem: decrementing refcount of 1159: 5 -> 4
9999 mem: storing 1170 in location 1123
9999 mem: incrementing refcount of 1170: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 1
9998 run: address to copy is 1129
9998 run: its type is character
9999 mem: location 1129 is 98
9999 mem: storing 98 in location 1125
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1125 is 98
9999 mem: location 1123 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1166
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1167
9999 mem: incrementing refcount of 1170: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1179
9999 mem: storing 1179 in location 1168
9999 mem: incrementing refcount of 1179: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1168 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 0
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1166 is 98
9999 mem: location 1168 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy to is 1180
9999 mem: storing 98 in location 1180
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1159
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 0
9999 mem: storing 0 in location 1169
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 0
9999 mem: location 1173 is 1159
9999 mem: location 1168 is 1179
9999 mem: location 1167 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy to is 1172
9999 mem: storing 1179 in location 1172
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1167 is 1170
9999 mem: location 1168 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy to is 1182
9999 mem: storing 1170 in location 1182
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1170
9999 mem: location 1169 is 0
9999 mem: location 1168 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy to is 1181
9999 mem: storing 0 in location 1181
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1170
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1123 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1177
9999 mem: incrementing refcount of 1170: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1170: 5 -> 4
9999 mem: storing 1179 in location 1123
9999 mem: incrementing refcount of 1179: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1120 is 1126
9999 mem: skipping refcount at 1126
9998 run: base address is 1127
9999 mem: location 1122 is 2
9998 run: address to copy is 1130
9998 run: its type is character
9999 mem: location 1130 is 99
9999 mem: storing 99 in location 1125
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1125 is 99
9999 mem: location 1123 is 1179
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1166
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1167
9999 mem: incrementing refcount of 1179: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1183
9999 mem: storing 1183 in location 1168
9999 mem: incrementing refcount of 1183: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1168 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1166 is 99
9999 mem: location 1168 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy to is 1184
9999 mem: storing 99 in location 1184
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1170
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 0
9999 mem: storing 0 in location 1169
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 0
9999 mem: location 1182 is 1170
9999 mem: location 1168 is 1183
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy to is 1181
9999 mem: storing 1183 in location 1181
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 0
9999 mem: location 1167 is 1179
9999 mem: location 1168 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy to is 1186
9999 mem: storing 1179 in location 1186
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1169 is 0
9999 mem: location 1168 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy to is 1185
9999 mem: storing 0 in location 1185
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1179
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1123 is 1179
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1179: 5 -> 4
9999 mem: storing 1183 in location 1123
9999 mem: incrementing refcount of 1183: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 3
9999 mem: storing 1 in location 1124
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1119 is 1140
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 2 -> 1
9999 mem: storing 1140 in location 1138
9999 mem: incrementing refcount of 1140: 1 -> 2
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1135 is 1008
9999 mem: location 1138 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1187
9999 mem: storing 26 in location 1188
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1190
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1191
9999 mem: incrementing refcount of 1140: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1191 is 1140
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1192
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1190 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 105 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1193
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1194
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1195
9999 mem: incrementing refcount of 1159: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1159
9999 mem: storing 1159 in location 1196
9999 mem: incrementing refcount of 1159: 5 -> 6
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1177
9999 mem: incrementing refcount of 1159: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1170
9999 mem: location 1162 is 0
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1170
9999 mem: storing 1170 in location 1178
9999 mem: incrementing refcount of 1170: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1170
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1170
9999 mem: decrementing refcount of 1159: 7 -> 6
9999 mem: storing 1170 in location 1195
9999 mem: incrementing refcount of 1170: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1197
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1198
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1192 is 0
9999 mem: storing 0 in location 1199
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1200
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1201
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1159
9999 mem: storing 1159 in location 1202
9999 mem: incrementing refcount of 1159: 6 -> 7
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1190 is 1008
9999 mem: location 1198 is 1
9999 mem: location 1199 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 0
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1190
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1195 is 1170
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1203
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1
9999 mem: storing 1 in location 1204
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1199 is 0
9999 mem: location 1201 is 0
9999 mem: storing 1 in location 1205
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1205 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1159
9999 mem: decrementing refcount of 1159: 7 -> 6
9999 mem: storing 1159 in location 1202
9999 mem: incrementing refcount of 1159: 6 -> 7
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1195 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1195 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1171
9998 run: its type is "character"
9999 mem: location 1171 is 97
9999 mem: storing 97 in location 1206
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1197 is 7
9999 mem: location 1206 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1215
9999 mem: storing 10 in location 1216
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1218
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1219
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1219 is 97
9999 mem: storing 0 in location 1221
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
9990 schedule: get-color/render/new-editor/scenario_editor-provides-edited-contents
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1219 is 97
9999 mem: storing 0 in location 1224
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1218 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1197
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1206 is 97
9999 mem: storing 0 in location 1207
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1199 is 0
9999 mem: location 1194 is 9
9999 mem: storing 0 in location 1209
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1209 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1190 is 1008
9999 mem: location 1206 is 97
9999 mem: location 1197 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 mem: new alloc: 1227
9999 mem: storing 24 in location 1228
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1231
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1232
9999 mem: storing 1 in location 1233
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 0
9999 mem: storing 0 in location 1240
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 97
9999 mem: storing 0 in location 1241
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 0
9999 mem: storing 10 in location 1244
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 97
9999 mem: storing 0 in location 1247
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 97
9999 mem: location 1232 is 7
9999 mem: storing 97 in location 1249
9999 mem: storing 7 in location 1250
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 10
9998 run: address to copy to is 1036
9999 mem: location 1249 is 97
9999 mem: location 1250 is 7
9999 mem: storing 97 in location 1036
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 1
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1177
9999 mem: incrementing refcount of 1170: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1170: 7 -> 6
9999 mem: storing 1179 in location 1195
9999 mem: incrementing refcount of 1179: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1177
9999 mem: incrementing refcount of 1159: 7 -> 8
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1170
9999 mem: location 1162 is 0
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1170
9999 mem: storing 1170 in location 1178
9999 mem: incrementing refcount of 1170: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1170
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1170
9999 mem: decrementing refcount of 1159: 8 -> 7
9999 mem: storing 1170 in location 1196
9999 mem: incrementing refcount of 1170: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1199 is 0
9999 mem: storing 1 in location 1199
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1195 is 1179
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1203
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1
9999 mem: storing 1 in location 1204
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1205
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1205 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1195 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1195 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is "character"
9999 mem: location 1180 is 98
9999 mem: storing 98 in location 1206
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1197 is 7
9999 mem: location 1206 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1215
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1218
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1219
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1219 is 98
9999 mem: storing 0 in location 1221
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1219 is 98
9999 mem: storing 0 in location 1224
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1218 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1197
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1206 is 98
9999 mem: storing 0 in location 1207
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1194 is 9
9999 mem: storing 0 in location 1209
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1209 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1190 is 1008
9999 mem: location 1206 is 98
9999 mem: location 1197 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1231
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1232
9999 mem: storing 1 in location 1233
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1240
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 98
9999 mem: storing 0 in location 1241
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 1
9999 mem: storing 11 in location 1244
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 98
9999 mem: storing 0 in location 1247
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 98
9999 mem: location 1232 is 7
9999 mem: storing 98 in location 1249
9999 mem: storing 7 in location 1250
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 11
9998 run: address to copy to is 1038
9999 mem: location 1249 is 98
9999 mem: location 1250 is 7
9999 mem: storing 98 in location 1038
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 2
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1179
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 3 -> 4
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1179: 7 -> 6
9999 mem: storing 1183 in location 1195
9999 mem: incrementing refcount of 1183: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1177
9999 mem: incrementing refcount of 1170: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1170: 9 -> 8
9999 mem: storing 1179 in location 1196
9999 mem: incrementing refcount of 1179: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1199 is 1
9999 mem: storing 2 in location 1199
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1195 is 1183
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1193 is 5
9999 mem: storing 0 in location 1203
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1
9999 mem: storing 1 in location 1204
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1199 is 2
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1205
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1205 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1195 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1195 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 99
9999 mem: storing 99 in location 1206
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1197 is 7
9999 mem: location 1206 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1215
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1218
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1219
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1218 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1219 is 99
9999 mem: storing 0 in location 1221
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1221 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1222
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1219 is 99
9999 mem: storing 0 in location 1224
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1224 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1218 is 7
9999 mem: storing 0 in location 1225
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1218 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1197
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1206 is 99
9999 mem: storing 0 in location 1207
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1207 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1199 is 2
9999 mem: location 1194 is 9
9999 mem: storing 0 in location 1209
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1209 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1190 is 1008
9999 mem: location 1206 is 99
9999 mem: location 1197 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1231
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1232
9999 mem: storing 1 in location 1233
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 105 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1240
 105 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1241
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 105 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 2
9999 mem: storing 12 in location 1244
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1247
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 105 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 99
9999 mem: location 1232 is 7
9999 mem: storing 99 in location 1249
9999 mem: storing 7 in location 1250
 105 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 12
9998 run: address to copy to is 1040
9999 mem: location 1249 is 99
9999 mem: location 1250 is 7
9999 mem: storing 99 in location 1040
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 3
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1195 is 1183
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1177
9999 mem: incrementing refcount of 1183: 5 -> 6
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1183
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1178
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1183: 6 -> 5
9999 mem: storing 0 in location 1195
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1196 is 1179
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1179: 9 -> 8
9999 mem: storing 1183 in location 1196
9999 mem: incrementing refcount of 1183: 6 -> 7
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1199 is 2
9999 mem: storing 3 in location 1199
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 68
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1195 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1143
9999 mem: storing 0 in location 1143
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1
9999 mem: storing 1 in location 1204
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1199 is 3
9999 mem: location 1201 is 0
9999 mem: storing 0 in location 1211
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1204 is 1
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1212
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1198 is 1
9999 mem: location 1200 is 1
9999 mem: storing 0 in location 1213
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1214
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 80
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}, {row: "number"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1198 is 1
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1147
9999 mem: storing 1 in location 1147
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1200 is 1
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1148
9999 mem: storing 1 in location 1148
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1201 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1149
9999 mem: storing 0 in location 1149
 104 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1202 is 1159
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1144
9999 mem: storing 1159 in location 1144
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1198 is 1
9999 mem: location 1199 is 3
9999 mem: location 1190 is 1008
9999 mem: location 1191 is 1140
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 3
9998 run: result 2 is 1008
9998 run: result 3 is 1140
9999 mem: decrementing refcount of 1008: 10 -> 9
9999 mem: storing 1008 in location 1135
9999 mem: incrementing refcount of 1008: 9 -> 10
9999 mem: decrementing refcount of 1140: 3 -> 2
9999 mem: storing 1140 in location 1138
9999 mem: incrementing refcount of 1140: 2 -> 3
 103 run: {result: ("address" "shared" "editor-data"), "lookup": ()} <- put {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}, {1: "literal", "true": ()}
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1138 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1150
9999 mem: storing 1 in location 1150
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1138 is 1140
9999 mem: location 1135 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1140
9999 mem: storing 1140 in location 2
9999 mem: incrementing refcount of 1140: 3 -> 4
 102 run: assume-console {"\n    left-click 1, 2\n    type [def]\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {2: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {2: "literal"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"def": "literal-string"}
9992 load: after rewriting: type {"def": "literal-string"}
9999 mem: storing 'left-click' event starting at 1255
9999 mem: storing 'type' event starting at 1259
9999 mem: storing 'text' tag at 1259
9999 mem: storing character 100 at 1260
9999 mem: storing 'text' tag at 1263
9999 mem: storing character 101 at 1264
9999 mem: storing 'text' tag at 1267
9999 mem: storing character 102 at 1268
9999 mem: storing console in 1271
9999 mem: storing console data in 1273
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:address:shared:array:character <- editor-contents 2:address:shared:editor-data\n    4:array:character <- copy *3:address:shared:array:character\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: editor-contents
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9993 parse:   product: {3: ("address" "shared" "array" "character")}
9992 load: after rewriting: {3: ("address" "shared" "array" "character")} <- editor-contents {2: ("address" "shared" "editor-data")}
9993 parse: instruction: copy
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {3: ("address" "shared" "array" "character"), "lookup": ()}
9993 parse:   product: {4: ("array" "character")}
9992 load: after rewriting: {4: ("array" "character")} <- copy {3: ("address" "shared" "array" "character"), "lookup": ()}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9992 transform: instruction {3: ("address" "shared" "array" "character")} <- editor-contents {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-contents {editor: ("address" "shared" "editor-data")} -> {result: ("address" "shared" "array" "character")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: editor-contents ...
9992 transform: copy ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1271
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 mem: new alloc: 1274
9999 mem: storing 17 in location 1275
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 10 -> 11
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1271 in location 1278
9999 mem: incrementing refcount of 1271: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1279
9999 mem: incrementing refcount of 1140: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1280
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1281
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1277 is 1008
9999 mem: location 1280 is 1
9999 mem: location 1281 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 0
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 11 -> 12
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1278 is 1271
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1293
9999 mem: storing 12 in location 1294
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1271 in location 1296
9999 mem: incrementing refcount of 1271: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1296 is 1271
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 0
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1272
9998 run: its type is "number"
9999 mem: location 1272 is 0
9999 mem: storing 0 in location 1297
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 0
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1273
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1273 is 1253
9999 mem: storing 1253 in location 1298
9999 mem: incrementing refcount of 1253: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9999 mem: storing 4 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 0
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9998 run: base address is 1254
9999 mem: location 1297 is 0
9998 run: address to copy is 1255
9998 run: its type is event
9999 mem: location 1255 is 2
9999 mem: location 1256 is 65513
9999 mem: location 1257 is 1
9999 mem: location 1258 is 2
9999 mem: storing 2 in location 1302
9999 mem: storing 65513 in location 1303
9999 mem: storing 1 in location 1304
9999 mem: storing 2 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 0
9999 mem: storing 1 in location 1297
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 0
9999 mem: location 1273 is 1253
9999 mem: location 1297 is 1
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy to is 1272
9999 mem: storing 1 in location 1272
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 2
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 1
9999 mem: location 1305 is 2
9999 mem: location 1296 is 1271
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 2]
9998 run: result 1 is 1271
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1282
9999 mem: storing 65513 in location 1283
9999 mem: storing 1 in location 1284
9999 mem: storing 2 in location 1285
9999 mem: decrementing refcount of 1271: 2 -> 1
9999 mem: storing 1271 in location 1278
9999 mem: incrementing refcount of 1271: 1 -> 2
9999 mem: storing 1 in location 1286
9999 mem: storing 0 in location 1287
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1282 is 2
9999 mem: location 1283 is 65513
9999 mem: location 1284 is 1
9999 mem: location 1285 is 2
9999 mem: storing 65513 in location 1288
9999 mem: storing 1 in location 1289
9999 mem: storing 2 in location 1290
9999 mem: storing 1 in location 1291
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 1
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: "touch-event"}
9999 mem: location 1277 is 1008
9999 mem: location 1279 is 1140
9999 mem: location 1288 is 65513
9999 mem: location 1289 is 1
9999 mem: location 1290 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1307
9999 mem: storing 31 in location 1308
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 5 -> 6
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1312
9999 mem: storing 1 in location 1313
9999 mem: storing 2 in location 1314
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1312 is 65513
9999 mem: location 1313 is 1
9999 mem: location 1314 is 2
9998 run: address to copy is 1313
9998 run: its type is "number"
9999 mem: location 1313 is 1
9999 mem: storing 1 in location 1315
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1315 is 1
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1312 is 65513
9999 mem: location 1313 is 1
9999 mem: location 1314 is 2
9998 run: address to copy is 1314
9998 run: its type is "number"
9999 mem: location 1314 is 2
9999 mem: storing 2 in location 1316
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1317
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1316 is 2
9999 mem: location 1317 is 0
9999 mem: storing 0 in location 1318
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1318 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1319
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1316 is 2
9999 mem: location 1319 is 9
9999 mem: storing 0 in location 1320
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1320 is 0
9998 run: jumping to instruction 18
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1321
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1322
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1323
9999 mem: incrementing refcount of 1159: 7 -> 8
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 mem: location 1315 is 1
9999 mem: location 1316 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1187
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1190
9999 mem: incrementing refcount of 1008: 13 -> 14
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1191
9999 mem: incrementing refcount of 1140: 6 -> 7
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1192
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1193
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1191 is 1140
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1194
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1195
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1190 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 14 -> 15
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 107 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1196
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1197
9999 mem: incrementing refcount of 1159: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1159
9999 mem: storing 1159 in location 1198
9999 mem: incrementing refcount of 1159: 9 -> 10
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1177
9999 mem: incrementing refcount of 1159: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1170
9999 mem: location 1162 is 0
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1170
9999 mem: storing 1170 in location 1178
9999 mem: incrementing refcount of 1170: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1170
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1170
9999 mem: decrementing refcount of 1159: 11 -> 10
9999 mem: storing 1170 in location 1197
9999 mem: incrementing refcount of 1170: 9 -> 10
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1199
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1194 is 0
9999 mem: storing 0 in location 1200
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1192 is 1
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1148
9999 mem: storing 1 in location 1148
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1192 is 1
9999 mem: storing 1 in location 1201
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1193 is 2
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1149
9999 mem: storing 2 in location 1149
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1193 is 2
9999 mem: storing 2 in location 1202
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1159
9999 mem: storing 1159 in location 1203
9999 mem: incrementing refcount of 1159: 10 -> 11
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1197 is 1170
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1196 is 5
9999 mem: storing 0 in location 1204
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1201 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1205 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1200 is 0
9999 mem: location 1202 is 2
9999 mem: storing 0 in location 1206
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1206 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1197 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1197 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1171
9998 run: its type is "character"
9999 mem: location 1171 is 97
9999 mem: storing 97 in location 1207
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1207 is 97
9999 mem: storing 0 in location 1208
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1200 is 0
9999 mem: location 1195 is 9
9999 mem: storing 0 in location 1210
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1177
9999 mem: incrementing refcount of 1170: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1170
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1170: 11 -> 10
9999 mem: storing 1179 in location 1197
9999 mem: incrementing refcount of 1179: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1177
9999 mem: incrementing refcount of 1159: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1170
9999 mem: location 1162 is 0
9999 mem: location 1177 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1170
9999 mem: storing 1170 in location 1178
9999 mem: incrementing refcount of 1170: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1170
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1170
9999 mem: decrementing refcount of 1159: 12 -> 11
9999 mem: storing 1170 in location 1198
9999 mem: incrementing refcount of 1170: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1200
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1197 is 1179
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1196 is 5
9999 mem: storing 0 in location 1204
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1201 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1205 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1200 is 1
9999 mem: location 1202 is 2
9999 mem: storing 0 in location 1206
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1206 is 0
9998 run: jumping to instruction 32
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1197 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1197 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is "character"
9999 mem: location 1180 is 98
9999 mem: storing 98 in location 1207
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1207 is 98
9999 mem: storing 0 in location 1208
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1200 is 1
9999 mem: location 1195 is 9
9999 mem: storing 0 in location 1210
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1179: 11 -> 10
9999 mem: storing 1183 in location 1197
9999 mem: incrementing refcount of 1183: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1170
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1177
9999 mem: incrementing refcount of 1170: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1170
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1177 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1179
9999 mem: storing 1179 in location 1178
9999 mem: incrementing refcount of 1179: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1170: 13 -> 12
9999 mem: storing 1179 in location 1198
9999 mem: incrementing refcount of 1179: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1200 is 1
9999 mem: storing 2 in location 1200
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1197 is 1183
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1196 is 5
9999 mem: storing 0 in location 1204
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1204 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1201 is 1
9999 mem: storing 1 in location 1205
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1205 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1200 is 2
9999 mem: location 1202 is 2
9999 mem: storing 1 in location 1206
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1206 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1179
9999 mem: decrementing refcount of 1159: 11 -> 10
9999 mem: storing 1179 in location 1203
9999 mem: incrementing refcount of 1179: 12 -> 13
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1203 is 1179
9999 mem: location 1191 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1144
9999 mem: storing 1179 in location 1144
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1197 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1197 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 99
9999 mem: storing 99 in location 1207
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1207 is 99
9999 mem: storing 0 in location 1208
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1208 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1200 is 2
9999 mem: location 1195 is 9
9999 mem: storing 0 in location 1210
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-provides-edited-contents
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 0
9998 run: jumping to instruction 59
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1197 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1177
9999 mem: incrementing refcount of 1183: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1178
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1183: 10 -> 9
9999 mem: storing 0 in location 1197
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1198 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1179: 14 -> 13
9999 mem: storing 1183 in location 1198
9999 mem: incrementing refcount of 1183: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1200 is 2
9999 mem: storing 3 in location 1200
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 64
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1201 is 1
9999 mem: storing 1 in location 1205
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1200 is 3
9999 mem: location 1202 is 2
9999 mem: storing 0 in location 1211
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1205 is 1
9999 mem: location 1211 is 0
9999 mem: storing 0 in location 1212
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1199 is 1
9999 mem: location 1201 is 1
9999 mem: storing 0 in location 1213
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1214
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 78
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1191 is 1140
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 7 -> 6
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 6 -> 7
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1324
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1325
9999 mem: incrementing refcount of 1159: 10 -> 11
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1326
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1327
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1324 is 0
9998 run: jumping to instruction 42
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1215
9999 mem: storing 1215 in location 1329
9999 mem: incrementing refcount of 1215: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1321 is 1
9999 mem: location 1322 is 0
9999 mem: location 1323 is 1159
9999 mem: location 1326 is 1
9999 mem: location 1327 is 2
9999 mem: location 1325 is 1159
9999 mem: location 1324 is 0
9999 mem: location 1329 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1329 is 1215
9999 mem: skipping refcount at 1215
9999 mem: storing 1 in location 1216
9999 mem: storing 1 in location 1217
9999 mem: storing 0 in location 1218
9999 mem: storing 1159 in location 1219
9999 mem: storing 1 in location 1220
9999 mem: storing 2 in location 1221
9999 mem: storing 1159 in location 1222
9999 mem: storing 0 in location 1223
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1311 is 1140
9999 mem: location 1329 is 1215
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1166
9999 mem: incrementing refcount of 1140: 7 -> 8
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1167
9999 mem: incrementing refcount of 1215: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1168
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1215
9999 mem: location 1168 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1156
9999 mem: incrementing refcount of 1215: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1157
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1340
9999 mem: storing 1340 in location 1158
9999 mem: incrementing refcount of 1340: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1215
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1340
9999 mem: skipping refcount at 1340
9999 mem: location 1158 is 1340
9999 mem: skipping refcount at 1340
9999 mem: storing 1215 in location 1341
9999 mem: storing 0 in location 1342
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1340
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1340
9999 mem: storing 1340 in location 1168
9999 mem: incrementing refcount of 1340: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1168 is 1340
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1151
9999 mem: storing 1340 in location 1151
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1169
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1169
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1169 is 0
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1152
9999 mem: storing 0 in location 1152
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1166 is 1140
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 8 -> 7
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 7 -> 8
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1311 is 1140
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1280
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1281
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1277 is 1008
9999 mem: location 1280 is 1
9999 mem: location 1281 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 2
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 15 -> 16
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1278 is 1271
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1271 in location 1296
9999 mem: incrementing refcount of 1271: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1296 is 1271
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 1
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1272
9998 run: its type is "number"
9999 mem: location 1272 is 1
9999 mem: storing 1 in location 1297
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 1
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1273
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1273 is 1253
9999 mem: storing 1253 in location 1298
9999 mem: incrementing refcount of 1253: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9999 mem: storing 4 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 1
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9998 run: base address is 1254
9999 mem: location 1297 is 1
9998 run: address to copy is 1259
9998 run: its type is event
9999 mem: location 1259 is 0
9999 mem: location 1260 is 100
9999 mem: location 1261 is 0
9999 mem: location 1262 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 100 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 1
9999 mem: storing 2 in location 1297
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 1
9999 mem: location 1273 is 1253
9999 mem: location 1297 is 2
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy to is 1272
9999 mem: storing 2 in location 1272
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 0
9999 mem: location 1303 is 100
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1271
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 100, 0, 0]
9998 run: result 1 is 1271
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1282
9999 mem: storing 100 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: decrementing refcount of 1271: 3 -> 2
9999 mem: storing 1271 in location 1278
9999 mem: incrementing refcount of 1271: 2 -> 3
9999 mem: storing 1 in location 1286
9999 mem: storing 0 in location 1287
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1282 is 0
9999 mem: location 1283 is 100
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 0 in location 1291
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1277 is 1008
9999 mem: location 1279 is 1140
9999 mem: location 1282 is 0
9999 mem: location 1283 is 100
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 mem: new alloc: 1343
9999 mem: storing 102 in location 1344
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1346
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1347
9999 mem: incrementing refcount of 1140: 8 -> 9
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1348
9999 mem: storing 100 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1352
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1347 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 106 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1353
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 18 -> 19
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 106 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1354
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1355
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1356
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1179
9999 mem: storing 1179 in location 1357
9999 mem: incrementing refcount of 1179: 13 -> 14
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1358
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1359
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1358 is 1
9999 mem: storing 1 in location 1360
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1359 is 2
9999 mem: storing 2 in location 1361
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1348 is 0
9999 mem: location 1349 is 100
9999 mem: location 1350 is 0
9999 mem: location 1351 is 0
9999 mem: storing 100 in location 1362
9999 mem: storing 1 in location 1363
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1364
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1402
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1406
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 165
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1417
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 204
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1418
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 225
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1421
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 247
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 283
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 319
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1424
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 359
 105 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1427
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 397
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1362 is 100
9999 mem: storing 0 in location 1431
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 0
9998 run: jumping to instruction 419
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1362 is 100
9999 mem: storing 1 in location 1432
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1352
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1432 is 1
9998 run: jumping to instruction 424
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1410
9999 mem: incrementing refcount of 1159: 11 -> 12
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1179
9999 mem: storing 1179 in location 1428
9999 mem: incrementing refcount of 1179: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: "character"}, {screen: ("address" "shared" "screen")}
9999 mem: location 1347 is 1140
9999 mem: location 1362 is 100
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1307
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1310
9999 mem: incrementing refcount of 1140: 9 -> 10
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1311
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 19 -> 20
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1179
9999 mem: storing 1179 in location 1313
9999 mem: incrementing refcount of 1179: 15 -> 16
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1311 is 100
9999 mem: location 1313 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1166
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1167
9999 mem: incrementing refcount of 1179: 16 -> 17
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1447
9999 mem: storing 1447 in location 1168
9999 mem: incrementing refcount of 1447: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1168 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 0
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1166 is 100
9999 mem: location 1168 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy to is 1448
9999 mem: storing 100 in location 1448
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1169
9999 mem: incrementing refcount of 1183: 11 -> 12
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1170
9999 mem: location 1168 is 1447
9999 mem: location 1167 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy to is 1181
9999 mem: storing 1447 in location 1181
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 0
9999 mem: location 1450 is 0
9999 mem: location 1167 is 1179
9999 mem: location 1168 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy to is 1450
9999 mem: storing 1179 in location 1450
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 0
9999 mem: location 1450 is 1179
9999 mem: location 1169 is 1183
9999 mem: location 1168 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy to is 1449
9999 mem: storing 1183 in location 1449
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 1183
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1179
9999 mem: location 1168 is 1447
9999 mem: location 1169 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy to is 1186
9999 mem: storing 1447 in location 1186
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1179
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1179
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1447
9999 mem: location 1182 is 1170
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1447
9999 mem: storing 1447 in location 1178
9999 mem: incrementing refcount of 1447: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1447
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1447
9999 mem: decrementing refcount of 1179: 18 -> 17
9999 mem: storing 1447 in location 1313
9999 mem: incrementing refcount of 1447: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1179
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1313 is 1447
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1144
9999 mem: storing 1447 in location 1144
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1314
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1315
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1316
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1317
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1318
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1315 is 2
9999 mem: storing 2 in location 1319
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1312 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 20 -> 21
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 107 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1320
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1312 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 21 -> 22
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 107 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1321
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1317 is 9
9999 mem: storing 8 in location 1322
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1315 is 2
9999 mem: location 1322 is 8
9999 mem: storing 0 in location 1323
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 45
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1315 is 2
9999 mem: storing 3 in location 1315
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1315 is 3
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1149
9999 mem: storing 3 in location 1149
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1447
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1177
9999 mem: incrementing refcount of 1447: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1447
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1183
9999 mem: location 1450 is 1179
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1449
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1449 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1330
9999 mem: incrementing refcount of 1183: 13 -> 14
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1330 is 1183
9999 mem: storing 0 in location 1331
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 61
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1183
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1315 is 3
9999 mem: location 1320 is 10
9999 mem: storing 0 in location 1334
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1447
9999 mem: storing 1447 in location 1336
9999 mem: incrementing refcount of 1447: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1318 is 1
9999 mem: location 1319 is 2
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 22 -> 23
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1158
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 2
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1319 is 2
9999 mem: storing 2 in location 1337
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 2
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 1447
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1336 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1183
9999 mem: location 1450 is 1179
9999 mem: location 1336 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1448
9998 run: its type is "character"
9999 mem: location 1448 is 100
9999 mem: storing 100 in location 1338
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1338 is 100
9999 mem: storing 0 in location 1339
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1312 is 1008
9999 mem: location 1338 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 23 -> 24
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 2
9999 mem: storing 2 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 100
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 2
9999 mem: storing 12 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 5 -> 6
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 100
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 100
9999 mem: location 1232 is 7
9999 mem: storing 100 in location 1249
9999 mem: storing 7 in location 1250
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 12
9998 run: address to copy to is 1040
9999 mem: location 1249 is 100
9999 mem: location 1250 is 7
9999 mem: storing 100 in location 1040
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 3
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1337 is 2
9999 mem: storing 3 in location 1337
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1447
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1177
9999 mem: incrementing refcount of 1447: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1447
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1183
9999 mem: location 1450 is 1179
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1449
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1449 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1447: 6 -> 5
9999 mem: storing 1183 in location 1336
9999 mem: incrementing refcount of 1183: 15 -> 16
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 3
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 1183
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1336 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1447
9999 mem: location 1336 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 99
9999 mem: storing 99 in location 1338
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1338 is 99
9999 mem: storing 0 in location 1339
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1312 is 1008
9999 mem: location 1338 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 24 -> 25
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 3
9999 mem: storing 13 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 6 -> 7
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 99
9999 mem: location 1232 is 7
9999 mem: storing 99 in location 1249
9999 mem: storing 7 in location 1250
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 13
9998 run: address to copy to is 1042
9999 mem: location 1249 is 99
9999 mem: location 1250 is 7
9999 mem: storing 99 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 4
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1337 is 3
9999 mem: storing 4 in location 1337
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1177
9999 mem: incrementing refcount of 1183: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1447
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1178
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1183: 17 -> 16
9999 mem: storing 0 in location 1336
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 4
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 82
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1329
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1310 is 1140
9999 mem: location 1312 is 1008
9999 mem: location 1329 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 10 -> 9
9999 mem: storing 1140 in location 1347
9999 mem: incrementing refcount of 1140: 9 -> 10
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1346
9999 mem: incrementing refcount of 1008: 24 -> 25
9999 mem: storing 0 in location 1352
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1412
9999 mem: incrementing refcount of 1159: 12 -> 13
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1358
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1359
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1151 is 1340
9999 mem: storing 1340 in location 1367
9999 mem: incrementing refcount of 1340: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1367 is 1340
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1367 is 1340
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1340 in location 1177
9999 mem: incrementing refcount of 1340: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1177 is 1340
9999 mem: skipping refcount at 1340
9999 mem: location 1341 is 1215
9999 mem: location 1342 is 0
9999 mem: location 1177 is 1340
9999 mem: skipping refcount at 1340
9998 run: address to copy is 1341
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1341 is 1215
9999 mem: storing 1215 in location 1178
9999 mem: incrementing refcount of 1215: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1178 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1366
9999 mem: incrementing refcount of 1215: 4 -> 5
 105 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1366 is 1215
9999 mem: skipping refcount at 1215
9999 mem: location 1216 is 1
9999 mem: location 1217 is 1
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1159
9999 mem: location 1220 is 1
9999 mem: location 1221 is 2
9999 mem: location 1222 is 1159
9999 mem: location 1223 is 0
9999 mem: location 1224 is 0
9999 mem: location 1225 is 0
9999 mem: location 1226 is 0
9999 mem: location 1366 is 1215
9999 mem: skipping refcount at 1215
9999 mem: storing 0 in location 1400
 105 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 0
9998 run: jumping to instruction 447
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1428 is 1179
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1177
9999 mem: incrementing refcount of 1179: 17 -> 18
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1179
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1447
9999 mem: location 1182 is 1170
9999 mem: location 1177 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1447
9999 mem: storing 1447 in location 1178
9999 mem: incrementing refcount of 1447: 5 -> 6
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1447
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1447
9999 mem: storing 1447 in location 1401
9999 mem: incrementing refcount of 1447: 6 -> 7
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1401 is 1447
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1177
9999 mem: incrementing refcount of 1447: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1447
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1183
9999 mem: location 1450 is 1179
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1449
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1449 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 16 -> 17
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1430
9999 mem: incrementing refcount of 1183: 17 -> 18
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1451
9999 mem: decrementing refcount of 1215: 5 -> 4
9999 mem: storing 1451 in location 1366
9999 mem: incrementing refcount of 1451: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1360 is 1
9999 mem: location 1361 is 2
9999 mem: location 1410 is 1159
9999 mem: location 1358 is 1
9999 mem: location 1359 is 3
9999 mem: location 1412 is 1159
9999 mem: location 1401 is 1447
9999 mem: location 1430 is 1183
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 1 in location 1453
9999 mem: storing 2 in location 1454
9999 mem: storing 1159 in location 1455
9999 mem: storing 1 in location 1456
9999 mem: storing 3 in location 1457
9999 mem: storing 1159 in location 1458
9999 mem: storing 1447 in location 1459
9999 mem: storing 1183 in location 1460
9999 mem: storing 1 in location 1461
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1347 is 1140
9999 mem: location 1366 is 1451
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1166
9999 mem: incrementing refcount of 1140: 10 -> 11
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1167
9999 mem: incrementing refcount of 1451: 1 -> 2
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1151 is 1340
9999 mem: storing 1340 in location 1168
9999 mem: incrementing refcount of 1340: 4 -> 5
 106 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1167 is 1451
9999 mem: location 1168 is 1340
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1451 in location 1156
9999 mem: incrementing refcount of 1451: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1340 in location 1157
9999 mem: incrementing refcount of 1340: 5 -> 6
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1463
9999 mem: storing 1463 in location 1158
9999 mem: incrementing refcount of 1463: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1451
9999 mem: location 1157 is 1340
9999 mem: location 1158 is 1463
9999 mem: skipping refcount at 1463
9999 mem: location 1158 is 1463
9999 mem: skipping refcount at 1463
9999 mem: storing 1451 in location 1464
9999 mem: storing 1340 in location 1465
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1463
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1463
9999 mem: decrementing refcount of 1340: 6 -> 5
9999 mem: storing 1463 in location 1168
9999 mem: incrementing refcount of 1463: 1 -> 2
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1340
9999 mem: location 1152 is 0
9999 mem: location 1168 is 1463
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1151
9999 mem: storing 1463 in location 1151
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1152 is 0
9999 mem: storing 0 in location 1169
 106 run: {redo: ("address" "shared" "list" "address" "shared" "operation")} <- copy {0: "literal"}
9999 mem: storing 0 in location 1169
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1169 is 0
9999 mem: location 1166 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1152
9999 mem: storing 0 in location 1152
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1166 is 1140
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 11 -> 10
9999 mem: storing 1140 in location 1347
9999 mem: incrementing refcount of 1140: 10 -> 11
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1346 is 1008
9999 mem: location 1347 is 1140
9999 mem: location 1352 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 25 -> 24
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 24 -> 25
9999 mem: decrementing refcount of 1140: 11 -> 10
9999 mem: storing 1140 in location 1279
9999 mem: incrementing refcount of 1140: 10 -> 11
9999 mem: storing 0 in location 1292
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1280
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1281
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1277 is 1008
9999 mem: location 1280 is 1
9999 mem: location 1281 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 3
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 26 -> 25
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 25 -> 26
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1278 is 1271
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1271 in location 1296
9999 mem: incrementing refcount of 1271: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1296 is 1271
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 2
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1272
9998 run: its type is "number"
9999 mem: location 1272 is 2
9999 mem: storing 2 in location 1297
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 2
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1273
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1273 is 1253
9999 mem: storing 1253 in location 1298
9999 mem: incrementing refcount of 1253: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9999 mem: storing 4 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 2
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9998 run: base address is 1254
9999 mem: location 1297 is 2
9998 run: address to copy is 1263
9998 run: its type is event
9999 mem: location 1263 is 0
9999 mem: location 1264 is 101
9999 mem: location 1265 is 0
9999 mem: location 1266 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 101 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 2
9999 mem: storing 3 in location 1297
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 2
9999 mem: location 1273 is 1253
9999 mem: location 1297 is 3
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy to is 1272
9999 mem: storing 3 in location 1272
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 0
9999 mem: location 1303 is 101
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1271
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 101, 0, 0]
9998 run: result 1 is 1271
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1282
9999 mem: storing 101 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: decrementing refcount of 1271: 4 -> 3
9999 mem: storing 1271 in location 1278
9999 mem: incrementing refcount of 1271: 3 -> 4
9999 mem: storing 1 in location 1286
9999 mem: storing 0 in location 1287
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1282 is 0
9999 mem: location 1283 is 101
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 0 in location 1291
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1277 is 1008
9999 mem: location 1279 is 1140
9999 mem: location 1282 is 0
9999 mem: location 1283 is 101
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1343
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1346
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1347
9999 mem: incrementing refcount of 1140: 11 -> 12
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1348
9999 mem: storing 101 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1352
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1347 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 27 -> 28
9990 schedule: screen-width/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-provides-edited-contents
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 106 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1353
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 28 -> 29
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 106 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1354
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1355
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1356
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1447
9999 mem: storing 1447 in location 1357
9999 mem: incrementing refcount of 1447: 8 -> 9
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1358
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1359
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1358 is 1
9999 mem: storing 1 in location 1360
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1359 is 3
9999 mem: storing 3 in location 1361
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1348 is 0
9999 mem: location 1349 is 101
9999 mem: location 1350 is 0
9999 mem: location 1351 is 0
9999 mem: storing 101 in location 1362
9999 mem: storing 1 in location 1363
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1364
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1402
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1406
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 165
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1417
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 204
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1418
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 225
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1421
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 247
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 283
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 319
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1424
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 359
 105 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1427
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 397
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1362 is 101
9999 mem: storing 0 in location 1431
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 0
9998 run: jumping to instruction 419
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1362 is 101
9999 mem: storing 1 in location 1432
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1352
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1432 is 1
9998 run: jumping to instruction 424
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1410
9999 mem: incrementing refcount of 1159: 13 -> 14
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1447
9999 mem: storing 1447 in location 1428
9999 mem: incrementing refcount of 1447: 9 -> 10
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: "character"}, {screen: ("address" "shared" "screen")}
9999 mem: location 1347 is 1140
9999 mem: location 1362 is 101
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1307
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1310
9999 mem: incrementing refcount of 1140: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1311
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 29 -> 30
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1447
9999 mem: storing 1447 in location 1313
9999 mem: incrementing refcount of 1447: 10 -> 11
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1311 is 101
9999 mem: location 1313 is 1447
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1166
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1167
9999 mem: incrementing refcount of 1447: 11 -> 12
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1466
9999 mem: storing 1466 in location 1168
9999 mem: incrementing refcount of 1466: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1168 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 0
9999 mem: location 1468 is 0
9999 mem: location 1469 is 0
9999 mem: location 1166 is 101
9999 mem: location 1168 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy to is 1467
9999 mem: storing 101 in location 1467
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1183
9999 mem: location 1450 is 1179
9999 mem: location 1167 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1449
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1449 is 1183
9999 mem: storing 1183 in location 1169
9999 mem: incrementing refcount of 1183: 18 -> 19
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1167 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1183
9999 mem: location 1450 is 1179
9999 mem: location 1168 is 1466
9999 mem: location 1167 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy to is 1449
9999 mem: storing 1466 in location 1449
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 0
9999 mem: location 1469 is 0
9999 mem: location 1167 is 1447
9999 mem: location 1168 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy to is 1469
9999 mem: storing 1447 in location 1469
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 0
9999 mem: location 1469 is 1447
9999 mem: location 1169 is 1183
9999 mem: location 1168 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy to is 1468
9999 mem: storing 1183 in location 1468
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 1183
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1447
9999 mem: location 1168 is 1466
9999 mem: location 1169 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy to is 1186
9999 mem: storing 1466 in location 1186
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1447
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1447
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1177
9999 mem: incrementing refcount of 1447: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1447
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1466
9999 mem: location 1450 is 1179
9999 mem: location 1177 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1449
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1449 is 1466
9999 mem: storing 1466 in location 1178
9999 mem: incrementing refcount of 1466: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1466
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1466
9999 mem: decrementing refcount of 1447: 13 -> 12
9999 mem: storing 1466 in location 1313
9999 mem: incrementing refcount of 1466: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1447
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1313 is 1466
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1144
9999 mem: storing 1466 in location 1144
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1314
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1315
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1316
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1317
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1318
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1315 is 3
9999 mem: storing 3 in location 1319
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1312 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 30 -> 31
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 107 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1320
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1312 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 31 -> 32
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 107 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1321
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1317 is 9
9999 mem: storing 8 in location 1322
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1315 is 3
9999 mem: location 1322 is 8
9999 mem: storing 0 in location 1323
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 45
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1315 is 3
9999 mem: storing 4 in location 1315
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1315 is 4
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1149
9999 mem: storing 4 in location 1149
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1466
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1177
9999 mem: incrementing refcount of 1466: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1466
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1183
9999 mem: location 1469 is 1447
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1468 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1330
9999 mem: incrementing refcount of 1183: 20 -> 21
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1330 is 1183
9999 mem: storing 0 in location 1331
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 61
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1183
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1315 is 4
9999 mem: location 1320 is 10
9999 mem: storing 0 in location 1334
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1466
9999 mem: storing 1466 in location 1336
9999 mem: incrementing refcount of 1466: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1318 is 1
9999 mem: location 1319 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 32 -> 33
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1158
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 3
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1319 is 3
9999 mem: storing 3 in location 1337
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 3
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 1466
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1336 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1183
9999 mem: location 1469 is 1447
9999 mem: location 1336 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1467
9998 run: its type is "character"
9999 mem: location 1467 is 101
9999 mem: storing 101 in location 1338
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1338 is 101
9999 mem: storing 0 in location 1339
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1312 is 1008
9999 mem: location 1338 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 33 -> 34
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 101
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 3
9999 mem: storing 13 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 7 -> 8
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 101
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 101
9999 mem: location 1232 is 7
9999 mem: storing 101 in location 1249
9999 mem: storing 7 in location 1250
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 13
9998 run: address to copy to is 1042
9999 mem: location 1249 is 101
9999 mem: location 1250 is 7
9999 mem: storing 101 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 4
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1337 is 3
9999 mem: storing 4 in location 1337
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1466
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1177
9999 mem: incrementing refcount of 1466: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1466
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1183
9999 mem: location 1469 is 1447
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1468 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1466: 6 -> 5
9999 mem: storing 1183 in location 1336
9999 mem: incrementing refcount of 1183: 22 -> 23
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 4
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 1183
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1336 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1466
9999 mem: location 1336 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 99
9999 mem: storing 99 in location 1338
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1338 is 99
9999 mem: storing 0 in location 1339
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1312 is 1008
9999 mem: location 1338 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 34 -> 35
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 4
9999 mem: storing 14 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 8 -> 9
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 99
9999 mem: location 1232 is 7
9999 mem: storing 99 in location 1249
9999 mem: storing 7 in location 1250
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 14
9998 run: address to copy to is 1044
9999 mem: location 1249 is 99
9999 mem: location 1250 is 7
9999 mem: storing 99 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 5
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1337 is 4
9999 mem: storing 5 in location 1337
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1177
9999 mem: incrementing refcount of 1183: 23 -> 24
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1466
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1178
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1183: 24 -> 23
9999 mem: storing 0 in location 1336
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 5
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 82
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1329
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1310 is 1140
9999 mem: location 1312 is 1008
9999 mem: location 1329 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 13 -> 12
9999 mem: storing 1140 in location 1347
9999 mem: incrementing refcount of 1140: 12 -> 13
9999 mem: decrementing refcount of 1008: 35 -> 34
9999 mem: storing 1008 in location 1346
9999 mem: incrementing refcount of 1008: 34 -> 35
9999 mem: storing 0 in location 1352
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1412
9999 mem: incrementing refcount of 1159: 14 -> 15
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1358
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 4
9999 mem: storing 4 in location 1359
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1151 is 1463
9999 mem: storing 1463 in location 1367
9999 mem: incrementing refcount of 1463: 2 -> 3
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1367 is 1463
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1367 is 1463
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1463 in location 1177
9999 mem: incrementing refcount of 1463: 3 -> 4
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1177 is 1463
9999 mem: skipping refcount at 1463
9999 mem: location 1464 is 1451
9999 mem: location 1465 is 1340
9999 mem: location 1177 is 1463
9999 mem: skipping refcount at 1463
9998 run: address to copy is 1464
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1464 is 1451
9999 mem: storing 1451 in location 1178
9999 mem: incrementing refcount of 1451: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1178 is 1451
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1451
9999 mem: storing 1451 in location 1366
9999 mem: incrementing refcount of 1451: 4 -> 5
 105 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1
9999 mem: location 1454 is 2
9999 mem: location 1455 is 1159
9999 mem: location 1456 is 1
9999 mem: location 1457 is 3
9999 mem: location 1458 is 1159
9999 mem: location 1459 is 1447
9999 mem: location 1460 is 1183
9999 mem: location 1461 is 1
9999 mem: location 1462 is 0
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: storing 1 in location 1391
9999 mem: storing 2 in location 1392
9999 mem: storing 1159 in location 1393
9999 mem: storing 1 in location 1394
9999 mem: storing 3 in location 1395
9999 mem: storing 1159 in location 1396
9999 mem: storing 1447 in location 1397
9999 mem: storing 1183 in location 1398
9999 mem: storing 1 in location 1399
9999 mem: storing 1 in location 1400
 105 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: "insert-operation"}, {tag: "offset"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 3
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9998 run: address to copy is 1399
9998 run: its type is "number"
9999 mem: location 1399 is 1
9999 mem: storing 1 in location 1413
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1413 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1466
9999 mem: decrementing refcount of 1447: 12 -> 11
9999 mem: storing 1466 in location 1357
9999 mem: incrementing refcount of 1466: 5 -> 6
 105 run: {insert-until: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1357 is 1466
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1177
9999 mem: incrementing refcount of 1466: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1466
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1183
9999 mem: location 1469 is 1447
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1468 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 23 -> 24
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1429
9999 mem: incrementing refcount of 1183: 24 -> 25
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {insert-until: "offset"}, {insert-until: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 3
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1429 is 1183
9998 run: address to copy to is 1398
9999 mem: storing 1183 in location 1398
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 3
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1358 is 1
9998 run: address to copy to is 1394
9999 mem: storing 1 in location 1394
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 3
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1359 is 4
9998 run: address to copy to is 1395
9999 mem: storing 4 in location 1395
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-top-of-screen: "offset"}, {top-after: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 4
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1412 is 1159
9998 run: address to copy to is 1396
9999 mem: storing 1159 in location 1396
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {typing: "insert-operation"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 4
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 1 in location 1453
9999 mem: storing 2 in location 1454
9999 mem: storing 1159 in location 1455
9999 mem: storing 1 in location 1456
9999 mem: storing 4 in location 1457
9999 mem: storing 1159 in location 1458
9999 mem: storing 1447 in location 1459
9999 mem: storing 1183 in location 1460
9999 mem: storing 1 in location 1461
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 454
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1346 is 1008
9999 mem: location 1347 is 1140
9999 mem: location 1352 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 35 -> 34
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 34 -> 35
9999 mem: decrementing refcount of 1140: 13 -> 12
9999 mem: storing 1140 in location 1279
9999 mem: incrementing refcount of 1140: 12 -> 13
9999 mem: storing 0 in location 1292
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1280
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 4
9999 mem: storing 4 in location 1281
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1277 is 1008
9999 mem: location 1280 is 1
9999 mem: location 1281 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 35 -> 36
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 4
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 36 -> 35
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 35 -> 36
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1278 is 1271
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1271 in location 1296
9999 mem: incrementing refcount of 1271: 4 -> 5
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1296 is 1271
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 3
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1272
9998 run: its type is "number"
9999 mem: location 1272 is 3
9999 mem: storing 3 in location 1297
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 3
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1273
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1273 is 1253
9999 mem: storing 1253 in location 1298
9999 mem: incrementing refcount of 1253: 4 -> 5
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9999 mem: storing 4 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 3
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9998 run: base address is 1254
9999 mem: location 1297 is 3
9998 run: address to copy is 1267
9998 run: its type is event
9999 mem: location 1267 is 0
9999 mem: location 1268 is 102
9999 mem: location 1269 is 0
9999 mem: location 1270 is 0
9999 mem: storing 0 in location 1302
9999 mem: storing 102 in location 1303
9999 mem: storing 0 in location 1304
9999 mem: storing 0 in location 1305
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1297 is 3
9999 mem: storing 4 in location 1297
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 3
9999 mem: location 1273 is 1253
9999 mem: location 1297 is 4
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy to is 1272
9999 mem: storing 4 in location 1272
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1302 is 0
9999 mem: location 1303 is 102
9999 mem: location 1304 is 0
9999 mem: location 1305 is 0
9999 mem: location 1296 is 1271
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 102, 0, 0]
9998 run: result 1 is 1271
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1282
9999 mem: storing 102 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: decrementing refcount of 1271: 5 -> 4
9999 mem: storing 1271 in location 1278
9999 mem: incrementing refcount of 1271: 4 -> 5
9999 mem: storing 1 in location 1286
9999 mem: storing 0 in location 1287
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1282 is 0
9999 mem: location 1283 is 102
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: storing 0 in location 1291
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1291 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1277 is 1008
9999 mem: location 1279 is 1140
9999 mem: location 1282 is 0
9999 mem: location 1283 is 102
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1343
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1346
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1347
9999 mem: incrementing refcount of 1140: 13 -> 14
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1348
9999 mem: storing 102 in location 1349
9999 mem: storing 0 in location 1350
9999 mem: storing 0 in location 1351
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1352
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1347 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 37 -> 38
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 106 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1353
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 38 -> 39
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 106 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1354
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1355
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1356
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1466
9999 mem: storing 1466 in location 1357
9999 mem: incrementing refcount of 1466: 7 -> 8
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1358
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 4
9999 mem: storing 4 in location 1359
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1358 is 1
9999 mem: storing 1 in location 1360
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1359 is 4
9999 mem: storing 4 in location 1361
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1348 is 0
9999 mem: location 1349 is 102
9999 mem: location 1350 is 0
9999 mem: location 1351 is 0
9999 mem: storing 102 in location 1362
9999 mem: storing 1 in location 1363
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1363 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1364
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1364 is 0
9998 run: jumping to instruction 71
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1402
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1402 is 0
9998 run: jumping to instruction 126
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1406
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 165
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1417
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1417 is 0
9998 run: jumping to instruction 204
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1418
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 225
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1421
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 247
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 283
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 319
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1424
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1424 is 0
9998 run: jumping to instruction 359
 105 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1427
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1427 is 0
9998 run: jumping to instruction 397
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1362 is 102
9999 mem: storing 0 in location 1431
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1431 is 0
9998 run: jumping to instruction 419
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1362 is 102
9999 mem: storing 1 in location 1432
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1352
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1432 is 1
9998 run: jumping to instruction 424
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1410
9999 mem: incrementing refcount of 1159: 15 -> 16
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1466
9999 mem: storing 1466 in location 1428
9999 mem: incrementing refcount of 1466: 8 -> 9
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: "character"}, {screen: ("address" "shared" "screen")}
9999 mem: location 1347 is 1140
9999 mem: location 1362 is 102
9999 mem: location 1346 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1307
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1310
9999 mem: incrementing refcount of 1140: 14 -> 15
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1311
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1312
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1466
9999 mem: storing 1466 in location 1313
9999 mem: incrementing refcount of 1466: 9 -> 10
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1311 is 102
9999 mem: location 1313 is 1466
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1163
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1166
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1167
9999 mem: incrementing refcount of 1466: 10 -> 11
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1470
9999 mem: storing 1470 in location 1168
9999 mem: incrementing refcount of 1470: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1168 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1473 is 0
9999 mem: location 1166 is 102
9999 mem: location 1168 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy to is 1471
9999 mem: storing 102 in location 1471
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1167 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1183
9999 mem: location 1469 is 1447
9999 mem: location 1167 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1468 is 1183
9999 mem: storing 1183 in location 1169
9999 mem: incrementing refcount of 1183: 25 -> 26
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1167 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1183
9999 mem: location 1469 is 1447
9999 mem: location 1168 is 1470
9999 mem: location 1167 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy to is 1468
9999 mem: storing 1470 in location 1468
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 0
9999 mem: location 1473 is 0
9999 mem: location 1167 is 1466
9999 mem: location 1168 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy to is 1473
9999 mem: storing 1466 in location 1473
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1168 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 0
9999 mem: location 1473 is 1466
9999 mem: location 1169 is 1183
9999 mem: location 1168 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy to is 1472
9999 mem: storing 1183 in location 1472
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1169 is 1183
9998 run: jumping to instruction 11
 107 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1169 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1466
9999 mem: location 1168 is 1470
9999 mem: location 1169 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy to is 1186
9999 mem: storing 1470 in location 1186
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1167 is 1466
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1466
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1177
9999 mem: incrementing refcount of 1466: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1466
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1470
9999 mem: location 1469 is 1447
9999 mem: location 1177 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1468 is 1470
9999 mem: storing 1470 in location 1178
9999 mem: incrementing refcount of 1470: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1470
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1470
9999 mem: decrementing refcount of 1466: 12 -> 11
9999 mem: storing 1470 in location 1313
9999 mem: incrementing refcount of 1470: 2 -> 3
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1466
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1313 is 1470
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1144
9999 mem: storing 1470 in location 1144
 106 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1314
 106 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 4
9999 mem: storing 4 in location 1315
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1316
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1317
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1318
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1315 is 4
9999 mem: storing 4 in location 1319
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1312 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 40 -> 41
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1178
 107 run: return {width: "number"}
9999 mem: location 1178 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1320
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1312 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1177
9999 mem: incrementing refcount of 1008: 41 -> 42
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1177 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1177 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1178
 107 run: return {height: "number"}
9999 mem: location 1178 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1321
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1317 is 9
9999 mem: storing 8 in location 1322
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1315 is 4
9999 mem: location 1322 is 8
9999 mem: storing 0 in location 1323
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1323 is 0
9998 run: jumping to instruction 45
9990 schedule: insert-at-cursor/handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-provides-edited-contents
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1315 is 4
9999 mem: storing 5 in location 1315
 106 run: {editor: ("address" "shared" "editor-data"), "lookup": ()} <- put {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 4
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1315 is 5
9999 mem: location 1310 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy to is 1149
9999 mem: storing 5 in location 1149
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1470
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1470 in location 1177
9999 mem: incrementing refcount of 1470: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1470
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 1183
9999 mem: location 1473 is 1466
9999 mem: location 1177 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy is 1472
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1472 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1330
9999 mem: incrementing refcount of 1183: 27 -> 28
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1330 is 1183
9999 mem: storing 0 in location 1331
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 61
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1330 is 1183
9998 run: jump-unless fell through
 106 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {screen-width: "number"}
9999 mem: location 1315 is 5
9999 mem: location 1320 is 10
9999 mem: storing 0 in location 1334
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jump-if fell through
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1313 is 1470
9999 mem: storing 1470 in location 1336
9999 mem: incrementing refcount of 1470: 4 -> 5
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1312 is 1008
9999 mem: location 1318 is 1
9999 mem: location 1319 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 42 -> 43
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1158
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 4
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1319 is 4
9999 mem: storing 4 in location 1337
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 4
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 1470
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1336 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 1183
9999 mem: location 1473 is 1466
9999 mem: location 1336 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy is 1471
9998 run: its type is "character"
9999 mem: location 1471 is 102
9999 mem: storing 102 in location 1338
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1338 is 102
9999 mem: storing 0 in location 1339
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1312 is 1008
9999 mem: location 1338 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 43 -> 44
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 4
9999 mem: storing 4 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 102
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 4
9999 mem: storing 14 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 9 -> 10
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 102
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 102
9999 mem: location 1232 is 7
9999 mem: storing 102 in location 1249
9999 mem: storing 7 in location 1250
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 14
9998 run: address to copy to is 1044
9999 mem: location 1249 is 102
9999 mem: location 1250 is 7
9999 mem: storing 102 in location 1044
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 5
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1337 is 4
9999 mem: storing 5 in location 1337
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1470
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1470 in location 1177
9999 mem: incrementing refcount of 1470: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1470
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 1183
9999 mem: location 1473 is 1466
9999 mem: location 1177 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy is 1472
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1472 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 28 -> 29
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1470: 6 -> 5
9999 mem: storing 1183 in location 1336
9999 mem: incrementing refcount of 1183: 29 -> 30
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 5
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 1183
9998 run: jump-unless fell through
 106 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1336 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1470
9999 mem: location 1336 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 99
9999 mem: storing 99 in location 1338
 106 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1338 is 99
9999 mem: storing 0 in location 1339
 106 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jump-if fell through
 106 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1312 is 1008
9999 mem: location 1338 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1227
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1230
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1231
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1232
9999 mem: storing 0 in location 1233
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1233 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1232
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1234
9999 mem: storing 0 in location 1235
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1235 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1234
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1231 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1230 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1236
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1237
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1238
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1238 is 1
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1237 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 5
9999 mem: storing 5 in location 1240
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1236 is 10
9999 mem: storing 1 in location 1239
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1239 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1241
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1241 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1238 is 1
9999 mem: location 1236 is 10
9999 mem: storing 10 in location 1244
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1244 is 10
9999 mem: location 1240 is 5
9999 mem: storing 15 in location 1244
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1245
9999 mem: incrementing refcount of 1014: 10 -> 11
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1246
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1231 is 99
9999 mem: storing 0 in location 1247
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1231 is 99
9999 mem: location 1232 is 7
9999 mem: storing 99 in location 1249
9999 mem: storing 7 in location 1250
 107 run: {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1245 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1244 is 15
9998 run: address to copy to is 1046
9999 mem: location 1249 is 99
9999 mem: location 1250 is 7
9999 mem: storing 99 in location 1046
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1236 is 10
9999 mem: storing 9 in location 1251
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1251 is 9
9999 mem: storing 0 in location 1252
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1252 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1240 is 6
9999 mem: location 1230 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1230 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1337 is 5
9999 mem: storing 6 in location 1337
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1336 is 1183
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1177
9999 mem: incrementing refcount of 1183: 30 -> 31
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1183
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1470
9999 mem: location 1177 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1178
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1183: 31 -> 30
9999 mem: storing 0 in location 1336
 106 run: jump {: "offset"}
9998 run: jumping to instruction 70
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1329
 106 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1337 is 6
9999 mem: location 1317 is 9
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 74
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 82
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1329
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1310 is 1140
9999 mem: location 1312 is 1008
9999 mem: location 1329 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 15 -> 14
9999 mem: storing 1140 in location 1347
9999 mem: incrementing refcount of 1140: 14 -> 15
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1346
9999 mem: incrementing refcount of 1008: 44 -> 45
9999 mem: storing 0 in location 1352
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1412
9999 mem: incrementing refcount of 1159: 16 -> 17
 105 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1358
 105 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 5
9999 mem: storing 5 in location 1359
 105 run: {undo: ("address" "shared" "list" "address" "shared" "operation")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1151 is 1463
9999 mem: storing 1463 in location 1367
9999 mem: incrementing refcount of 1463: 4 -> 5
 105 run: jump-unless {undo: ("address" "shared" "list" "address" "shared" "operation")}, {: "offset"}
9999 mem: location 1367 is 1463
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1367 is 1463
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1463 in location 1177
9999 mem: incrementing refcount of 1463: 5 -> 6
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1177 is 1463
9999 mem: skipping refcount at 1463
9999 mem: location 1464 is 1451
9999 mem: location 1465 is 1340
9999 mem: location 1177 is 1463
9999 mem: skipping refcount at 1463
9998 run: address to copy is 1464
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1464 is 1451
9999 mem: storing 1451 in location 1178
9999 mem: incrementing refcount of 1451: 5 -> 6
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1178 is 1451
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1451
9999 mem: storing 1451 in location 1366
9999 mem: incrementing refcount of 1451: 6 -> 7
 105 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1
9999 mem: location 1454 is 2
9999 mem: location 1455 is 1159
9999 mem: location 1456 is 1
9999 mem: location 1457 is 4
9999 mem: location 1458 is 1159
9999 mem: location 1459 is 1447
9999 mem: location 1460 is 1183
9999 mem: location 1461 is 1
9999 mem: location 1462 is 0
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: storing 1 in location 1391
9999 mem: storing 2 in location 1392
9999 mem: storing 1159 in location 1393
9999 mem: storing 1 in location 1394
9999 mem: storing 4 in location 1395
9999 mem: storing 1159 in location 1396
9999 mem: storing 1447 in location 1397
9999 mem: storing 1183 in location 1398
9999 mem: storing 1 in location 1399
9999 mem: storing 1 in location 1400
 105 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1400 is 1
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {typing: "insert-operation"}, {tag: "offset"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 4
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9998 run: address to copy is 1399
9998 run: its type is "number"
9999 mem: location 1399 is 1
9999 mem: storing 1 in location 1413
 105 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1413 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1347 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1144 is 1470
9999 mem: decrementing refcount of 1466: 11 -> 10
9999 mem: storing 1470 in location 1357
9999 mem: incrementing refcount of 1470: 5 -> 6
 105 run: {insert-until: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1357 is 1470
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1470 in location 1177
9999 mem: incrementing refcount of 1470: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1177 is 1470
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1177 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 1183
9999 mem: location 1473 is 1466
9999 mem: location 1177 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy is 1472
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1472 is 1183
9999 mem: storing 1183 in location 1178
9999 mem: incrementing refcount of 1183: 30 -> 31
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1178 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1183
9999 mem: storing 1183 in location 1429
9999 mem: incrementing refcount of 1183: 31 -> 32
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {insert-until: "offset"}, {insert-until: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 4
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1429 is 1183
9998 run: address to copy to is 1398
9999 mem: storing 1183 in location 1398
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 4
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1358 is 1
9998 run: address to copy to is 1394
9999 mem: storing 1 in location 1394
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 4
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1359 is 5
9998 run: address to copy to is 1395
9999 mem: storing 5 in location 1395
 105 run: {typing: "insert-operation"} <- put {typing: "insert-operation"}, {after-top-of-screen: "offset"}, {top-after: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 5
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1412 is 1159
9998 run: address to copy to is 1396
9999 mem: storing 1159 in location 1396
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {typing: "insert-operation"}
9999 mem: location 1391 is 1
9999 mem: location 1392 is 2
9999 mem: location 1393 is 1159
9999 mem: location 1394 is 1
9999 mem: location 1395 is 5
9999 mem: location 1396 is 1159
9999 mem: location 1397 is 1447
9999 mem: location 1398 is 1183
9999 mem: location 1399 is 1
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: location 1366 is 1451
9999 mem: skipping refcount at 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 1 in location 1453
9999 mem: storing 2 in location 1454
9999 mem: storing 1159 in location 1455
9999 mem: storing 1 in location 1456
9999 mem: storing 5 in location 1457
9999 mem: storing 1159 in location 1458
9999 mem: storing 1447 in location 1459
9999 mem: storing 1183 in location 1460
9999 mem: storing 1 in location 1461
 105 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 454
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1346 is 1008
9999 mem: location 1347 is 1140
9999 mem: location 1352 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 44 -> 45
9999 mem: decrementing refcount of 1140: 15 -> 14
9999 mem: storing 1140 in location 1279
9999 mem: incrementing refcount of 1140: 14 -> 15
9999 mem: storing 0 in location 1292
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1292 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1280
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1279 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 5
9999 mem: storing 5 in location 1281
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1277 is 1008
9999 mem: location 1280 is 1
9999 mem: location 1281 is 5
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1156
9999 mem: incrementing refcount of 1008: 45 -> 46
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1157
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1158
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1156 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1157 is 1
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1158 is 5
9999 mem: location 1156 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1156 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1277
9999 mem: incrementing refcount of 1008: 45 -> 46
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1278 is 1271
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1293
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1271 in location 1296
9999 mem: incrementing refcount of 1271: 5 -> 6
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1296 is 1271
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 4
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1272
9998 run: its type is "number"
9999 mem: location 1272 is 4
9999 mem: storing 4 in location 1297
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9999 mem: location 1272 is 4
9999 mem: location 1273 is 1253
9999 mem: location 1296 is 1271
9999 mem: skipping refcount at 1271
9998 run: address to copy is 1273
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1273 is 1253
9999 mem: storing 1253 in location 1298
9999 mem: incrementing refcount of 1253: 5 -> 6
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1298 is 1253
9999 mem: skipping refcount at 1253
9999 mem: storing 4 in location 1299
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1297 is 4
9999 mem: location 1299 is 4
9999 mem: storing 1 in location 1300
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1300 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1174
9999 mem: storing 1174 in location 1301
9999 mem: incrementing refcount of 1174: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1301 is 1174
9999 mem: skipping refcount at 1174
9999 mem: location 1175 is 0
9999 mem: location 1176 is 0
9999 mem: location 1177 is 0
9999 mem: location 1178 is 0
9999 mem: location 1296 is 1271
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1271
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
9999 mem: decrementing refcount of 1271: 6 -> 5
9999 mem: storing 1271 in location 1278
9999 mem: incrementing refcount of 1271: 5 -> 6
9999 mem: storing 1 in location 1286
9999 mem: storing 1 in location 1287
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1287 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1277 is 1008
9999 mem: location 1278 is 1271
9999 mem: location 1279 is 1140
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: ("address" "shared" "array" "character")} <- editor-contents {2: ("address" "shared" "editor-data")}
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1003
9999 mem: incrementing refcount of 1140: 15 -> 16
 104 run: {buf: ("address" "shared" "buffer")} <- new-buffer {80: "literal"}
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 105 run: {capacity: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 80 in location 1156
 105 run: {result: ("address" "shared" "buffer")} <- new {buffer: "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1474
9999 mem: storing 1474 in location 1157
9999 mem: incrementing refcount of 1474: 0 -> 1
 105 run: {result: ("address" "shared" "buffer"), "lookup": ()} <- put {result: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}, {0: "literal"}
9999 mem: location 1157 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1157 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1475
9999 mem: storing 0 in location 1475
 105 run: {data: ("address" "shared" "array" "character")} <- new {character: "type"}, {capacity: "number"}
9999 mem: location 1156 is 80
9999 mem: array size is 80
9999 mem: allocating size 82
9999 mem: new alloc: 1477
9999 mem: storing 80 in location 1478
9999 mem: storing 1477 in location 1158
9999 mem: incrementing refcount of 1477: 0 -> 1
 105 run: {result: ("address" "shared" "buffer"), "lookup": ()} <- put {result: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}, {data: ("address" "shared" "array" "character")}
9999 mem: location 1157 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1158 is 1477
9999 mem: location 1157 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1476
9999 mem: storing 1477 in location 1476
 105 run: return {result: ("address" "shared" "buffer")}
9999 mem: location 1157 is 1474
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1474
9999 mem: storing 1474 in location 1004
9999 mem: incrementing refcount of 1474: 1 -> 2
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1003 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1470
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 5
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1463
9999 mem: location 1152 is 0
9999 mem: location 1003 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1159
9999 mem: storing 1159 in location 1005
9999 mem: incrementing refcount of 1159: 17 -> 18
 104 run: assert {curr: ("address" "shared" "duplex-list" "character")}, {"editor without data is illegal; must have at least a sentinel": "literal-string"}
9999 mem: location 1005 is 1159
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1559
9999 mem: storing 3 in location 1560
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1562
9999 mem: incrementing refcount of 1159: 18 -> 19
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1562 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1562 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1170
9999 mem: location 1162 is 0
9999 mem: location 1562 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1170
9999 mem: storing 1170 in location 1563
9999 mem: incrementing refcount of 1170: 12 -> 13
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1563 is 1170
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1170
9999 mem: decrementing refcount of 1159: 19 -> 18
9999 mem: storing 1170 in location 1005
9999 mem: incrementing refcount of 1170: 13 -> 14
 104 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1005 is 1170
9998 run: jumping to instruction 8
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1005 is 1170
9998 run: jump-unless fell through
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1005 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1171
9998 run: its type is "character"
9999 mem: location 1171 is 97
9999 mem: storing 97 in location 1006
 104 run: {buf: ("address" "shared" "buffer")} <- append_2 {buf: ("address" "shared" "buffer")}, {c: "character"}
9999 mem: location 1004 is 1474
9999 mem: location 1006 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1119
9999 mem: incrementing refcount of 1474: 2 -> 3
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1120
 105 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 0
9999 mem: storing 0 in location 1121
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1120 is 97
9999 mem: storing 0 in location 1122
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 13
 105 run: {full?: "boolean"} <- buffer-full? {in: ("address" "shared" "buffer")}
9999 mem: location 1119 is 1474
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1564
9999 mem: storing 6 in location 1565
 106 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1567
9999 mem: incrementing refcount of 1474: 3 -> 4
 106 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 0
9999 mem: storing 0 in location 1568
 106 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1569
9999 mem: incrementing refcount of 1477: 1 -> 2
 106 run: {capacity: "number"} <- length {s: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1569 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 80 in location 1570
 106 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1568 is 0
9999 mem: location 1570 is 80
9999 mem: storing 0 in location 1571
 106 run: reply {result: "boolean"}
9999 mem: location 1571 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1124
 105 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jumping to instruction 18
 105 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1125
9999 mem: incrementing refcount of 1477: 2 -> 3
 105 run: {s: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {s: ("address" "shared" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 1125 is 1477
9999 mem: skipping refcount at 1477
9999 mem: location 1121 is 0
9998 run: address to copy to is 1479
9999 mem: location 1120 is 97
9999 mem: storing 97 in location 1479
 105 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 105 run: {in: ("address" "shared" "buffer"), "lookup": ()} <- put {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1477
9999 mem: location 1121 is 1
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1475
9999 mem: storing 1 in location 1475
 105 run: reply {in: ("address" "shared" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1474
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1474
9999 mem: decrementing refcount of 1474: 4 -> 3
9999 mem: storing 1474 in location 1004
9999 mem: incrementing refcount of 1474: 3 -> 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1170
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1559
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1170 in location 1562
9999 mem: incrementing refcount of 1170: 14 -> 15
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1562 is 1170
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1562 is 1170
9999 mem: skipping refcount at 1170
9999 mem: location 1171 is 97
9999 mem: location 1172 is 1179
9999 mem: location 1173 is 1159
9999 mem: location 1562 is 1170
9999 mem: skipping refcount at 1170
9998 run: address to copy is 1172
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1172 is 1179
9999 mem: storing 1179 in location 1563
9999 mem: incrementing refcount of 1179: 18 -> 19
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1563 is 1179
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1179
9999 mem: decrementing refcount of 1170: 15 -> 14
9999 mem: storing 1179 in location 1005
9999 mem: incrementing refcount of 1179: 19 -> 20
 104 run: jump {: "offset"}
9998 run: jumping to instruction 9
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1005 is 1179
9998 run: jump-unless fell through
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1447
9999 mem: location 1182 is 1170
9999 mem: location 1005 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1180
9998 run: its type is "character"
9999 mem: location 1180 is 98
9999 mem: storing 98 in location 1006
 104 run: {buf: ("address" "shared" "buffer")} <- append_2 {buf: ("address" "shared" "buffer")}, {c: "character"}
9999 mem: location 1004 is 1474
9999 mem: location 1006 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1119
9999 mem: incrementing refcount of 1474: 4 -> 5
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1120
 105 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 1
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 1
9999 mem: storing 1 in location 1121
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1120 is 98
9999 mem: storing 0 in location 1122
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 13
 105 run: {full?: "boolean"} <- buffer-full? {in: ("address" "shared" "buffer")}
9999 mem: location 1119 is 1474
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1564
 106 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1567
9999 mem: incrementing refcount of 1474: 5 -> 6
 106 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 1
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 1
9999 mem: storing 1 in location 1568
 106 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 1
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1569
9999 mem: incrementing refcount of 1477: 3 -> 4
 106 run: {capacity: "number"} <- length {s: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1569 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 80 in location 1570
 106 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1568 is 1
9999 mem: location 1570 is 80
9999 mem: storing 0 in location 1571
 106 run: reply {result: "boolean"}
9999 mem: location 1571 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1124
 105 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jumping to instruction 18
 105 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 1
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1125
9999 mem: incrementing refcount of 1477: 4 -> 5
 105 run: {s: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {s: ("address" "shared" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 1125 is 1477
9999 mem: skipping refcount at 1477
9999 mem: location 1121 is 1
9998 run: address to copy to is 1480
9999 mem: location 1120 is 98
9999 mem: storing 98 in location 1480
 105 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 1121 is 1
9999 mem: storing 2 in location 1121
 105 run: {in: ("address" "shared" "buffer"), "lookup": ()} <- put {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 1
9999 mem: location 1476 is 1477
9999 mem: location 1121 is 2
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1475
9999 mem: storing 2 in location 1475
 105 run: reply {in: ("address" "shared" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1474
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1474
9999 mem: decrementing refcount of 1474: 6 -> 5
9999 mem: storing 1474 in location 1004
9999 mem: incrementing refcount of 1474: 5 -> 6
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1179
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1559
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1179 in location 1562
9999 mem: incrementing refcount of 1179: 20 -> 21
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1562 is 1179
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1562 is 1179
9999 mem: skipping refcount at 1179
9999 mem: location 1180 is 98
9999 mem: location 1181 is 1447
9999 mem: location 1182 is 1170
9999 mem: location 1562 is 1179
9999 mem: skipping refcount at 1179
9998 run: address to copy is 1181
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1181 is 1447
9999 mem: storing 1447 in location 1563
9999 mem: incrementing refcount of 1447: 11 -> 12
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1563 is 1447
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1447
9999 mem: decrementing refcount of 1179: 21 -> 20
9999 mem: storing 1447 in location 1005
9999 mem: incrementing refcount of 1447: 12 -> 13
 104 run: jump {: "offset"}
9998 run: jumping to instruction 9
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1005 is 1447
9998 run: jump-unless fell through
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1466
9999 mem: location 1450 is 1179
9999 mem: location 1005 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1448
9998 run: its type is "character"
9999 mem: location 1448 is 100
9999 mem: storing 100 in location 1006
 104 run: {buf: ("address" "shared" "buffer")} <- append_2 {buf: ("address" "shared" "buffer")}, {c: "character"}
9999 mem: location 1004 is 1474
9999 mem: location 1006 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1119
9999 mem: incrementing refcount of 1474: 6 -> 7
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1120
 105 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 2
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 2
9999 mem: storing 2 in location 1121
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1120 is 100
9999 mem: storing 0 in location 1122
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 13
 105 run: {full?: "boolean"} <- buffer-full? {in: ("address" "shared" "buffer")}
9999 mem: location 1119 is 1474
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1564
 106 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1567
9999 mem: incrementing refcount of 1474: 7 -> 8
 106 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 2
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 2
9999 mem: storing 2 in location 1568
 106 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 2
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1569
9999 mem: incrementing refcount of 1477: 5 -> 6
 106 run: {capacity: "number"} <- length {s: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1569 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 80 in location 1570
 106 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1568 is 2
9999 mem: location 1570 is 80
9999 mem: storing 0 in location 1571
 106 run: reply {result: "boolean"}
9999 mem: location 1571 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1124
 105 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jumping to instruction 18
 105 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 2
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1125
9999 mem: incrementing refcount of 1477: 6 -> 7
 105 run: {s: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {s: ("address" "shared" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 1125 is 1477
9999 mem: skipping refcount at 1477
9999 mem: location 1121 is 2
9998 run: address to copy to is 1481
9999 mem: location 1120 is 100
9999 mem: storing 100 in location 1481
 105 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 1121 is 2
9999 mem: storing 3 in location 1121
 105 run: {in: ("address" "shared" "buffer"), "lookup": ()} <- put {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 2
9999 mem: location 1476 is 1477
9999 mem: location 1121 is 3
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1475
9999 mem: storing 3 in location 1475
 105 run: reply {in: ("address" "shared" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1474
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1474
9999 mem: decrementing refcount of 1474: 8 -> 7
9999 mem: storing 1474 in location 1004
9999 mem: incrementing refcount of 1474: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1447
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1559
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1447 in location 1562
9999 mem: incrementing refcount of 1447: 13 -> 14
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1562 is 1447
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1562 is 1447
9999 mem: skipping refcount at 1447
9999 mem: location 1448 is 100
9999 mem: location 1449 is 1466
9999 mem: location 1450 is 1179
9999 mem: location 1562 is 1447
9999 mem: skipping refcount at 1447
9998 run: address to copy is 1449
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1449 is 1466
9999 mem: storing 1466 in location 1563
9999 mem: incrementing refcount of 1466: 10 -> 11
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1563 is 1466
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1466
9999 mem: decrementing refcount of 1447: 14 -> 13
9999 mem: storing 1466 in location 1005
9999 mem: incrementing refcount of 1466: 11 -> 12
 104 run: jump {: "offset"}
9998 run: jumping to instruction 9
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1005 is 1466
9998 run: jump-unless fell through
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1470
9999 mem: location 1469 is 1447
9999 mem: location 1005 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1467
9998 run: its type is "character"
9999 mem: location 1467 is 101
9999 mem: storing 101 in location 1006
 104 run: {buf: ("address" "shared" "buffer")} <- append_2 {buf: ("address" "shared" "buffer")}, {c: "character"}
9999 mem: location 1004 is 1474
9999 mem: location 1006 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1119
9999 mem: incrementing refcount of 1474: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1120
 105 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 3
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 3
9999 mem: storing 3 in location 1121
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1120 is 101
9999 mem: storing 0 in location 1122
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 13
 105 run: {full?: "boolean"} <- buffer-full? {in: ("address" "shared" "buffer")}
9999 mem: location 1119 is 1474
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1564
 106 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1567
9999 mem: incrementing refcount of 1474: 9 -> 10
 106 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 3
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 3
9999 mem: storing 3 in location 1568
 106 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 3
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1569
9999 mem: incrementing refcount of 1477: 7 -> 8
 106 run: {capacity: "number"} <- length {s: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1569 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 80 in location 1570
 106 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1568 is 3
9999 mem: location 1570 is 80
9999 mem: storing 0 in location 1571
 106 run: reply {result: "boolean"}
9999 mem: location 1571 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1124
 105 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jumping to instruction 18
 105 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 3
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1125
9999 mem: incrementing refcount of 1477: 8 -> 9
 105 run: {s: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {s: ("address" "shared" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 1125 is 1477
9999 mem: skipping refcount at 1477
9999 mem: location 1121 is 3
9998 run: address to copy to is 1482
9999 mem: location 1120 is 101
9999 mem: storing 101 in location 1482
 105 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 1121 is 3
9999 mem: storing 4 in location 1121
 105 run: {in: ("address" "shared" "buffer"), "lookup": ()} <- put {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 3
9999 mem: location 1476 is 1477
9999 mem: location 1121 is 4
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1475
9999 mem: storing 4 in location 1475
 105 run: reply {in: ("address" "shared" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1474
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1474
9999 mem: decrementing refcount of 1474: 10 -> 9
9999 mem: storing 1474 in location 1004
9999 mem: incrementing refcount of 1474: 9 -> 10
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1466
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1559
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1466 in location 1562
9999 mem: incrementing refcount of 1466: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1562 is 1466
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1562 is 1466
9999 mem: skipping refcount at 1466
9999 mem: location 1467 is 101
9999 mem: location 1468 is 1470
9999 mem: location 1469 is 1447
9999 mem: location 1562 is 1466
9999 mem: skipping refcount at 1466
9998 run: address to copy is 1468
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1468 is 1470
9999 mem: storing 1470 in location 1563
9999 mem: incrementing refcount of 1470: 7 -> 8
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1563 is 1470
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1470
9999 mem: decrementing refcount of 1466: 13 -> 12
9999 mem: storing 1470 in location 1005
9999 mem: incrementing refcount of 1470: 8 -> 9
 104 run: jump {: "offset"}
9998 run: jumping to instruction 9
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1005 is 1470
9998 run: jump-unless fell through
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 1183
9999 mem: location 1473 is 1466
9999 mem: location 1005 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy is 1471
9998 run: its type is "character"
9999 mem: location 1471 is 102
9999 mem: storing 102 in location 1006
 104 run: {buf: ("address" "shared" "buffer")} <- append_2 {buf: ("address" "shared" "buffer")}, {c: "character"}
9999 mem: location 1004 is 1474
9999 mem: location 1006 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1119
9999 mem: incrementing refcount of 1474: 10 -> 11
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1120
 105 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 4
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 4
9999 mem: storing 4 in location 1121
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1120 is 102
9999 mem: storing 0 in location 1122
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 13
 105 run: {full?: "boolean"} <- buffer-full? {in: ("address" "shared" "buffer")}
9999 mem: location 1119 is 1474
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1564
 106 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1567
9999 mem: incrementing refcount of 1474: 11 -> 12
 106 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 4
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 4
9999 mem: storing 4 in location 1568
 106 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 4
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1569
9999 mem: incrementing refcount of 1477: 9 -> 10
 106 run: {capacity: "number"} <- length {s: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1569 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 80 in location 1570
 106 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1568 is 4
9999 mem: location 1570 is 80
9999 mem: storing 0 in location 1571
 106 run: reply {result: "boolean"}
9999 mem: location 1571 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1124
 105 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jumping to instruction 18
 105 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 4
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1125
9999 mem: incrementing refcount of 1477: 10 -> 11
 105 run: {s: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {s: ("address" "shared" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 1125 is 1477
9999 mem: skipping refcount at 1477
9999 mem: location 1121 is 4
9998 run: address to copy to is 1483
9999 mem: location 1120 is 102
9999 mem: storing 102 in location 1483
 105 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 1121 is 4
9999 mem: storing 5 in location 1121
 105 run: {in: ("address" "shared" "buffer"), "lookup": ()} <- put {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 4
9999 mem: location 1476 is 1477
9999 mem: location 1121 is 5
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1475
9999 mem: storing 5 in location 1475
 105 run: reply {in: ("address" "shared" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1474
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1474
9999 mem: decrementing refcount of 1474: 12 -> 11
9999 mem: storing 1474 in location 1004
9999 mem: incrementing refcount of 1474: 11 -> 12
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1470
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1559
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1470 in location 1562
9999 mem: incrementing refcount of 1470: 9 -> 10
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1562 is 1470
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1562 is 1470
9999 mem: skipping refcount at 1470
9999 mem: location 1471 is 102
9999 mem: location 1472 is 1183
9999 mem: location 1473 is 1466
9999 mem: location 1562 is 1470
9999 mem: skipping refcount at 1470
9998 run: address to copy is 1472
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1472 is 1183
9999 mem: storing 1183 in location 1563
9999 mem: incrementing refcount of 1183: 32 -> 33
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1563 is 1183
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1183
9999 mem: decrementing refcount of 1470: 10 -> 9
9999 mem: storing 1183 in location 1005
9999 mem: incrementing refcount of 1183: 33 -> 34
 104 run: jump {: "offset"}
9998 run: jumping to instruction 9
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1005 is 1183
9998 run: jump-unless fell through
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1005 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1470
9999 mem: location 1005 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1184
9998 run: its type is "character"
9999 mem: location 1184 is 99
9999 mem: storing 99 in location 1006
 104 run: {buf: ("address" "shared" "buffer")} <- append_2 {buf: ("address" "shared" "buffer")}, {c: "character"}
9999 mem: location 1004 is 1474
9999 mem: location 1006 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1119
9999 mem: incrementing refcount of 1474: 12 -> 13
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1120
 105 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 5
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 5
9999 mem: storing 5 in location 1121
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1120 is 99
9999 mem: storing 0 in location 1122
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jumping to instruction 13
 105 run: {full?: "boolean"} <- buffer-full? {in: ("address" "shared" "buffer")}
9999 mem: location 1119 is 1474
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1564
 106 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1567
9999 mem: incrementing refcount of 1474: 13 -> 14
 106 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 5
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 5
9999 mem: storing 5 in location 1568
 106 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 5
9999 mem: location 1476 is 1477
9999 mem: location 1567 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1569
9999 mem: incrementing refcount of 1477: 11 -> 12
 106 run: {capacity: "number"} <- length {s: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1569 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 80 in location 1570
 106 run: {result: "boolean"} <- greater-or-equal {len: "number"}, {capacity: "number"}
9999 mem: location 1568 is 5
9999 mem: location 1570 is 80
9999 mem: storing 0 in location 1571
 106 run: reply {result: "boolean"}
9999 mem: location 1571 is 0
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1124
 105 run: jump-unless {full?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jumping to instruction 18
 105 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 5
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1125
9999 mem: incrementing refcount of 1477: 12 -> 13
 105 run: {s: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {s: ("address" "shared" "array" "character"), "lookup": ()}, {len: "number"}, {c: "character"}
9999 mem: location 1125 is 1477
9999 mem: skipping refcount at 1477
9999 mem: location 1121 is 5
9998 run: address to copy to is 1484
9999 mem: location 1120 is 99
9999 mem: storing 99 in location 1484
 105 run: {len: "number"} <- add {len: "number"}, {1: "literal"}
9999 mem: location 1121 is 5
9999 mem: storing 6 in location 1121
 105 run: {in: ("address" "shared" "buffer"), "lookup": ()} <- put {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}, {len: "number"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 5
9999 mem: location 1476 is 1477
9999 mem: location 1121 is 6
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy to is 1475
9999 mem: storing 6 in location 1475
 105 run: reply {in: ("address" "shared" "buffer"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1474
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1474
9999 mem: decrementing refcount of 1474: 14 -> 13
9999 mem: storing 1474 in location 1004
9999 mem: incrementing refcount of 1474: 13 -> 14
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1183
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1559
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1183 in location 1562
9999 mem: incrementing refcount of 1183: 34 -> 35
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1562 is 1183
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1562 is 1183
9999 mem: skipping refcount at 1183
9999 mem: location 1184 is 99
9999 mem: location 1185 is 0
9999 mem: location 1186 is 1470
9999 mem: location 1562 is 1183
9999 mem: skipping refcount at 1183
9998 run: address to copy is 1185
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1185 is 0
9999 mem: storing 0 in location 1563
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1563 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1183: 35 -> 34
9999 mem: storing 0 in location 1005
 104 run: jump {: "offset"}
9998 run: jumping to instruction 9
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1005 is 0
9998 run: jumping to instruction 14
 104 run: {result: ("address" "shared" "array" "character")} <- buffer-to-array {buf: ("address" "shared" "buffer")}
9999 mem: location 1004 is 1474
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 105 run: {in: ("address" "shared" "buffer")} <- next-ingredient-without-typechecking 
9999 mem: storing 1474 in location 1119
9999 mem: incrementing refcount of 1474: 14 -> 15
 105 run: jump-if {in: ("address" "shared" "buffer")}, {: "offset"}
9999 mem: location 1119 is 1474
9998 run: jumping to instruction 5
 105 run: {len: "number"} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {length: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 6
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1475
9998 run: its type is "number"
9999 mem: location 1475 is 6
9999 mem: storing 6 in location 1120
 105 run: {s: ("address" "shared" "array" "character")} <- get {in: ("address" "shared" "buffer"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9999 mem: location 1475 is 6
9999 mem: location 1476 is 1477
9999 mem: location 1119 is 1474
9999 mem: skipping refcount at 1474
9998 run: address to copy is 1476
9998 run: its type is ("address" "shared" "array" "character")
9999 mem: location 1476 is 1477
9999 mem: storing 1477 in location 1121
9999 mem: incrementing refcount of 1477: 13 -> 14
 105 run: {result: ("address" "shared" "array" "character")} <- new {character: "type"}, {len: "number"}
9999 mem: location 1120 is 6
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1564
9999 mem: storing 1564 in location 1122
9999 mem: incrementing refcount of 1564: 0 -> 1
 105 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1123
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 1123 is 0
9999 mem: location 1120 is 6
9999 mem: storing 0 in location 1124
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {src: "character"} <- index {s: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1121 is 1477
9999 mem: skipping refcount at 1477
9998 run: base address is 1478
9999 mem: location 1123 is 0
9998 run: address to copy is 1479
9998 run: its type is character
9999 mem: location 1479 is 97
9999 mem: storing 97 in location 1125
 105 run: {result: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {result: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}, {src: "character"}
9999 mem: location 1122 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1123 is 0
9998 run: address to copy to is 1566
9999 mem: location 1125 is 97
9999 mem: storing 97 in location 1566
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1123 is 0
9999 mem: storing 1 in location 1123
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 1123 is 1
9999 mem: location 1120 is 6
9999 mem: storing 0 in location 1124
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {src: "character"} <- index {s: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1121 is 1477
9999 mem: skipping refcount at 1477
9998 run: base address is 1478
9999 mem: location 1123 is 1
9998 run: address to copy is 1480
9998 run: its type is character
9999 mem: location 1480 is 98
9999 mem: storing 98 in location 1125
 105 run: {result: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {result: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}, {src: "character"}
9999 mem: location 1122 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1123 is 1
9998 run: address to copy to is 1567
9999 mem: location 1125 is 98
9999 mem: storing 98 in location 1567
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 1123 is 2
9999 mem: location 1120 is 6
9999 mem: storing 0 in location 1124
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {src: "character"} <- index {s: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1121 is 1477
9999 mem: skipping refcount at 1477
9998 run: base address is 1478
9999 mem: location 1123 is 2
9998 run: address to copy is 1481
9998 run: its type is character
9999 mem: location 1481 is 100
9999 mem: storing 100 in location 1125
 105 run: {result: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {result: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}, {src: "character"}
9999 mem: location 1122 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1123 is 2
9998 run: address to copy to is 1568
9999 mem: location 1125 is 100
9999 mem: storing 100 in location 1568
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 1123 is 3
9999 mem: location 1120 is 6
9999 mem: storing 0 in location 1124
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {src: "character"} <- index {s: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1121 is 1477
9999 mem: skipping refcount at 1477
9998 run: base address is 1478
9999 mem: location 1123 is 3
9998 run: address to copy is 1482
9998 run: its type is character
9999 mem: location 1482 is 101
9999 mem: storing 101 in location 1125
 105 run: {result: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {result: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}, {src: "character"}
9999 mem: location 1122 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1123 is 3
9998 run: address to copy to is 1569
9999 mem: location 1125 is 101
9999 mem: storing 101 in location 1569
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1123 is 3
9999 mem: storing 4 in location 1123
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 1123 is 4
9999 mem: location 1120 is 6
9999 mem: storing 0 in location 1124
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {src: "character"} <- index {s: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1121 is 1477
9999 mem: skipping refcount at 1477
9998 run: base address is 1478
9999 mem: location 1123 is 4
9998 run: address to copy is 1483
9998 run: its type is character
9999 mem: location 1483 is 102
9999 mem: storing 102 in location 1125
 105 run: {result: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {result: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}, {src: "character"}
9999 mem: location 1122 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1123 is 4
9998 run: address to copy to is 1570
9999 mem: location 1125 is 102
9999 mem: storing 102 in location 1570
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1123 is 4
9999 mem: storing 5 in location 1123
9990 schedule: buffer-to-array/editor-contents/run_1001/scenario_editor-provides-edited-contents
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 1123 is 5
9999 mem: location 1120 is 6
9999 mem: storing 0 in location 1124
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 105 run: {src: "character"} <- index {s: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}
9999 mem: location 1121 is 1477
9999 mem: skipping refcount at 1477
9998 run: base address is 1478
9999 mem: location 1123 is 5
9998 run: address to copy is 1484
9998 run: its type is character
9999 mem: location 1484 is 99
9999 mem: storing 99 in location 1125
 105 run: {result: ("address" "shared" "array" "character"), "lookup": ()} <- put-index {result: ("address" "shared" "array" "character"), "lookup": ()}, {i: "number"}, {src: "character"}
9999 mem: location 1122 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1123 is 5
9998 run: address to copy to is 1571
9999 mem: location 1125 is 99
9999 mem: storing 99 in location 1571
 105 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1123 is 5
9999 mem: storing 6 in location 1123
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {len: "number"}
9999 mem: location 1123 is 6
9999 mem: location 1120 is 6
9999 mem: storing 1 in location 1124
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 1
9998 run: jumping to instruction 17
 105 run: reply {result: ("address" "shared" "array" "character")}
9999 mem: location 1122 is 1564
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1564
9999 mem: storing 1564 in location 1007
9999 mem: incrementing refcount of 1564: 1 -> 2
 104 run: reply {result: ("address" "shared" "array" "character")}
9999 mem: location 1007 is 1564
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1564
9999 mem: storing 1564 in location 3
9999 mem: incrementing refcount of 1564: 2 -> 3
 103 run: {4: ("array" "character")} <- copy {3: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 3 is 1564
9999 mem: skipping refcount at 1564
9999 mem: location 1565 is 6
9999 mem: location 1566 is 97
9999 mem: location 1567 is 98
9999 mem: location 1568 is 100
9999 mem: location 1569 is 101
9999 mem: location 1570 is 102
9999 mem: location 1571 is 99
9999 mem: storing 6 in location 4
9999 mem: storing 97 in location 5
9999 mem: storing 98 in location 6
9999 mem: storing 100 in location 7
9999 mem: storing 101 in location 8
9999 mem: storing 102 in location 9
9999 mem: storing 99 in location 10
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    4:array:character <- [abdefc]\n  ": "literal-string"}
9999 run: checking string length at 4
9999 run: checking location 5
9999 run: checking location 6
9999 run: checking location 7
9999 run: checking location 8
9999 run: checking location 9
9999 run: checking location 10
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
