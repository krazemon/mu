 102 run: assume-console {"\n    left-click 2, 0\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {down-arrow: ()}
9992 load: after rewriting: press {down-arrow: ()}
9999 mem: storing 'left-click' event starting at 1538
9999 mem: storing 'press' event starting at 1542
9999 mem: storing console in 1546
9999 mem: storing console data in 1548
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n    3:number <- get *2:address:editor-data, cursor-row:offset\n    4:number <- get *2:address:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1003
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1003 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1003
9991 transform: --- rewrite 'stash' instructions in recipe run_1003
9991 transform: --- fill in reply ingredients from header for recipe run_1003
9991 transform: --- deduce types for recipe run_1003
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1003
9991 transform: --- collect surrounding spaces for recipe run_1003
9991 transform: --- transform names for recipe run_1003
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1003
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1003
9991 transform: --- transform braces for recipe run_1003
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1003
9991 transform: --- type-check 'call' instructions inside recipe run_1003
9991 transform: --- type-check calls inside recipe run_1003
9991 transform: --- convert 'new' to 'allocate' for recipe run_1003
9991 transform: --- check types of reply instructions in recipe run_1003
9991 transform: --- type-check merge instructions in recipe run_1003
9991 transform: --- checking reply instructions against header for run_1003
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1546
9999 mem: location 2 is 1143
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
9999 mem: new alloc from free list: 1304
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 152 -> 153
9999 mem: storing 1008 in location 1307
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1546: 0 -> 1
9999 mem: storing 1546 in location 1308
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 19 -> 20
9999 mem: storing 1143 in location 1309
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1310
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1311
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1307 is 1008
9999 mem: location 1310 is 1
9999 mem: location 1311 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 153 -> 154
9999 mem: storing 1008 in location 1159
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1160
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1161
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1159 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 3
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1159 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1307
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1308 is 1546
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1268
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1546: 1 -> 2
9999 mem: storing 1546 in location 1271
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1271 is 1546
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 0
9999 mem: location 1548 is 1536
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy is 1547
9998 run: its type is "number"
9999 mem: location 1547 is 0
9999 mem: storing 0 in location 1272
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 0
9999 mem: location 1548 is 1536
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy is 1548
9998 run: its type is ("address" "array" "event")
9999 mem: location 1548 is 1536
9999 mem: incrementing refcount of 1536: 1 -> 2
9999 mem: storing 1536 in location 1273
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1273 is 1536
9999 mem: skipping refcount at 1536
9999 mem: storing 2 in location 1274
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1272 is 0
9999 mem: location 1274 is 2
9999 mem: storing 0 in location 1275
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1273 is 1536
9999 mem: skipping refcount at 1536
9998 run: base address is 1537
9999 mem: location 1272 is 0
9998 run: address to copy is 1538
9998 run: its type is event
9999 mem: location 1538 is 2
9999 mem: location 1539 is 65513
9999 mem: location 1540 is 2
9999 mem: location 1541 is 0
9999 mem: storing 2 in location 1277
9999 mem: storing 65513 in location 1278
9999 mem: storing 2 in location 1279
9999 mem: storing 0 in location 1280
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1272 is 0
9999 mem: storing 1 in location 1272
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 0
9999 mem: location 1548 is 1536
9999 mem: location 1272 is 1
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy to is 1547
9999 mem: storing 1 in location 1547
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1277 is 2
9999 mem: location 1278 is 65513
9999 mem: location 1279 is 2
9999 mem: location 1280 is 0
9999 mem: location 1271 is 1546
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 0]
9998 run: result 1 is 1546
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1312
9999 mem: storing 65513 in location 1313
9999 mem: storing 2 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1546 in location 1308
9999 mem: storing 1 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1312 is 2
9999 mem: location 1313 is 65513
9999 mem: location 1314 is 2
9999 mem: location 1315 is 0
9999 mem: storing 1 in location 1321
9999 mem: storing 65513 in location 1318
9999 mem: storing 2 in location 1319
9999 mem: storing 0 in location 1320
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 1
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {t: "touch-event"}
9999 mem: location 1307 is 1008
9999 mem: location 1309 is 1143
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 2
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1323
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 154 -> 155
9999 mem: storing 1008 in location 1326
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 20 -> 21
9999 mem: storing 1143 in location 1327
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1328
9999 mem: storing 2 in location 1329
9999 mem: storing 0 in location 1330
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1327 is 1143
9998 run: jumping to instruction 7
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1328 is 65513
9999 mem: location 1329 is 2
9999 mem: location 1330 is 0
9998 run: address to copy is 1329
9998 run: its type is "number"
9999 mem: location 1329 is 2
9999 mem: storing 2 in location 1331
 105 run: jump-if {click-row: "number"}, {: "offset"}
9999 mem: location 1331 is 2
9998 run: jumping to instruction 12
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1328 is 65513
9999 mem: location 1329 is 2
9999 mem: location 1330 is 0
9998 run: address to copy is 1330
9998 run: its type is "number"
9999 mem: location 1330 is 0
9999 mem: storing 0 in location 1332
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1333
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1332 is 0
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1334
 105 run: jump-unless {too-far-left?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 19
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1335
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1332 is 0
9999 mem: location 1335 is 9
9999 mem: storing 0 in location 1336
 105 run: jump-unless {too-far-right?: "boolean"}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 25
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1337
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1338
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1145 is 1190
9999 mem: incrementing refcount of 1190: 33 -> 34
9999 mem: storing 1190 in location 1339
 105 run: {editor: ("address" "editor-data")} <- snap-cursor {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1326 is 1008
9999 mem: location 1327 is 1143
9999 mem: location 1331 is 2
9999 mem: location 1332 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1202
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 155 -> 156
9999 mem: storing 1008 in location 1205
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 21 -> 22
9999 mem: storing 1143 in location 1206
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1207
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1208
 106 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1206 is 1143
9998 run: jumping to instruction 8
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1209
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1210
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1205 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1549
9999 mem: storing 0 in location 1549
9999 mem: storing 0 in location 1550
9999 mem: storing 0 in location 1551
9999 mem: storing 0 in location 1552
9999 mem: storing 0 in location 1553
9999 mem: storing 3 in location 1550
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 156 -> 157
9999 mem: storing 1008 in location 1552
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1552 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1552 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1552 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1553
 107 run: return {height: "number"}
9999 mem: location 1553 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1211
 106 run: {curr: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1145 is 1190
9999 mem: incrementing refcount of 1190: 34 -> 35
9999 mem: storing 1190 in location 1212
 106 run: {prev: ("address" "duplex-list" "character")} <- copy {curr: ("address" "duplex-list" "character")}
9999 mem: location 1212 is 1190
9999 mem: incrementing refcount of 1190: 35 -> 36
9999 mem: storing 1190 in location 1213
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1212 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1190: 36 -> 37
9999 mem: storing 1190 in location 1552
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1190
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 10
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1552 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1192 is 1194
9999 mem: incrementing refcount of 1194: 24 -> 25
9999 mem: storing 1194 in location 1553
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1190: 37 -> 36
9999 mem: incrementing refcount of 1194: 25 -> 26
9999 mem: storing 1194 in location 1212
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1214
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1209 is 0
9999 mem: storing 0 in location 1215
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {target-row: "number"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1207 is 2
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1151
9999 mem: storing 2 in location 1151
 106 run: {cursor-row: "number"} <- copy {target-row: "number"}
9999 mem: location 1207 is 2
9999 mem: storing 2 in location 1216
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {target-column: "number"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 2
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1208 is 0
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1152
9999 mem: storing 0 in location 1152
 106 run: {cursor-column: "number"} <- copy {target-column: "number"}
9999 mem: location 1208 is 0
9999 mem: storing 0 in location 1217
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1147
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1147 is 1529
9999 mem: incrementing refcount of 1529: 9 -> 10
9999 mem: storing 1529 in location 1218
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1194
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 2
9999 mem: storing 0 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 100
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1212 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is "character"
9999 mem: location 1195 is 100
9999 mem: storing 100 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 100
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 0
9999 mem: location 1210 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1212 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1194: 26 -> 27
9999 mem: storing 1194 in location 1552
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1194
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 100
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1552 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: incrementing refcount of 1198: 29 -> 30
9999 mem: storing 1198 in location 1553
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 27 -> 26
9999 mem: incrementing refcount of 1198: 30 -> 31
9999 mem: storing 1198 in location 1212
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1213 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1190: 36 -> 37
9999 mem: storing 1190 in location 1552
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1190
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1190
9999 mem: skipping refcount at 1190
9999 mem: location 1191 is 10
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1186
9999 mem: location 1552 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1192
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1192 is 1194
9999 mem: incrementing refcount of 1194: 26 -> 27
9999 mem: storing 1194 in location 1553
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1190: 37 -> 36
9999 mem: incrementing refcount of 1194: 27 -> 28
9999 mem: storing 1194 in location 1213
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 0
9999 mem: storing 1 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1198
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 2
9999 mem: storing 0 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 101
9999 mem: location 1200 is 1529
9999 mem: location 1201 is 1194
9999 mem: location 1212 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is "character"
9999 mem: location 1199 is 101
9999 mem: storing 101 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 101
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 1
9999 mem: location 1210 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1212 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1198: 31 -> 32
9999 mem: storing 1198 in location 1552
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1198
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 101
9999 mem: location 1200 is 1529
9999 mem: location 1201 is 1194
9999 mem: location 1552 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1200 is 1529
9999 mem: incrementing refcount of 1529: 10 -> 11
9999 mem: storing 1529 in location 1553
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 1529
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1529
9999 mem: decrementing refcount of 1198: 32 -> 31
9999 mem: incrementing refcount of 1529: 11 -> 12
9999 mem: storing 1529 in location 1212
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1213 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1194: 28 -> 29
9999 mem: storing 1194 in location 1552
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1194
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1194
9999 mem: skipping refcount at 1194
9999 mem: location 1195 is 100
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1552 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1196
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1196 is 1198
9999 mem: incrementing refcount of 1198: 31 -> 32
9999 mem: storing 1198 in location 1553
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: decrementing refcount of 1194: 29 -> 28
9999 mem: incrementing refcount of 1198: 32 -> 33
9999 mem: storing 1198 in location 1213
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 1
9999 mem: storing 2 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 1529
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1211 is 5
9999 mem: storing 0 in location 1219
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1219 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 2
9999 mem: storing 0 in location 1220
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1220 is 0
9998 run: jumping to instruction 34
 106 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1212 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 0
9999 mem: location 1532 is 1198
9999 mem: location 1212 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1530
9998 run: its type is "character"
9999 mem: location 1530 is 48
9999 mem: storing 48 in location 1222
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1222 is 48
9999 mem: storing 0 in location 1223
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 0
9998 run: jumping to instruction 54
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1215 is 2
9999 mem: location 1210 is 9
9999 mem: storing 0 in location 1225
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jumping to instruction 61
 106 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1212 is 1529
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1529: 12 -> 13
9999 mem: storing 1529 in location 1552
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1529
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 0
9999 mem: location 1532 is 1198
9999 mem: location 1552 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1531
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1531 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1553
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1529: 13 -> 12
9999 mem: storing 0 in location 1212
 106 run: {prev: ("address" "duplex-list" "character")} <- next_2 {prev: ("address" "duplex-list" "character")}
9999 mem: location 1213 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1198: 33 -> 34
9999 mem: storing 1198 in location 1552
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1198
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 101
9999 mem: location 1200 is 1529
9999 mem: location 1201 is 1194
9999 mem: location 1552 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1200
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1200 is 1529
9999 mem: incrementing refcount of 1529: 12 -> 13
9999 mem: storing 1529 in location 1553
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 1529
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1529
9999 mem: decrementing refcount of 1198: 34 -> 33
9999 mem: incrementing refcount of 1529: 13 -> 14
9999 mem: storing 1529 in location 1213
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1215 is 2
9999 mem: storing 3 in location 1215
 106 run: jump {: "offset"}
9998 run: jumping to instruction 23
 106 run: jump-unless {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 66
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 2
9999 mem: storing 0 in location 1220
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: "number"}
9999 mem: location 1215 is 3
9999 mem: location 1217 is 0
9999 mem: storing 0 in location 1226
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1220 is 0
9999 mem: location 1226 is 0
9999 mem: storing 0 in location 1227
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: "number"}
9999 mem: location 1214 is 1
9999 mem: location 1216 is 2
9999 mem: storing 1 in location 1228
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1227 is 0
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1229 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: "number"} <- copy {row: "number"}
9999 mem: location 1214 is 1
9999 mem: storing 1 in location 1216
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}, {cursor-row: "number"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 2
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1216 is 1
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1151
9999 mem: storing 1 in location 1151
 106 run: {cursor-column: "number"} <- copy {column: "number"}
9999 mem: location 1215 is 3
9999 mem: storing 3 in location 1217
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 0
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1217 is 3
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1152
9999 mem: storing 3 in location 1152
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- copy {prev: ("address" "duplex-list" "character")}
9999 mem: location 1213 is 1529
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1529 in location 1218
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1218 is 1529
9999 mem: location 1206 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1147
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1529 in location 1147
 106 run: reply {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1206 is 1143
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1327
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1340
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1145 is 1190
9999 mem: incrementing refcount of 1190: 36 -> 37
9999 mem: storing 1190 in location 1341
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1342
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1327 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1343
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1340 is 0
9998 run: jumping to instruction 50
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1554
9999 mem: storing 0 in location 1554
9999 mem: storing 0 in location 1555
9999 mem: storing 0 in location 1556
9999 mem: storing 0 in location 1557
9999 mem: storing 0 in location 1558
9999 mem: storing 0 in location 1559
9999 mem: storing 0 in location 1560
9999 mem: storing 0 in location 1561
9999 mem: storing 0 in location 1562
9999 mem: storing 0 in location 1563
9999 mem: storing 0 in location 1564
9999 mem: storing 0 in location 1565
9999 mem: incrementing refcount of 1554: 0 -> 1
9999 mem: storing 1554 in location 1345
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1337 is 1
9999 mem: location 1338 is 3
9999 mem: location 1339 is 1190
9999 mem: location 1342 is 1
9999 mem: location 1343 is 3
9999 mem: location 1341 is 1190
9999 mem: location 1340 is 0
9999 mem: location 1345 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1345 is 1554
9999 mem: skipping refcount at 1554
9999 mem: storing 1 in location 1555
9999 mem: storing 1 in location 1556
9999 mem: storing 3 in location 1557
9999 mem: storing 1190 in location 1558
9999 mem: storing 1 in location 1559
9999 mem: storing 3 in location 1560
9999 mem: storing 1190 in location 1561
9999 mem: storing 0 in location 1562
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1327 is 1143
9999 mem: location 1345 is 1554
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1166
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 22 -> 23
9999 mem: storing 1143 in location 1169
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1554: 1 -> 2
9999 mem: storing 1554 in location 1170
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1154
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1154 is 1533
9999 mem: incrementing refcount of 1533: 3 -> 4
9999 mem: storing 1533 in location 1171
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1170 is 1554
9999 mem: location 1171 is 1533
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1554: 2 -> 3
9999 mem: storing 1554 in location 1159
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1533: 4 -> 5
9999 mem: storing 1533 in location 1160
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1566
9999 mem: storing 0 in location 1566
9999 mem: storing 0 in location 1567
9999 mem: storing 0 in location 1568
9999 mem: incrementing refcount of 1566: 0 -> 1
9999 mem: storing 1566 in location 1161
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1159 is 1554
9999 mem: location 1160 is 1533
9999 mem: location 1161 is 1566
9999 mem: skipping refcount at 1566
9999 mem: location 1161 is 1566
9999 mem: skipping refcount at 1566
9999 mem: incrementing refcount of 1554: 3 -> 4
9999 mem: incrementing refcount of 1533: 5 -> 6
9999 mem: storing 1554 in location 1567
9999 mem: storing 1533 in location 1568
 107 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1161 is 1566
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1566
9999 mem: decrementing refcount of 1533: 6 -> 5
9999 mem: incrementing refcount of 1566: 1 -> 2
9999 mem: storing 1566 in location 1171
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1533
9999 mem: location 1155 is 0
9999 mem: location 1171 is 1566
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1154
9999 mem: decrementing refcount of 1533: 5 -> 4
9999 mem: incrementing refcount of 1566: 2 -> 3
9999 mem: storing 1566 in location 1154
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1155
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1155 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1172
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1172
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1172 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1155
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1155
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1169 is 1143
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1327
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1327 is 1143
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1310
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1311
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1307 is 1008
9999 mem: location 1310 is 1
9999 mem: location 1311 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 157 -> 158
9999 mem: storing 1008 in location 1159
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1160
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1161
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1159 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 3
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1159 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1307
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1308 is 1546
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1268
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1546: 2 -> 3
9999 mem: storing 1546 in location 1271
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1271 is 1546
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 1
9999 mem: location 1548 is 1536
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy is 1547
9998 run: its type is "number"
9999 mem: location 1547 is 1
9999 mem: storing 1 in location 1272
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 1
9999 mem: location 1548 is 1536
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy is 1548
9998 run: its type is ("address" "array" "event")
9999 mem: location 1548 is 1536
9999 mem: incrementing refcount of 1536: 2 -> 3
9999 mem: storing 1536 in location 1273
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1273 is 1536
9999 mem: skipping refcount at 1536
9999 mem: storing 2 in location 1274
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1272 is 1
9999 mem: location 1274 is 2
9999 mem: storing 0 in location 1275
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1273 is 1536
9999 mem: skipping refcount at 1536
9998 run: base address is 1537
9999 mem: location 1272 is 1
9998 run: address to copy is 1542
9998 run: its type is event
9999 mem: location 1542 is 1
9999 mem: location 1543 is 65516
9999 mem: location 1544 is 0
9999 mem: location 1545 is 0
9999 mem: storing 1 in location 1277
9999 mem: storing 65516 in location 1278
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1272 is 1
9999 mem: storing 2 in location 1272
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 1
9999 mem: location 1548 is 1536
9999 mem: location 1272 is 2
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy to is 1547
9999 mem: storing 2 in location 1547
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1277 is 1
9999 mem: location 1278 is 65516
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1271 is 1546
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1546
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1312
9999 mem: storing 65516 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1546 in location 1308
9999 mem: storing 1 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1312 is 1
9999 mem: location 1313 is 65516
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1321
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1307 is 1008
9999 mem: location 1309 is 1143
9999 mem: location 1312 is 1
9999 mem: location 1313 is 65516
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1359
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 158 -> 159
9999 mem: storing 1008 in location 1362
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 23 -> 24
9999 mem: storing 1143 in location 1363
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1364
9999 mem: storing 65516 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1368
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1363 is 1143
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1362 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 159 -> 160
9999 mem: storing 1008 in location 1552
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1552 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1552 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1552 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1553
 106 run: return {width: "number"}
9999 mem: location 1553 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1369
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1362 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 160 -> 161
9999 mem: storing 1008 in location 1552
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1552 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1552 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1552 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1553
 106 run: return {height: "number"}
9999 mem: location 1553 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1370
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1371
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1372
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1147
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1147 is 1529
9999 mem: incrementing refcount of 1529: 14 -> 15
9999 mem: storing 1529 in location 1373
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1374
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1375
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1374 is 1
9999 mem: storing 1 in location 1376
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1375 is 3
9999 mem: storing 3 in location 1377
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1364 is 1
9999 mem: location 1365 is 65516
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 mem: storing 0 in location 1379
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 0
9998 run: jumping to instruction 460
 105 run: {k: "number"}, {is-keycode?: "boolean"} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1364 is 1
9999 mem: location 1365 is 65516
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 mem: storing 1 in location 1450
9999 mem: storing 65516 in location 1449
 105 run: assert {is-keycode?: "boolean"}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1450 is 1
 105 run: {page-up?: "boolean"} <- equal {k: "number"}, {65519: "literal", "page-up": ()}
9999 mem: location 1449 is 65516
9999 mem: storing 0 in location 1422
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 502
 105 run: {page-down?: "boolean"} <- equal {k: "number"}, {65518: "literal", "page-down": ()}
9999 mem: location 1449 is 65516
9999 mem: storing 0 in location 1433
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 541
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: "number"}, {65520: "literal", "end": ()}
9999 mem: location 1449 is 65516
9999 mem: storing 0 in location 1438
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jumping to instruction 577
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: "number"}, {65521: "literal", "home": ()}
9999 mem: location 1449 is 65516
9999 mem: storing 0 in location 1439
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 0
9998 run: jumping to instruction 613
 105 run: {move-to-next-line?: "boolean"} <- equal {k: "number"}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1449 is 65516
9999 mem: storing 1 in location 1451
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1451 is 1
9998 run: jump-unless fell through
 105 run: {cursor-row-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1424
 105 run: {cursor-column-before: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1425
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1145 is 1190
9999 mem: incrementing refcount of 1190: 37 -> 38
9999 mem: storing 1190 in location 1426
 105 run: {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- move-to-next-line {editor: ("address" "editor-data")}, {screen-height: "number"}
9999 mem: location 1363 is 1143
9999 mem: location 1370 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1463
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 24 -> 25
9999 mem: storing 1143 in location 1466
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1467
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1468
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1469
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1147
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1147 is 1529
9999 mem: incrementing refcount of 1529: 15 -> 16
9999 mem: storing 1529 in location 1470
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1471
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1466 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1472
 106 run: {last-line: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1467 is 5
9999 mem: storing 4 in location 1473
 106 run: {already-at-bottom?: "boolean"} <- greater-or-equal {cursor-row: "number"}, {last-line: "number"}
9999 mem: location 1468 is 1
9999 mem: location 1473 is 4
9999 mem: storing 0 in location 1474
 106 run: jump-if {already-at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1474 is 0
9998 run: jump-if fell through
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1472 is 9
9999 mem: location 1471 is 0
9999 mem: storing 9 in location 1475
 106 run: {next-line: ("address" "duplex-list" "character")} <- before-start-of-next-line {before-cursor: ("address" "duplex-list" "character")}, {max: "number"}
9999 mem: location 1470 is 1529
9999 mem: location 1475 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1116
 107 run: {original: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1529: 16 -> 17
9999 mem: storing 1529 in location 1119
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1120
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1121
 107 run: {curr: ("address" "duplex-list" "character")} <- copy {original: ("address" "duplex-list" "character")}
9999 mem: location 1119 is 1529
9999 mem: incrementing refcount of 1529: 17 -> 18
9999 mem: storing 1529 in location 1122
 107 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1122 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 0
9999 mem: location 1532 is 1198
9999 mem: location 1122 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1530
9998 run: its type is "character"
9999 mem: location 1530 is 48
9999 mem: storing 48 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 48
9999 mem: storing 0 in location 1124
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jumping to instruction 11
 107 run: jump-if {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1122 is 1529
9998 run: jumping to instruction 16
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1121 is 0
9999 mem: location 1120 is 9
9999 mem: storing 0 in location 1125
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1125 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1122 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 0
9999 mem: location 1532 is 1198
9999 mem: location 1122 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1530
9998 run: its type is "character"
9999 mem: location 1530 is 48
9999 mem: storing 48 in location 1123
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1123 is 48
9999 mem: storing 0 in location 1124
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1124 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "duplex-list" "character")} <- next_2 {curr: ("address" "duplex-list" "character")}
9999 mem: location 1122 is 1529
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 108 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1529: 18 -> 19
9999 mem: storing 1529 in location 1552
 108 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1552 is 1529
9998 run: jumping to instruction 5
 108 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1552 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 0
9999 mem: location 1532 is 1198
9999 mem: location 1552 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1531
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1531 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1553
 108 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1553 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1529: 19 -> 18
9999 mem: storing 0 in location 1122
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1121 is 0
9999 mem: storing 1 in location 1121
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: return {original: ("address" "duplex-list" "character")}
9999 mem: location 1119 is 1529
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1529
9999 mem: incrementing refcount of 1529: 18 -> 19
9999 mem: storing 1529 in location 1476
 106 run: {no-motion?: "boolean"} <- equal {next-line: ("address" "duplex-list" "character")}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1476 is 1529
9999 mem: location 1470 is 1529
9999 mem: storing 1 in location 1477
 106 run: jump-unless {no-motion?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 106 run: {scroll?: "boolean"} <- greater-than {cursor-row: "number"}, {1: "literal"}
9999 mem: location 1468 is 1
9999 mem: storing 0 in location 1478
 106 run: jump-if {scroll?: "boolean"}, {+try-to-scroll: "label"}
9999 mem: location 1478 is 0
9998 run: jump-if fell through
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1479
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1466 is 1143
9999 mem: location 1479 is 0
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9998 run: result 1 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1363
9999 mem: storing 0 in location 1368
 105 run: {undo-coalesce-tag: "number"} <- copy {4: "literal", "down-arrow": ()}
9999 mem: storing 4 in location 1427
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1145 is 1190
9999 mem: incrementing refcount of 1190: 38 -> 39
9999 mem: storing 1190 in location 1428
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1374
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1375
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1427 is 4
9998 run: jump-unless fell through
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1154
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1154 is 1566
9999 mem: incrementing refcount of 1566: 3 -> 4
9999 mem: storing 1566 in location 1383
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1383 is 1566
9998 run: jump-unless fell through
 105 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1383 is 1566
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1566: 4 -> 5
9999 mem: storing 1566 in location 1552
 106 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1552 is 1566
9999 mem: skipping refcount at 1566
9999 mem: location 1567 is 1554
9999 mem: location 1568 is 1533
9999 mem: location 1552 is 1566
9999 mem: skipping refcount at 1566
9998 run: address to copy is 1567
9998 run: its type is ("address" "operation")
9999 mem: location 1567 is 1554
9999 mem: incrementing refcount of 1554: 4 -> 5
9999 mem: storing 1554 in location 1553
 106 run: reply {result: ("address" "operation")}
9999 mem: location 1553 is 1554
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1554
9999 mem: incrementing refcount of 1554: 5 -> 6
9999 mem: storing 1554 in location 1382
9990 schedule: handle-keyboard-event/editor-event-loop/run_1003/scenario_editor-scrolls-at-end-on-down-arrow
 105 run: {move: "move-operation"}, {is-move?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1382 is 1554
9999 mem: skipping refcount at 1554
9999 mem: location 1555 is 1
9999 mem: location 1556 is 1
9999 mem: location 1557 is 3
9999 mem: location 1558 is 1190
9999 mem: location 1559 is 1
9999 mem: location 1560 is 3
9999 mem: location 1561 is 1190
9999 mem: location 1562 is 0
9999 mem: location 1563 is 0
9999 mem: location 1564 is 0
9999 mem: location 1565 is 0
9999 mem: location 1382 is 1554
9999 mem: skipping refcount at 1554
9999 mem: storing 1 in location 1406
9999 mem: storing 1 in location 1399
9999 mem: storing 3 in location 1400
9999 mem: storing 1190 in location 1401
9999 mem: storing 1 in location 1402
9999 mem: storing 3 in location 1403
9999 mem: storing 1190 in location 1404
9999 mem: storing 0 in location 1405
 105 run: jump-unless {is-move?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 1
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: "move-operation"}, {tag: "offset"}
9999 mem: location 1399 is 1
9999 mem: location 1400 is 3
9999 mem: location 1401 is 1190
9999 mem: location 1402 is 1
9999 mem: location 1403 is 3
9999 mem: location 1404 is 1190
9999 mem: location 1405 is 0
9998 run: address to copy is 1405
9998 run: its type is "number"
9999 mem: location 1405 is 0
9999 mem: storing 0 in location 1429
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1427 is 4
9999 mem: location 1429 is 0
9999 mem: storing 0 in location 1430
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 641
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1569
9999 mem: storing 0 in location 1569
9999 mem: storing 0 in location 1570
9999 mem: storing 0 in location 1571
9999 mem: storing 0 in location 1572
9999 mem: storing 0 in location 1573
9999 mem: storing 0 in location 1574
9999 mem: storing 0 in location 1575
9999 mem: storing 0 in location 1576
9999 mem: storing 0 in location 1577
9999 mem: storing 0 in location 1578
9999 mem: storing 0 in location 1579
9999 mem: storing 0 in location 1580
9999 mem: decrementing refcount of 1554: 6 -> 5
9999 mem: incrementing refcount of 1569: 0 -> 1
9999 mem: storing 1569 in location 1382
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {cursor-row-before: "number"}, {cursor-column-before: "number"}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1424 is 1
9999 mem: location 1425 is 3
9999 mem: location 1426 is 1190
9999 mem: location 1374 is 1
9999 mem: location 1375 is 3
9999 mem: location 1428 is 1190
9999 mem: location 1427 is 4
9999 mem: location 1382 is 1569
9999 mem: skipping refcount at 1569
9999 mem: location 1382 is 1569
9999 mem: skipping refcount at 1569
9999 mem: storing 1 in location 1570
9999 mem: storing 1 in location 1571
9999 mem: storing 3 in location 1572
9999 mem: storing 1190 in location 1573
9999 mem: storing 1 in location 1574
9999 mem: storing 3 in location 1575
9999 mem: storing 1190 in location 1576
9999 mem: storing 4 in location 1577
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1363 is 1143
9999 mem: location 1382 is 1569
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1166
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 25 -> 26
9999 mem: storing 1143 in location 1169
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1569: 1 -> 2
9999 mem: storing 1569 in location 1170
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1154
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1154 is 1566
9999 mem: incrementing refcount of 1566: 5 -> 6
9999 mem: storing 1566 in location 1171
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1170 is 1569
9999 mem: location 1171 is 1566
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1569: 2 -> 3
9999 mem: storing 1569 in location 1159
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1566: 6 -> 7
9999 mem: storing 1566 in location 1160
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1581
9999 mem: storing 0 in location 1581
9999 mem: storing 0 in location 1582
9999 mem: storing 0 in location 1583
9999 mem: incrementing refcount of 1581: 0 -> 1
9999 mem: storing 1581 in location 1161
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1159 is 1569
9999 mem: location 1160 is 1566
9999 mem: location 1161 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1161 is 1581
9999 mem: skipping refcount at 1581
9999 mem: incrementing refcount of 1569: 3 -> 4
9999 mem: incrementing refcount of 1566: 7 -> 8
9999 mem: storing 1569 in location 1582
9999 mem: storing 1566 in location 1583
 107 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1161 is 1581
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1581
9999 mem: decrementing refcount of 1566: 8 -> 7
9999 mem: incrementing refcount of 1581: 1 -> 2
9999 mem: storing 1581 in location 1171
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1566
9999 mem: location 1155 is 0
9999 mem: location 1171 is 1581
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1154
9999 mem: decrementing refcount of 1566: 7 -> 6
9999 mem: incrementing refcount of 1581: 2 -> 3
9999 mem: storing 1581 in location 1154
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1155
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1155 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1172
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1172
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1172 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1155
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1155
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1169 is 1143
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1363
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1362 is 1008
9999 mem: location 1363 is 1143
9999 mem: location 1368 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1143
9998 run: result 2 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1307
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1309
9999 mem: storing 0 in location 1322
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1310
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1311
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1307 is 1008
9999 mem: location 1310 is 1
9999 mem: location 1311 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 161 -> 162
9999 mem: storing 1008 in location 1159
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1160
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1161
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1159 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 3
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1159 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1307
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1308 is 1546
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1268
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1546: 3 -> 4
9999 mem: storing 1546 in location 1271
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1271 is 1546
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 2
9999 mem: location 1548 is 1536
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy is 1547
9998 run: its type is "number"
9999 mem: location 1547 is 2
9999 mem: storing 2 in location 1272
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9999 mem: location 1547 is 2
9999 mem: location 1548 is 1536
9999 mem: location 1271 is 1546
9999 mem: skipping refcount at 1546
9998 run: address to copy is 1548
9998 run: its type is ("address" "array" "event")
9999 mem: location 1548 is 1536
9999 mem: incrementing refcount of 1536: 3 -> 4
9999 mem: storing 1536 in location 1273
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1273 is 1536
9999 mem: skipping refcount at 1536
9999 mem: storing 2 in location 1274
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1272 is 2
9999 mem: location 1274 is 2
9999 mem: storing 1 in location 1275
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1549
9999 mem: incrementing refcount of 1549: 0 -> 1
9999 mem: storing 1549 in location 1276
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1276 is 1549
9999 mem: skipping refcount at 1549
9999 mem: location 1550 is 0
9999 mem: location 1551 is 0
9999 mem: location 1552 is 0
9999 mem: location 1553 is 0
9999 mem: location 1271 is 1546
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1546
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1546 in location 1308
9999 mem: storing 1 in location 1316
9999 mem: storing 1 in location 1317
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1307 is 1008
9999 mem: location 1308 is 1546
9999 mem: location 1309 is 1143
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 2 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [1]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": "literal-string"}
9992 load: after rewriting: type {"1": "literal-string"}
9999 mem: storing 'type' event starting at 1586
9999 mem: storing 'text' tag at 1586
9999 mem: storing character 49 at 1587
9999 mem: storing console in 1590
9999 mem: storing console data in 1592
 102 run: run {"\n    editor-event-loop screen:address:screen, console:address:console, 2:address:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1004
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "screen")}
9993 parse:   ingredient: {console: ("address" "console")}
9993 parse:   ingredient: {2: ("address" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 parse: recipe run_1004 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1004
9991 transform: --- rewrite 'stash' instructions in recipe run_1004
9991 transform: --- fill in reply ingredients from header for recipe run_1004
9991 transform: --- deduce types for recipe run_1004
9992 transform: screen => ("address" "screen")
9992 transform: console => ("address" "console")
9991 transform: --- check for invalid types in recipe run_1004
9991 transform: --- collect surrounding spaces for recipe run_1004
9991 transform: --- transform names for recipe run_1004
9991 transform: --- resolve ambiguous calls for recipe run_1004
9992 transform: instruction editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")} -> {screen: ("address" "screen")} {console: ("address" "console")} {editor: ("address" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1004
9991 transform: --- transform braces for recipe run_1004
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1004
9991 transform: --- type-check 'call' instructions inside recipe run_1004
9991 transform: --- type-check calls inside recipe run_1004
9991 transform: --- convert 'new' to 'allocate' for recipe run_1004
9991 transform: --- check types of reply instructions in recipe run_1004
9991 transform: --- type-check merge instructions in recipe run_1004
9991 transform: --- checking reply instructions against header for run_1004
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "screen")}, {console: ("address" "console")}, {2: ("address" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1590
9999 mem: location 2 is 1143
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 17
9999 mem: allocating size 19
9999 abandon: picking up space from free-list of size 19
9999 mem: new alloc from free list: 1304
 104 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 162 -> 163
9999 mem: storing 1008 in location 1307
 104 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1590: 0 -> 1
9999 mem: storing 1590 in location 1308
 104 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 26 -> 27
9999 mem: storing 1143 in location 1309
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1310
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1311
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1307 is 1008
9999 mem: location 1310 is 1
9999 mem: location 1311 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 163 -> 164
9999 mem: storing 1008 in location 1159
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1160
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1161
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1159 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 3
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1159 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1307
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1308 is 1590
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1268
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1590: 1 -> 2
9999 mem: storing 1590 in location 1271
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1271 is 1590
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9999 mem: location 1591 is 0
9999 mem: location 1592 is 1584
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9998 run: address to copy is 1591
9998 run: its type is "number"
9999 mem: location 1591 is 0
9999 mem: storing 0 in location 1272
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9999 mem: location 1591 is 0
9999 mem: location 1592 is 1584
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9998 run: address to copy is 1592
9998 run: its type is ("address" "array" "event")
9999 mem: location 1592 is 1584
9999 mem: incrementing refcount of 1584: 1 -> 2
9999 mem: storing 1584 in location 1273
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1273 is 1584
9999 mem: skipping refcount at 1584
9999 mem: storing 1 in location 1274
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1272 is 0
9999 mem: location 1274 is 1
9999 mem: storing 0 in location 1275
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1273 is 1584
9999 mem: skipping refcount at 1584
9998 run: base address is 1585
9999 mem: location 1272 is 0
9998 run: address to copy is 1586
9998 run: its type is event
9999 mem: location 1586 is 0
9999 mem: location 1587 is 49
9999 mem: location 1588 is 0
9999 mem: location 1589 is 0
9999 mem: storing 0 in location 1277
9999 mem: storing 49 in location 1278
9999 mem: storing 0 in location 1279
9999 mem: storing 0 in location 1280
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1272 is 0
9999 mem: storing 1 in location 1272
 105 run: {console: ("address" "console"), "lookup": ()} <- put {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9999 mem: location 1591 is 0
9999 mem: location 1592 is 1584
9999 mem: location 1272 is 1
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9998 run: address to copy to is 1591
9999 mem: storing 1 in location 1591
 105 run: return {result: "event"}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1277 is 0
9999 mem: location 1278 is 49
9999 mem: location 1279 is 0
9999 mem: location 1280 is 0
9999 mem: location 1271 is 1590
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 49, 0, 0]
9998 run: result 1 is 1590
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1312
9999 mem: storing 49 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1590 in location 1308
9999 mem: storing 1 in location 1316
9999 mem: storing 0 in location 1317
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: "touch-event"}, {is-touch?: "boolean"} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 49
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 0 in location 1321
 104 run: jump-unless {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {is-touch?: "boolean"}, {: "offset"}
9999 mem: location 1321 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "screen")}, {editor: ("address" "editor-data")}, {e: "event"}
9999 mem: location 1307 is 1008
9999 mem: location 1309 is 1143
9999 mem: location 1312 is 0
9999 mem: location 1313 is 49
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 102
9999 mem: allocating size 104
9999 abandon: picking up space from free-list of size 104
9999 mem: new alloc from free list: 1359
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 164 -> 165
9999 mem: storing 1008 in location 1362
 105 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 27 -> 28
9999 mem: storing 1143 in location 1363
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1364
9999 mem: storing 49 in location 1365
9999 mem: storing 0 in location 1366
9999 mem: storing 0 in location 1367
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1368
 105 run: jump-if {editor: ("address" "editor-data")}, {: "offset"}
9999 mem: location 1363 is 1143
9998 run: jumping to instruction 8
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1362 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1593
9999 mem: storing 0 in location 1593
9999 mem: storing 0 in location 1594
9999 mem: storing 0 in location 1595
9999 mem: storing 0 in location 1596
9999 mem: storing 0 in location 1597
9999 mem: storing 3 in location 1594
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 165 -> 166
9999 mem: storing 1008 in location 1596
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1596 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1597
 106 run: return {width: "number"}
9999 mem: location 1597 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1369
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1362 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 166 -> 167
9999 mem: storing 1008 in location 1596
 106 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1596 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1597
 106 run: return {height: "number"}
9999 mem: location 1597 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1370
 105 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1371
 105 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1372
 105 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1147
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1147 is 1529
9999 mem: incrementing refcount of 1529: 19 -> 20
9999 mem: storing 1529 in location 1373
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1374
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1375
 105 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1374 is 1
9999 mem: storing 1 in location 1376
 105 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1375 is 3
9999 mem: storing 3 in location 1377
 105 run: {c: "character"}, {is-unicode?: "boolean"} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1364 is 0
9999 mem: location 1365 is 49
9999 mem: location 1366 is 0
9999 mem: location 1367 is 0
9999 mem: storing 1 in location 1379
9999 mem: storing 49 in location 1378
 105 run: jump-unless {is-unicode?: "boolean"}, {: "offset"}
9999 mem: location 1379 is 1
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: "character"}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1380
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jumping to instruction 73
 105 run: {undo?: "boolean"} <- equal {c: "character"}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1418
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 128
 105 run: {page-up?: "boolean"} <- equal {c: "character"}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1422
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 167
 105 run: {page-down?: "boolean"} <- equal {c: "character"}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1433
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 206
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: "character"}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1434
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1434 is 0
9998 run: jumping to instruction 227
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: "character"}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1437
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1437 is 0
9998 run: jumping to instruction 249
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: "character"}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1438
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1438 is 0
9998 run: jumping to instruction 285
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: "character"}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1439
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1439 is 0
9998 run: jumping to instruction 321
 105 run: {delete-previous-character?: "boolean"} <- equal {c: "character"}, {8: "literal", "backspace": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1440
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1440 is 0
9998 run: jumping to instruction 361
 105 run: {tab?: "boolean"} <- equal {c: "character"}, {9: "literal", "tab": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1443
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1443 is 0
9998 run: jumping to instruction 399
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1378 is 49
9999 mem: storing 0 in location 1447
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 421
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: "character"}, {32: "literal", "space": ()}
9999 mem: location 1378 is 49
9999 mem: storing 1 in location 1448
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1368
 105 run: jump-if {regular-character?: "boolean"}, {: "offset"}
9999 mem: location 1448 is 1
9998 run: jumping to instruction 427
 105 run: {top-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1145 is 1190
9999 mem: incrementing refcount of 1190: 39 -> 40
9999 mem: storing 1190 in location 1426
 105 run: {cursor-before: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1147
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1147 is 1529
9999 mem: incrementing refcount of 1529: 20 -> 21
9999 mem: storing 1529 in location 1444
 105 run: {editor: ("address" "editor-data")}, {screen: ("address" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "editor-data")}, {c: "character"}, {screen: ("address" "screen")}
9999 mem: location 1363 is 1143
9999 mem: location 1378 is 49
9999 mem: location 1362 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1323
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 28 -> 29
9999 mem: storing 1143 in location 1326
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1327
 106 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 167 -> 168
9999 mem: storing 1008 in location 1328
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1147
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1147 is 1529
9999 mem: incrementing refcount of 1529: 21 -> 22
9999 mem: storing 1529 in location 1329
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1327 is 49
9999 mem: location 1329 is 1529
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1166
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1169
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1529: 22 -> 23
9999 mem: storing 1529 in location 1170
 107 run: {new-node: ("address" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1598
9999 mem: storing 0 in location 1598
9999 mem: storing 0 in location 1599
9999 mem: storing 0 in location 1600
9999 mem: storing 0 in location 1601
9999 mem: incrementing refcount of 1598: 0 -> 1
9999 mem: storing 1598 in location 1171
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1171 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 0
9999 mem: location 1600 is 0
9999 mem: location 1601 is 0
9999 mem: location 1169 is 49
9999 mem: location 1171 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy to is 1599
9999 mem: storing 49 in location 1599
 107 run: {next-node: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1170 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 0
9999 mem: location 1532 is 1198
9999 mem: location 1170 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1531
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1531 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1172
 107 run: {in: ("address" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "duplex-list" "character")}
9999 mem: location 1170 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 0
9999 mem: location 1532 is 1198
9999 mem: location 1171 is 1598
9999 mem: location 1170 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy to is 1531
9999 mem: incrementing refcount of 1598: 1 -> 2
9999 mem: storing 1598 in location 1531
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "duplex-list" "character")}
9999 mem: location 1171 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 49
9999 mem: location 1600 is 0
9999 mem: location 1601 is 0
9999 mem: location 1170 is 1529
9999 mem: location 1171 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy to is 1601
9999 mem: incrementing refcount of 1529: 23 -> 24
9999 mem: storing 1529 in location 1601
 107 run: {new-node: ("address" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "duplex-list" "character")}
9999 mem: location 1171 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 49
9999 mem: location 1600 is 0
9999 mem: location 1601 is 1529
9999 mem: location 1172 is 0
9999 mem: location 1171 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy to is 1600
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1600
 107 run: jump-if {next-node: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: return {in: ("address" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1170 is 1529
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1329 is 1529
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1529: 24 -> 25
9999 mem: storing 1529 in location 1596
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1596 is 1529
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1596 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 1598
9999 mem: location 1532 is 1198
9999 mem: location 1596 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1531
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1531 is 1598
9999 mem: incrementing refcount of 1598: 2 -> 3
9999 mem: storing 1598 in location 1597
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1597 is 1598
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1598
9999 mem: decrementing refcount of 1529: 25 -> 24
9999 mem: incrementing refcount of 1598: 3 -> 4
9999 mem: storing 1598 in location 1329
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {before-cursor: "offset"}, {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1529
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1329 is 1598
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1147
9999 mem: decrementing refcount of 1529: 24 -> 23
9999 mem: incrementing refcount of 1598: 4 -> 5
9999 mem: storing 1598 in location 1147
 106 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1330
 106 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 3
9999 mem: storing 3 in location 1331
 106 run: {left: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1332
 106 run: {right: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 9
9999 mem: storing 9 in location 1333
 106 run: {save-row: "number"} <- copy {cursor-row: "number"}
9999 mem: location 1330 is 1
9999 mem: storing 1 in location 1334
 106 run: {save-column: "number"} <- copy {cursor-column: "number"}
9999 mem: location 1331 is 3
9999 mem: storing 3 in location 1335
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "screen")}
9999 mem: location 1328 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 168 -> 169
9999 mem: storing 1008 in location 1596
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1596 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1597
 107 run: return {width: "number"}
9999 mem: location 1597 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1336
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "screen")}
9999 mem: location 1328 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 169 -> 170
9999 mem: storing 1008 in location 1596
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1596 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1596 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1597
 107 run: return {height: "number"}
9999 mem: location 1597 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1337
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1333 is 9
9999 mem: storing 8 in location 1338
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: "number"}, {wrap-column: "number"}
9999 mem: location 1331 is 3
9999 mem: location 1338 is 8
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 47
 106 run: {cursor-column: "number"} <- add {cursor-column: "number"}, {1: "literal"}
9999 mem: location 1331 is 3
9999 mem: storing 4 in location 1331
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}, {cursor-column: "number"}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 3
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1331 is 4
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1152
9999 mem: storing 4 in location 1152
 106 run: {next: ("address" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "duplex-list" "character")}
9999 mem: location 1329 is 1598
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 107 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1598: 5 -> 6
9999 mem: storing 1598 in location 1596
 107 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1596 is 1598
9998 run: jumping to instruction 5
 107 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1596 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 49
9999 mem: location 1600 is 0
9999 mem: location 1601 is 1529
9999 mem: location 1596 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy is 1600
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1600 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1597
 107 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1597 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1346
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1346 is 0
9999 mem: storing 1 in location 1347
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1347 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1337 is 5
9999 mem: storing 4 in location 1348
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1334 is 1
9999 mem: location 1348 is 4
9999 mem: storing 0 in location 1349
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1335 is 3
9999 mem: location 1333 is 9
9999 mem: storing 0 in location 1350
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1349 is 0
9999 mem: location 1350 is 0
9999 mem: storing 0 in location 1351
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1328 is 1008
9999 mem: location 1334 is 1
9999 mem: location 1335 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 170 -> 171
9999 mem: storing 1008 in location 1159
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1160
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1161
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1159 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 3
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1159 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "screen")}, {c: "character"}
9999 mem: location 1328 is 1008
9999 mem: location 1327 is 49
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 24
9999 mem: allocating size 26
9999 abandon: picking up space from free-list of size 26
9999 mem: new alloc from free list: 1242
 107 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 171 -> 172
9999 mem: storing 1008 in location 1245
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1246
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1247
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1250 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1249
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1246 is 49
  90 print-character: 49 
 107 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1245 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 107 run: {height: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 107 run: {row: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1253
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1253 is 1
9999 mem: storing 1 in location 1254
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 1
9998 run: jumping to instruction 23
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1253 is 1
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 1
9998 run: jumping to instruction 28
 107 run: {column: "number"} <- get {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1255
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1255 is 3
9999 mem: storing 1 in location 1254
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 1
9998 run: jumping to instruction 34
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1255 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 107 run: jump-if {legal?: "boolean"}, {: "offset"}
9999 mem: location 1254 is 1
9998 run: jumping to instruction 39
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1246 is 49
9999 mem: storing 0 in location 1256
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1256 is 0
9998 run: jumping to instruction 53
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1253 is 1
9999 mem: location 1251 is 10
9999 mem: storing 10 in location 1259
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1259 is 10
9999 mem: location 1255 is 3
9999 mem: storing 13 in location 1259
 107 run: {buf: ("address" "array" "screen-cell")} <- get {screen: ("address" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: incrementing refcount of 1014: 95 -> 96
9999 mem: storing 1014 in location 1260
 107 run: {len: "number"} <- length {buf: ("address" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1260 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1261
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1246 is 49
9999 mem: storing 0 in location 1262
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1262 is 0
9998 run: jumping to instruction 71
 107 run: {cursor: "screen-cell"} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1246 is 49
9999 mem: location 1247 is 7
9999 mem: storing 49 in location 1264
9999 mem: storing 7 in location 1265
 107 run: {buf: ("address" "array" "screen-cell"), "lookup": ()} <- put-index {buf: ("address" "array" "screen-cell"), "lookup": ()}, {index: "number"}, {cursor: "screen-cell"}
9999 mem: location 1260 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1259 is 13
9998 run: address to copy to is 1042
9999 mem: location 1264 is 49
9999 mem: location 1265 is 7
9999 mem: storing 49 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1266
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1255 is 3
9999 mem: location 1266 is 9
9999 mem: storing 0 in location 1267
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1267 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1255 is 3
9999 mem: storing 4 in location 1255
 107 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1255 is 4
9999 mem: location 1245 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1245 is 1008
9999 abandon: saving in free-list of size 26
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1345
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1326 is 1143
9999 mem: location 1328 is 1008
9999 mem: location 1345 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1363
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1362
9999 mem: storing 0 in location 1368
 105 run: {top-after: ("address" "duplex-list" "character")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1145 is 1190
9999 mem: incrementing refcount of 1190: 40 -> 41
9999 mem: storing 1190 in location 1428
 105 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1374
 105 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 4
9999 mem: storing 4 in location 1375
 105 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1363 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1154
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1154 is 1581
9999 mem: incrementing refcount of 1581: 3 -> 4
9999 mem: storing 1581 in location 1383
 105 run: jump-unless {undo: ("address" "list" "address" "operation")}, {: "offset"}
9999 mem: location 1383 is 1581
9998 run: jump-unless fell through
 105 run: {op: ("address" "operation")} <- first_3 {undo: ("address" "list" "address" "operation")}
9999 mem: location 1383 is 1581
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 106 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1581: 4 -> 5
9999 mem: storing 1581 in location 1596
 106 run: {result: ("address" "operation")} <- get {in: ("address" "list" "address" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1596 is 1581
9999 mem: skipping refcount at 1581
9999 mem: location 1582 is 1569
9999 mem: location 1583 is 1566
9999 mem: location 1596 is 1581
9999 mem: skipping refcount at 1581
9998 run: address to copy is 1582
9998 run: its type is ("address" "operation")
9999 mem: location 1582 is 1569
9999 mem: incrementing refcount of 1569: 4 -> 5
9999 mem: storing 1569 in location 1597
 106 run: reply {result: ("address" "operation")}
9999 mem: location 1597 is 1569
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1569
9999 mem: incrementing refcount of 1569: 5 -> 6
9999 mem: storing 1569 in location 1382
 105 run: {typing: "insert-operation"}, {is-insert?: "boolean"} <- maybe-convert {op: ("address" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1382 is 1569
9999 mem: skipping refcount at 1569
9999 mem: location 1570 is 1
9999 mem: location 1571 is 1
9999 mem: location 1572 is 3
9999 mem: location 1573 is 1190
9999 mem: location 1574 is 1
9999 mem: location 1575 is 3
9999 mem: location 1576 is 1190
9999 mem: location 1577 is 4
9999 mem: location 1578 is 0
9999 mem: location 1579 is 0
9999 mem: location 1580 is 0
9999 mem: location 1382 is 1569
9999 mem: skipping refcount at 1569
9999 mem: storing 0 in location 1416
 105 run: jump-unless {is-insert?: "boolean"}, {: "offset"}
9999 mem: location 1416 is 0
9998 run: jumping to instruction 451
 105 run: {insert-from: ("address" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "duplex-list" "character")}
9999 mem: location 1444 is 1529
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1529: 23 -> 24
9999 mem: storing 1529 in location 1596
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1596 is 1529
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1596 is 1529
9999 mem: skipping refcount at 1529
9999 mem: location 1530 is 48
9999 mem: location 1531 is 1598
9999 mem: location 1532 is 1198
9999 mem: location 1596 is 1529
9999 mem: skipping refcount at 1529
9998 run: address to copy is 1531
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1531 is 1598
9999 mem: incrementing refcount of 1598: 6 -> 7
9999 mem: storing 1598 in location 1597
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1597 is 1598
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1598
9999 mem: incrementing refcount of 1598: 7 -> 8
9999 mem: storing 1598 in location 1417
 105 run: {insert-to: ("address" "duplex-list" "character")} <- next_2 {insert-from: ("address" "duplex-list" "character")}
9999 mem: location 1417 is 1598
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
 106 run: {in: ("address" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1598: 8 -> 9
9999 mem: storing 1598 in location 1596
 106 run: jump-if {in: ("address" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1596 is 1598
9998 run: jumping to instruction 5
 106 run: {result: ("address" "duplex-list" "character")} <- get {in: ("address" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1596 is 1598
9999 mem: skipping refcount at 1598
9999 mem: location 1599 is 49
9999 mem: location 1600 is 0
9999 mem: location 1601 is 1529
9999 mem: location 1596 is 1598
9999 mem: skipping refcount at 1598
9998 run: address to copy is 1600
9998 run: its type is ("address" "duplex-list" "character")
9999 mem: location 1600 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1597
 106 run: reply {result: ("address" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1597 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1446
 105 run: {op: ("address" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1602
9999 mem: storing 0 in location 1602
9999 mem: storing 0 in location 1603
9999 mem: storing 0 in location 1604
9999 mem: storing 0 in location 1605
9999 mem: storing 0 in location 1606
9999 mem: storing 0 in location 1607
9999 mem: storing 0 in location 1608
9999 mem: storing 0 in location 1609
9999 mem: storing 0 in location 1610
9999 mem: storing 0 in location 1611
9999 mem: storing 0 in location 1612
9999 mem: storing 0 in location 1613
9999 mem: decrementing refcount of 1569: 6 -> 5
9999 mem: incrementing refcount of 1602: 0 -> 1
9999 mem: storing 1602 in location 1382
 105 run: {op: ("address" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "duplex-list" "character")}, {cursor-row: "number", "after": ()}, {cursor-column: "number", "after": ()}, {top-after: ("address" "duplex-list" "character")}, {insert-from: ("address" "duplex-list" "character")}, {insert-to: ("address" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1376 is 1
9999 mem: location 1377 is 3
9999 mem: location 1426 is 1190
9999 mem: location 1374 is 1
9999 mem: location 1375 is 4
9999 mem: location 1428 is 1190
9999 mem: location 1417 is 1598
9999 mem: location 1446 is 0
9999 mem: location 1382 is 1602
9999 mem: skipping refcount at 1602
9999 mem: location 1382 is 1602
9999 mem: skipping refcount at 1602
9999 mem: storing 0 in location 1603
9999 mem: storing 1 in location 1604
9999 mem: storing 3 in location 1605
9999 mem: storing 1190 in location 1606
9999 mem: storing 1 in location 1607
9999 mem: storing 4 in location 1608
9999 mem: storing 1190 in location 1609
9999 mem: storing 1598 in location 1610
9999 mem: storing 0 in location 1611
9999 mem: storing 1 in location 1612
 105 run: {editor: ("address" "editor-data")} <- add-operation {editor: ("address" "editor-data")}, {op: ("address" "operation")}
9999 mem: location 1363 is 1143
9999 mem: location 1382 is 1602
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1166
 106 run: {editor: ("address" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1143: 29 -> 30
9999 mem: storing 1143 in location 1169
 106 run: {op: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1602: 1 -> 2
9999 mem: storing 1602 in location 1170
 106 run: {undo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1154
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1154 is 1581
9999 mem: incrementing refcount of 1581: 5 -> 6
9999 mem: storing 1581 in location 1171
 106 run: {undo: ("address" "list" "address" "operation")} <- push_4 {op: ("address" "operation")}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1170 is 1602
9999 mem: location 1171 is 1581
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 107 run: {x: ("address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1602: 2 -> 3
9999 mem: storing 1602 in location 1159
 107 run: {in: ("address" "list" "address" "operation")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1581: 6 -> 7
9999 mem: storing 1581 in location 1160
 107 run: {result: ("address" "list" "address" "operation")} <- new {(list address operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1614
9999 mem: storing 0 in location 1614
9999 mem: storing 0 in location 1615
9999 mem: storing 0 in location 1616
9999 mem: incrementing refcount of 1614: 0 -> 1
9999 mem: storing 1614 in location 1161
 107 run: {result: ("address" "list" "address" "operation"), "lookup": ()} <- merge {x: ("address" "operation")}, {in: ("address" "list" "address" "operation")}
9999 mem: location 1159 is 1602
9999 mem: location 1160 is 1581
9999 mem: location 1161 is 1614
9999 mem: skipping refcount at 1614
9999 mem: location 1161 is 1614
9999 mem: skipping refcount at 1614
9999 mem: incrementing refcount of 1602: 3 -> 4
9999 mem: incrementing refcount of 1581: 7 -> 8
9999 mem: storing 1602 in location 1615
9999 mem: storing 1581 in location 1616
 107 run: return {result: ("address" "list" "address" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1161 is 1614
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1614
9999 mem: decrementing refcount of 1581: 8 -> 7
9999 mem: incrementing refcount of 1614: 1 -> 2
9999 mem: storing 1614 in location 1171
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {undo: "offset"}, {undo: ("address" "list" "address" "operation")}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1581
9999 mem: location 1155 is 0
9999 mem: location 1171 is 1614
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1154
9999 mem: decrementing refcount of 1581: 7 -> 6
9999 mem: incrementing refcount of 1614: 2 -> 3
9999 mem: storing 1614 in location 1154
 106 run: {redo: ("address" "list" "address" "operation")} <- get {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1614
9999 mem: location 1155 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1155
9998 run: its type is ("address" "list" "address" "operation")
9999 mem: location 1155 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1172
 106 run: {redo: ("address" "list" "address" "operation")} <- copy {0: "literal"}
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1172
 106 run: {editor: ("address" "editor-data"), "lookup": ()} <- put {editor: ("address" "editor-data"), "lookup": ()}, {redo: "offset"}, {redo: ("address" "list" "address" "operation")}
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1614
9999 mem: location 1155 is 0
9999 mem: location 1172 is 0
9999 mem: location 1169 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1155
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 0 in location 1155
 106 run: return {editor: ("address" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1169 is 1143
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1143
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1363
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1362 is 1008
9999 mem: location 1363 is 1143
9999 mem: location 1368 is 0
9999 abandon: saving in free-list of size 104
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1143
9998 run: result 2 is 0
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1307
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1143 in location 1309
9999 mem: storing 0 in location 1322
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1322 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1614
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 1
9999 mem: storing 1 in location 1310
 104 run: {cursor-column: "number"} <- get {editor: ("address" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 1162
9999 mem: location 1145 is 1190
9999 mem: location 1146 is 0
9999 mem: location 1147 is 1598
9999 mem: location 1148 is 0
9999 mem: location 1149 is 9
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1
9999 mem: location 1152 is 4
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1614
9999 mem: location 1155 is 0
9999 mem: location 1309 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 4
9999 mem: storing 4 in location 1311
 104 run: {screen: ("address" "screen")} <- move-cursor {screen: ("address" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1307 is 1008
9999 mem: location 1310 is 1
9999 mem: location 1311 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1156
 105 run: {screen: ("address" "screen")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1008: 172 -> 173
9999 mem: storing 1008 in location 1159
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1160
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1161
 105 run: jump-unless {screen: ("address" "screen")}, {: "offset"}
9999 mem: location 1159 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1160 is 1
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "screen"), "lookup": ()} <- put {screen: ("address" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1161 is 4
9999 mem: location 1159 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1159 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1008 in location 1307
 104 run: {e: "event"}, {console: ("address" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "console")}
9999 mem: location 1308 is 1590
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1268
 105 run: {console: ("address" "console")} <- next-ingredient-without-typechecking 
9999 mem: incrementing refcount of 1590: 2 -> 3
9999 mem: storing 1590 in location 1271
 105 run: jump-unless {console: ("address" "console")}, {: "offset"}
9999 mem: location 1271 is 1590
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9999 mem: location 1591 is 1
9999 mem: location 1592 is 1584
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9998 run: address to copy is 1591
9998 run: its type is "number"
9999 mem: location 1591 is 1
9999 mem: storing 1 in location 1272
 105 run: {buf: ("address" "array" "event")} <- get {console: ("address" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9999 mem: location 1591 is 1
9999 mem: location 1592 is 1584
9999 mem: location 1271 is 1590
9999 mem: skipping refcount at 1590
9998 run: address to copy is 1592
9998 run: its type is ("address" "array" "event")
9999 mem: location 1592 is 1584
9999 mem: incrementing refcount of 1584: 2 -> 3
9999 mem: storing 1584 in location 1273
 105 run: {max: "number"} <- length {buf: ("address" "array" "event"), "lookup": ()}
9999 mem: location 1273 is 1584
9999 mem: skipping refcount at 1584
9999 mem: storing 1 in location 1274
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1272 is 1
9999 mem: location 1274 is 1
9999 mem: storing 1 in location 1275
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1275 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1593
9999 mem: incrementing refcount of 1593: 0 -> 1
9999 mem: storing 1593 in location 1276
 105 run: return {dummy: ("address" "event"), "lookup": ()}, {console: ("address" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1276 is 1593
9999 mem: skipping refcount at 1593
9999 mem: location 1594 is 0
9999 mem: location 1595 is 0
9999 mem: location 1596 is 0
9999 mem: location 1597 is 0
9999 mem: location 1271 is 1590
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1590
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1312
9999 mem: storing 0 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
9999 mem: copying address to itself; refcount unchanged
9999 mem: storing 1590 in location 1308
9999 mem: storing 1 in location 1316
9999 mem: storing 1 in location 1317
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1316 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1317 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "screen"), "same-as-ingredient": "0"}, {console: ("address" "console"), "same-as-ingredient": "1"}, {editor: ("address" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1307 is 1008
9999 mem: location 1308 is 1590
9999 mem: location 1309 is 1143
9999 abandon: saving in free-list of size 19
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .de01      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
