 102 run: assume-console {"\n    left-click 2, 0\n    press down-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: "literal"}
9993 parse:   ingredient: {0: "literal"}
9992 load: after rewriting: left-click {2: "literal"}, {0: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {down-arrow: ()}
9992 load: after rewriting: press {down-arrow: ()}
9999 mem: storing 'left-click' event starting at 1564
9999 mem: storing 'press' event starting at 1568
9999 mem: storing console in 1572
9999 mem: storing console data in 1574
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1003
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1003 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1003
9991 transform: --- rewrite 'stash' instructions in recipe run_1003
9991 transform: --- fill in reply ingredients from header for recipe run_1003
9991 transform: --- deduce types for recipe run_1003
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1003
9991 transform: --- collect surrounding spaces for recipe run_1003
9991 transform: --- transform names for recipe run_1003
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1003
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1003
9991 transform: --- transform braces for recipe run_1003
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1003
9991 transform: --- perform checks for recipe run_1003
9991 transform: --- type-check 'call' instructions inside recipe run_1003
9991 transform: --- type-check calls inside recipe run_1003
9991 transform: --- convert 'new' to 'allocate' for recipe run_1003
9991 transform: --- type-check merge instructions in recipe run_1003
9991 transform: --- check types of reply instructions in recipe run_1003
9991 transform: --- checking reply instructions against header for run_1003
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1572
9999 mem: location 2 is 1146
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1318
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 152 -> 153
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1572 in location 1322
9999 mem: incrementing refcount of 1572: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1323
9999 mem: incrementing refcount of 1146: 19 -> 20
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1162
9999 mem: incrementing refcount of 1008: 153 -> 154
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1164
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1162 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 3
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1162 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 154 -> 153
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 153 -> 154
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1572
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1282
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1572 in location 1285
9999 mem: incrementing refcount of 1572: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1285 is 1572
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 0
9999 mem: location 1574 is 1562
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy is 1573
9998 run: its type is "number"
9999 mem: location 1573 is 0
9999 mem: storing 0 in location 1286
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 0
9999 mem: location 1574 is 1562
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy is 1574
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1574 is 1562
9999 mem: storing 1562 in location 1287
9999 mem: incrementing refcount of 1562: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1287 is 1562
9999 mem: skipping refcount at 1562
9999 mem: storing 2 in location 1288
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1286 is 0
9999 mem: location 1288 is 2
9999 mem: storing 0 in location 1289
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1287 is 1562
9999 mem: skipping refcount at 1562
9998 run: base address is 1563
9999 mem: location 1286 is 0
9998 run: address to copy is 1564
9998 run: its type is event
9999 mem: location 1564 is 2
9999 mem: location 1565 is 65513
9999 mem: location 1566 is 2
9999 mem: location 1567 is 0
9999 mem: storing 2 in location 1291
9999 mem: storing 65513 in location 1292
9999 mem: storing 2 in location 1293
9999 mem: storing 0 in location 1294
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1286 is 0
9999 mem: storing 1 in location 1286
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 0
9999 mem: location 1574 is 1562
9999 mem: location 1286 is 1
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy to is 1573
9999 mem: storing 1 in location 1573
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1291 is 2
9999 mem: location 1292 is 65513
9999 mem: location 1293 is 2
9999 mem: location 1294 is 0
9999 mem: location 1285 is 1572
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 2, 0]
9998 run: result 1 is 1572
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1326
9999 mem: storing 65513 in location 1327
9999 mem: storing 2 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1572: 2 -> 1
9999 mem: storing 1572 in location 1322
9999 mem: incrementing refcount of 1572: 1 -> 2
9999 mem: storing 1 in location 1330
9999 mem: storing 0 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1326 is 2
9999 mem: location 1327 is 65513
9999 mem: location 1328 is 2
9999 mem: location 1329 is 0
9999 mem: storing 1327 in location 1332
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 1327
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1321 is 1008
9999 mem: location 1323 is 1146
9999 mem: location 1332 is 1327
9999 mem: location 1327 is 65513
9999 mem: location 1328 is 2
9999 mem: location 1329 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 abandon: picking up space from free-list of size 29
9999 mem: new alloc from free list: 1334
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1337
9999 mem: incrementing refcount of 1008: 154 -> 155
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1338
9999 mem: incrementing refcount of 1146: 20 -> 21
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1339
9999 mem: storing 2 in location 1340
9999 mem: storing 0 in location 1341
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1338 is 1146
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1339 is 65513
9999 mem: location 1340 is 2
9999 mem: location 1341 is 0
9998 run: address to copy is 1340
9998 run: its type is "number"
9999 mem: location 1340 is 2
9999 mem: storing 2 in location 1342
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1342 is 2
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1339 is 65513
9999 mem: location 1340 is 2
9999 mem: location 1341 is 0
9998 run: address to copy is 1341
9998 run: its type is "number"
9999 mem: location 1341 is 0
9999 mem: storing 0 in location 1343
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1344
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1343 is 0
9999 mem: location 1344 is 0
9999 mem: storing 0 in location 1345
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1345 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1346
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1343 is 0
9999 mem: location 1346 is 9
9999 mem: storing 0 in location 1347
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1347 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1348
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1349
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1203
9999 mem: storing 1203 in location 1350
9999 mem: incrementing refcount of 1203: 27 -> 28
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1337 is 1008
9999 mem: location 1338 is 1146
9999 mem: location 1342 is 2
9999 mem: location 1343 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 abandon: picking up space from free-list of size 28
9999 mem: new alloc from free list: 1363
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1366
9999 mem: incrementing refcount of 1008: 155 -> 156
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1367
9999 mem: incrementing refcount of 1146: 21 -> 22
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1368
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1369
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1367 is 1146
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1370
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1371
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1366 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1575
9999 mem: storing 3 in location 1576
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1578
9999 mem: incrementing refcount of 1008: 156 -> 157
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1578 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1578 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1578 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1579
 107 run: return {height: "number"}
9999 mem: location 1579 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1372
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1203
9999 mem: storing 1203 in location 1373
9999 mem: incrementing refcount of 1203: 28 -> 29
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1203
9999 mem: storing 1203 in location 1374
9999 mem: incrementing refcount of 1203: 29 -> 30
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1578
9999 mem: incrementing refcount of 1203: 30 -> 31
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1578 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1579
9999 mem: incrementing refcount of 1207: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 31 -> 30
9999 mem: storing 1207 in location 1373
9999 mem: incrementing refcount of 1207: 23 -> 24
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1375
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1370 is 0
9999 mem: storing 0 in location 1376
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1377
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1368 is 2
9999 mem: location 1377 is 1154
9999 mem: storing 2 in location 1154
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1378
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1369 is 0
9999 mem: location 1378 is 1155
9999 mem: storing 0 in location 1155
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 2
9999 mem: location 1155 is 0
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1367 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1379
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1207
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1372 is 5
9999 mem: storing 0 in location 1380
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 0 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1373 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1373 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is "character"
9999 mem: location 1208 is 100
9999 mem: storing 100 in location 1383
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1383 is 100
9999 mem: storing 0 in location 1384
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1376 is 0
9999 mem: location 1371 is 9
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1578
9999 mem: incrementing refcount of 1207: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1578 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1579
9999 mem: incrementing refcount of 1211: 25 -> 26
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 25 -> 24
9999 mem: storing 1211 in location 1373
9999 mem: incrementing refcount of 1211: 26 -> 27
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1578
9999 mem: incrementing refcount of 1203: 30 -> 31
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1203
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 10
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1199
9999 mem: location 1578 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1205
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1579
9999 mem: incrementing refcount of 1207: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 31 -> 30
9999 mem: storing 1207 in location 1374
9999 mem: incrementing refcount of 1207: 25 -> 26
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1376 is 0
9999 mem: storing 1 in location 1376
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1211
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1372 is 5
9999 mem: storing 0 in location 1380
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 0 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1373 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 1555
9999 mem: location 1214 is 1207
9999 mem: location 1373 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is "character"
9999 mem: location 1212 is 101
9999 mem: storing 101 in location 1383
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1383 is 101
9999 mem: storing 0 in location 1384
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1376 is 1
9999 mem: location 1371 is 9
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1578
9999 mem: incrementing refcount of 1211: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 1555
9999 mem: location 1214 is 1207
9999 mem: location 1578 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1555
9999 mem: storing 1555 in location 1579
9999 mem: incrementing refcount of 1555: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 1555
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1555
9999 mem: decrementing refcount of 1211: 28 -> 27
9999 mem: storing 1555 in location 1373
9999 mem: incrementing refcount of 1555: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1578
9999 mem: incrementing refcount of 1207: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1207
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1207
9999 mem: skipping refcount at 1207
9999 mem: location 1208 is 100
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1578 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1209
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1579
9999 mem: incrementing refcount of 1211: 27 -> 28
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 27 -> 26
9999 mem: storing 1211 in location 1374
9999 mem: incrementing refcount of 1211: 28 -> 29
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1376 is 1
9999 mem: storing 2 in location 1376
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 1555
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1372 is 5
9999 mem: storing 0 in location 1380
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1380 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 0 in location 1381
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1381 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1373 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1211
9999 mem: location 1373 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1556
9998 run: its type is "character"
9999 mem: location 1556 is 48
9999 mem: storing 48 in location 1383
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1383 is 48
9999 mem: storing 0 in location 1384
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1384 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1376 is 2
9999 mem: location 1371 is 9
9999 mem: storing 0 in location 1386
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1386 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1555
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1578
9999 mem: incrementing refcount of 1555: 9 -> 10
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1555
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1211
9999 mem: location 1578 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 0
9999 mem: storing 0 in location 1579
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1555: 10 -> 9
9999 mem: storing 0 in location 1373
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1578
9999 mem: incrementing refcount of 1211: 29 -> 30
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1211
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1211
9999 mem: skipping refcount at 1211
9999 mem: location 1212 is 101
9999 mem: location 1213 is 1555
9999 mem: location 1214 is 1207
9999 mem: location 1578 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1213
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1213 is 1555
9999 mem: storing 1555 in location 1579
9999 mem: incrementing refcount of 1555: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 1555
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1555
9999 mem: decrementing refcount of 1211: 30 -> 29
9999 mem: storing 1555 in location 1374
9999 mem: incrementing refcount of 1555: 10 -> 11
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1376 is 2
9999 mem: storing 3 in location 1376
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1373 is 0
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 0 in location 1381
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1376 is 3
9999 mem: location 1378 is 1155
9999 mem: location 1155 is 0
9999 mem: storing 0 in location 1387
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1381 is 0
9999 mem: location 1387 is 0
9999 mem: storing 0 in location 1388
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1154
9999 mem: location 1154 is 2
9999 mem: storing 1 in location 1389
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1388 is 0
9999 mem: location 1389 is 1
9999 mem: storing 1 in location 1390
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1390 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1375 is 1
9999 mem: location 1377 is 1154
9999 mem: storing 1 in location 1154
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1376 is 3
9999 mem: location 1378 is 1155
9999 mem: storing 3 in location 1155
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1374 is 1555
9999 mem: location 1379 is 1150
9999 mem: decrementing refcount of 1555: 11 -> 10
9999 mem: storing 1555 in location 1150
9999 mem: incrementing refcount of 1555: 10 -> 11
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1367 is 1146
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 22 -> 21
9999 mem: storing 1146 in location 1338
9999 mem: incrementing refcount of 1146: 21 -> 22
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1351
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1352
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1353
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1338 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1203
9999 mem: storing 1203 in location 1354
9999 mem: incrementing refcount of 1203: 30 -> 31
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1351 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1580
9999 mem: storing 1580 in location 1356
9999 mem: incrementing refcount of 1580: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1348 is 1
9999 mem: location 1349 is 3
9999 mem: location 1350 is 1203
9999 mem: location 1352 is 1
9999 mem: location 1353 is 3
9999 mem: location 1354 is 1203
9999 mem: location 1351 is 0
9999 mem: location 1356 is 1580
9999 mem: skipping refcount at 1580
9999 mem: location 1356 is 1580
9999 mem: skipping refcount at 1580
9999 mem: storing 1 in location 1581
9999 mem: storing 1 in location 1582
9999 mem: storing 3 in location 1583
9999 mem: storing 1203 in location 1584
9999 mem: storing 1 in location 1585
9999 mem: storing 3 in location 1586
9999 mem: storing 1203 in location 1587
9999 mem: storing 0 in location 1588
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1338 is 1146
9999 mem: location 1356 is 1580
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1182
9999 mem: incrementing refcount of 1146: 22 -> 23
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1580 in location 1183
9999 mem: incrementing refcount of 1580: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1559
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1183 is 1580
9999 mem: location 1184 is 1157
9999 mem: location 1157 is 1559
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1580 in location 1162
9999 mem: incrementing refcount of 1580: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1559 in location 1163
9999 mem: incrementing refcount of 1559: 2 -> 3
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1592
9999 mem: storing 1592 in location 1164
9999 mem: incrementing refcount of 1592: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1162 is 1580
9999 mem: location 1163 is 1559
9999 mem: location 1164 is 1592
9999 mem: skipping refcount at 1592
9999 mem: location 1164 is 1592
9999 mem: skipping refcount at 1592
9999 mem: storing 1580 in location 1593
9999 mem: storing 1559 in location 1594
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1164 is 1592
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1592
9999 mem: location 1184 is 1157
9999 mem: decrementing refcount of 1559: 3 -> 2
9999 mem: storing 1592 in location 1157
9999 mem: incrementing refcount of 1592: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1185 is 1158
9999 mem: storing 0 in location 1158
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1182 is 1146
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 23 -> 22
9999 mem: storing 1146 in location 1338
9999 mem: incrementing refcount of 1146: 22 -> 23
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1338 is 1146
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1162
9999 mem: incrementing refcount of 1008: 157 -> 158
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1164
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1162 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 3
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1162 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 157 -> 158
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1572
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1282
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1572 in location 1285
9999 mem: incrementing refcount of 1572: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1285 is 1572
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 1
9999 mem: location 1574 is 1562
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy is 1573
9998 run: its type is "number"
9999 mem: location 1573 is 1
9999 mem: storing 1 in location 1286
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 1
9999 mem: location 1574 is 1562
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy is 1574
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1574 is 1562
9999 mem: storing 1562 in location 1287
9999 mem: incrementing refcount of 1562: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1287 is 1562
9999 mem: skipping refcount at 1562
9999 mem: storing 2 in location 1288
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1286 is 1
9999 mem: location 1288 is 2
9999 mem: storing 0 in location 1289
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1287 is 1562
9999 mem: skipping refcount at 1562
9998 run: base address is 1563
9999 mem: location 1286 is 1
9998 run: address to copy is 1568
9998 run: its type is event
9999 mem: location 1568 is 1
9999 mem: location 1569 is 65516
9999 mem: location 1570 is 0
9999 mem: location 1571 is 0
9999 mem: storing 1 in location 1291
9999 mem: storing 65516 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1286 is 1
9999 mem: storing 2 in location 1286
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 1
9999 mem: location 1574 is 1562
9999 mem: location 1286 is 2
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy to is 1573
9999 mem: storing 2 in location 1573
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1291 is 1
9999 mem: location 1292 is 65516
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1285 is 1572
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65516, 0, 0]
9998 run: result 1 is 1572
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1326
9999 mem: storing 65516 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1572: 3 -> 2
9999 mem: storing 1572 in location 1322
9999 mem: incrementing refcount of 1572: 2 -> 3
9999 mem: storing 1 in location 1330
9999 mem: storing 0 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1326 is 1
9999 mem: location 1327 is 65516
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1332
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1321 is 1008
9999 mem: location 1323 is 1146
9999 mem: location 1326 is 1
9999 mem: location 1327 is 65516
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1394
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 158 -> 159
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1398
9999 mem: incrementing refcount of 1146: 23 -> 24
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1399
9999 mem: storing 65516 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1403
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1398 is 1146
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1578
9999 mem: incrementing refcount of 1008: 159 -> 160
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1578 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1578 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1578 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1579
 106 run: return {width: "number"}
9999 mem: location 1579 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1404
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1578
9999 mem: incrementing refcount of 1008: 160 -> 161
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1578 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1578 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1578 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1579
 106 run: return {height: "number"}
9999 mem: location 1579 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1405
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1406
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1407
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1408
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1409
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1410
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1409 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1411
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1412
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1399 is 1
9999 mem: location 1400 is 65516
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: storing 0 in location 1413
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1413 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1399 is 1
9999 mem: location 1400 is 65516
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: storing 1400 in location 1467
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1467 is 1400
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65516
9999 mem: storing 0 in location 1430
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65516
9999 mem: storing 0 in location 1446
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65516
9999 mem: storing 0 in location 1453
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65516
9999 mem: storing 0 in location 1454
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1467 is 1400
9999 mem: location 1400 is 65516
9999 mem: storing 1 in location 1468
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1468 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1433
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1434
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1203
9999 mem: storing 1203 in location 1435
9999 mem: incrementing refcount of 1203: 31 -> 32
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-to-next-line {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1398 is 1146
9999 mem: location 1405 is 5
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1260
9999 mem: incrementing refcount of 1146: 24 -> 25
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1261
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1262
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1263
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1264
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1265
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1260 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1266
 106 run: {last-line: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1261 is 5
9999 mem: storing 4 in location 1267
 106 run: {already-at-bottom?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {last-line: "number"}
9999 mem: location 1262 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1267 is 4
9999 mem: storing 0 in location 1268
 106 run: jump-if {already-at-bottom?: "boolean"}, {: "offset"}
9999 mem: location 1268 is 0
9998 run: jump-if fell through
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1266 is 9
9999 mem: location 1265 is 0
9999 mem: storing 9 in location 1269
 106 run: {next-line: ("address" "shared" "duplex-list" "character")} <- before-start-of-next-line {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {max: "number"}
9999 mem: location 1264 is 1150
9999 mem: location 1150 is 1555
9999 mem: location 1269 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1169
 107 run: {original: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1172
9999 mem: incrementing refcount of 1555: 11 -> 12
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1173
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1174
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1172 is 1555
9999 mem: storing 1555 in location 1175
9999 mem: incrementing refcount of 1555: 12 -> 13
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1175 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1211
9999 mem: location 1175 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1556
9998 run: its type is "character"
9999 mem: location 1556 is 48
9999 mem: storing 48 in location 1176
9990 schedule: before-start-of-next-line/move-to-next-line/handle-keyboard-event/editor-event-loop/run_1003/scenario_editor-scrolls-at-end-on-down-arrow
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1176 is 48
9999 mem: storing 0 in location 1177
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jumping to instruction 11
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1175 is 1555
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1174 is 0
9999 mem: location 1173 is 9
9999 mem: storing 0 in location 1178
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1178 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1175 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1211
9999 mem: location 1175 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1556
9998 run: its type is "character"
9999 mem: location 1556 is 48
9999 mem: storing 48 in location 1176
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1176 is 48
9999 mem: storing 0 in location 1177
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1175 is 1555
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1578
9999 mem: incrementing refcount of 1555: 13 -> 14
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1578 is 1555
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1578 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1211
9999 mem: location 1578 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 0
9999 mem: storing 0 in location 1579
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1579 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1555: 14 -> 13
9999 mem: storing 0 in location 1175
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1174 is 0
9999 mem: storing 1 in location 1174
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1175 is 0
9998 run: jump-if fell through
 107 run: reply {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1172 is 1555
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1555
9999 mem: storing 1555 in location 1270
9999 mem: incrementing refcount of 1555: 13 -> 14
 106 run: {no-motion?: "boolean"} <- equal {next-line: ("address" "shared" "duplex-list" "character")}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1270 is 1555
9999 mem: location 1264 is 1150
9999 mem: location 1150 is 1555
9999 mem: storing 1 in location 1271
 106 run: jump-unless {no-motion?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 1
9998 run: jump-unless fell through
 106 run: {scroll?: "boolean"} <- greater-than {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1262 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 0 in location 1272
 106 run: jump-if {scroll?: "boolean"}, {+try-to-scroll: "label"}
9999 mem: location 1272 is 0
9998 run: jump-if fell through
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1273
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1260 is 1146
9999 mem: location 1273 is 0
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1146: 25 -> 24
9999 mem: storing 1146 in location 1398
9999 mem: incrementing refcount of 1146: 24 -> 25
9999 mem: storing 0 in location 1403
 105 run: {undo-coalesce-tag: "number"} <- copy {4: "literal", "down-arrow": ()}
9999 mem: storing 4 in location 1436
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1437
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1438
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1203
9999 mem: storing 1203 in location 1439
9999 mem: incrementing refcount of 1203: 32 -> 33
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1436 is 4
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1417
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1417 is 1157
9999 mem: location 1157 is 1592
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1417 is 1157
9999 mem: location 1157 is 1592
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1592 in location 1578
9999 mem: incrementing refcount of 1592: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1578 is 1592
9999 mem: skipping refcount at 1592
9999 mem: location 1593 is 1580
9999 mem: location 1594 is 1559
9999 mem: location 1578 is 1592
9999 mem: skipping refcount at 1592
9998 run: address to copy is 1593
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1593 is 1580
9999 mem: storing 1580 in location 1579
9999 mem: incrementing refcount of 1580: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1579 is 1580
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1580
9999 mem: storing 1580 in location 1416
9999 mem: incrementing refcount of 1580: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1416 is 1580
9999 mem: skipping refcount at 1580
9999 mem: location 1581 is 1
9999 mem: location 1582 is 1
9999 mem: location 1583 is 3
9999 mem: location 1584 is 1203
9999 mem: location 1585 is 1
9999 mem: location 1586 is 3
9999 mem: location 1587 is 1203
9999 mem: location 1588 is 0
9999 mem: location 1589 is 0
9999 mem: location 1590 is 0
9999 mem: location 1591 is 0
9999 mem: location 1416 is 1580
9999 mem: skipping refcount at 1580
9999 mem: storing 1582 in location 1422
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1422 is 1582
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1422 is 1582
9999 mem: location 1582 is 1
9999 mem: location 1583 is 3
9999 mem: location 1584 is 1203
9999 mem: location 1585 is 1
9999 mem: location 1586 is 3
9999 mem: location 1587 is 1203
9999 mem: location 1588 is 0
9999 mem: location 1422 is 1582
9998 run: address to copy is 1588
9998 run: its type is "number"
9999 mem: location 1588 is 0
9999 mem: storing 0 in location 1440
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1436 is 4
9999 mem: location 1440 is 0
9999 mem: storing 0 in location 1441
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1441 is 0
9998 run: jumping to instruction 629
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1595
9999 mem: decrementing refcount of 1580: 5 -> 4
9999 mem: storing 1595 in location 1416
9999 mem: incrementing refcount of 1595: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1433 is 1
9999 mem: location 1434 is 3
9999 mem: location 1435 is 1203
9999 mem: location 1437 is 1
9999 mem: location 1438 is 3
9999 mem: location 1439 is 1203
9999 mem: location 1436 is 4
9999 mem: location 1416 is 1595
9999 mem: skipping refcount at 1595
9999 mem: location 1416 is 1595
9999 mem: skipping refcount at 1595
9999 mem: storing 1 in location 1596
9999 mem: storing 1 in location 1597
9999 mem: storing 3 in location 1598
9999 mem: storing 1203 in location 1599
9999 mem: storing 1 in location 1600
9999 mem: storing 3 in location 1601
9999 mem: storing 1203 in location 1602
9999 mem: storing 4 in location 1603
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1398 is 1146
9999 mem: location 1416 is 1595
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1182
9999 mem: incrementing refcount of 1146: 25 -> 26
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1595 in location 1183
9999 mem: incrementing refcount of 1595: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1592
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1183 is 1595
9999 mem: location 1184 is 1157
9999 mem: location 1157 is 1592
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1595 in location 1162
9999 mem: incrementing refcount of 1595: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1592 in location 1163
9999 mem: incrementing refcount of 1592: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1607
9999 mem: storing 1607 in location 1164
9999 mem: incrementing refcount of 1607: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1162 is 1595
9999 mem: location 1163 is 1592
9999 mem: location 1164 is 1607
9999 mem: skipping refcount at 1607
9999 mem: location 1164 is 1607
9999 mem: skipping refcount at 1607
9999 mem: storing 1595 in location 1608
9999 mem: storing 1592 in location 1609
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1164 is 1607
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1607
9999 mem: location 1184 is 1157
9999 mem: decrementing refcount of 1592: 4 -> 3
9999 mem: storing 1607 in location 1157
9999 mem: incrementing refcount of 1607: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1185 is 1158
9999 mem: storing 0 in location 1158
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1182 is 1146
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 26 -> 25
9999 mem: storing 1146 in location 1398
9999 mem: incrementing refcount of 1146: 25 -> 26
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1008
9999 mem: location 1398 is 1146
9999 mem: location 1403 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1146
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 161 -> 160
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 160 -> 161
9999 mem: decrementing refcount of 1146: 26 -> 25
9999 mem: storing 1146 in location 1323
9999 mem: incrementing refcount of 1146: 25 -> 26
9999 mem: storing 0 in location 1333
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1162
9999 mem: incrementing refcount of 1008: 161 -> 162
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1164
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1162 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 3
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1162 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 162 -> 161
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 161 -> 162
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1572
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1282
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1572 in location 1285
9999 mem: incrementing refcount of 1572: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1285 is 1572
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 2
9999 mem: location 1574 is 1562
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy is 1573
9998 run: its type is "number"
9999 mem: location 1573 is 2
9999 mem: storing 2 in location 1286
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9999 mem: location 1573 is 2
9999 mem: location 1574 is 1562
9999 mem: location 1285 is 1572
9999 mem: skipping refcount at 1572
9998 run: address to copy is 1574
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1574 is 1562
9999 mem: storing 1562 in location 1287
9999 mem: incrementing refcount of 1562: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1287 is 1562
9999 mem: skipping refcount at 1562
9999 mem: storing 2 in location 1288
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1286 is 2
9999 mem: location 1288 is 2
9999 mem: storing 1 in location 1289
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1575
9999 mem: storing 1575 in location 1290
9999 mem: incrementing refcount of 1575: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1290 is 1575
9999 mem: skipping refcount at 1575
9999 mem: location 1576 is 0
9999 mem: location 1577 is 0
9999 mem: location 1578 is 0
9999 mem: location 1579 is 0
9999 mem: location 1285 is 1572
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1572
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1572: 4 -> 3
9999 mem: storing 1572 in location 1322
9999 mem: incrementing refcount of 1572: 3 -> 4
9999 mem: storing 1 in location 1330
9999 mem: storing 1 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1321 is 1008
9999 mem: location 1322 is 1572
9999 mem: location 1323 is 1146
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 2 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label {0: "literal"}, {"print-character": "literal-string"}
 102 run: assume-console {"\n    type [1]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"1": "literal-string"}
9992 load: after rewriting: type {"1": "literal-string"}
9999 mem: storing 'type' event starting at 1612
9999 mem: storing 'text' tag at 1612
9999 mem: storing character 49 at 1613
9999 mem: storing console in 1616
9999 mem: storing console data in 1618
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n  ": "literal-string"}
9991 parse: --- defining run_1004
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 parse: recipe run_1004 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1004
9991 transform: --- rewrite 'stash' instructions in recipe run_1004
9991 transform: --- fill in reply ingredients from header for recipe run_1004
9991 transform: --- deduce types for recipe run_1004
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1004
9991 transform: --- collect surrounding spaces for recipe run_1004
9991 transform: --- transform names for recipe run_1004
9991 transform: --- resolve ambiguous calls for recipe run_1004
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1004
9991 transform: --- transform braces for recipe run_1004
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1004
9991 transform: --- perform checks for recipe run_1004
9991 transform: --- type-check 'call' instructions inside recipe run_1004
9991 transform: --- type-check calls inside recipe run_1004
9991 transform: --- convert 'new' to 'allocate' for recipe run_1004
9991 transform: --- type-check merge instructions in recipe run_1004
9991 transform: --- check types of reply instructions in recipe run_1004
9991 transform: --- checking reply instructions against header for run_1004
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1616
9999 mem: location 2 is 1146
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1318
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 162 -> 163
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1616 in location 1322
9999 mem: incrementing refcount of 1616: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1323
9999 mem: incrementing refcount of 1146: 26 -> 27
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1162
9999 mem: incrementing refcount of 1008: 163 -> 164
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1164
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1162 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 3
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1162 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 164 -> 163
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 163 -> 164
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1616
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1282
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1616 in location 1285
9999 mem: incrementing refcount of 1616: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1285 is 1616
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 0
9999 mem: location 1618 is 1610
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1617
9998 run: its type is "number"
9999 mem: location 1617 is 0
9999 mem: storing 0 in location 1286
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 0
9999 mem: location 1618 is 1610
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1618
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1618 is 1610
9999 mem: storing 1610 in location 1287
9999 mem: incrementing refcount of 1610: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1287 is 1610
9999 mem: skipping refcount at 1610
9999 mem: storing 1 in location 1288
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1286 is 0
9999 mem: location 1288 is 1
9999 mem: storing 0 in location 1289
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: "number"}
9999 mem: location 1287 is 1610
9999 mem: skipping refcount at 1610
9998 run: base address is 1611
9999 mem: location 1286 is 0
9998 run: address to copy is 1612
9998 run: its type is event
9999 mem: location 1612 is 0
9999 mem: location 1613 is 49
9999 mem: location 1614 is 0
9999 mem: location 1615 is 0
9999 mem: storing 0 in location 1291
9999 mem: storing 49 in location 1292
9999 mem: storing 0 in location 1293
9999 mem: storing 0 in location 1294
 105 run: {current-event-index: "number"} <- add {current-event-index: "number"}, {1: "literal"}
9999 mem: location 1286 is 0
9999 mem: storing 1 in location 1286
 105 run: {console: ("address" "shared" "console"), "lookup": ()} <- put {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}, {current-event-index: "number"}
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 0
9999 mem: location 1618 is 1610
9999 mem: location 1286 is 1
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy to is 1617
9999 mem: storing 1 in location 1617
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1291 is 0
9999 mem: location 1292 is 49
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1285 is 1616
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 49, 0, 0]
9998 run: result 1 is 1616
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1326
9999 mem: storing 49 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1616: 2 -> 1
9999 mem: storing 1616 in location 1322
9999 mem: incrementing refcount of 1616: 1 -> 2
9999 mem: storing 1 in location 1330
9999 mem: storing 0 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1326 is 0
9999 mem: location 1327 is 49
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 mem: storing 0 in location 1332
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1332 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1321 is 1008
9999 mem: location 1323 is 1146
9999 mem: location 1326 is 0
9999 mem: location 1327 is 49
9999 mem: location 1328 is 0
9999 mem: location 1329 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1394
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 164 -> 165
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1398
9999 mem: incrementing refcount of 1146: 27 -> 28
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1399
9999 mem: storing 49 in location 1400
9999 mem: storing 0 in location 1401
9999 mem: storing 0 in location 1402
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1403
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1398 is 1146
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1619
9999 mem: storing 3 in location 1620
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1622
9999 mem: incrementing refcount of 1008: 165 -> 166
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1622 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1623
 106 run: return {width: "number"}
9999 mem: location 1623 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1404
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1622
9999 mem: incrementing refcount of 1008: 166 -> 167
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1622 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1623
 106 run: return {height: "number"}
9999 mem: location 1623 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1405
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1406
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1407
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1408
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1409
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1410
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1409 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1411
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1410 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1412
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1399 is 0
9999 mem: location 1400 is 49
9999 mem: location 1401 is 0
9999 mem: location 1402 is 0
9999 mem: storing 1400 in location 1413
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1413 is 1400
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1414
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1414 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1425
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 0
9998 run: jumping to instruction 108
 105 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1430
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1430 is 0
9998 run: jumping to instruction 149
 105 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1446
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1446 is 0
9998 run: jumping to instruction 190
 105 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1447
 105 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1447 is 0
9998 run: jumping to instruction 210
 105 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1452
 105 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1452 is 0
9998 run: jumping to instruction 230
 105 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1453
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 0
9998 run: jumping to instruction 268
 105 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1454
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1454 is 0
9998 run: jumping to instruction 306
 105 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1455
 105 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1455 is 0
9998 run: jumping to instruction 346
 105 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1459
 105 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1459 is 0
9998 run: jumping to instruction 383
 105 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 0 in location 1463
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1463 is 0
9998 run: jumping to instruction 402
 105 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: storing 1 in location 1466
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1403
 105 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1466 is 1
9998 run: jumping to instruction 407
 105 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1203
9999 mem: storing 1203 in location 1448
9999 mem: incrementing refcount of 1203: 33 -> 34
 105 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1408 is 1150
9999 mem: location 1150 is 1555
9999 mem: storing 1555 in location 1460
9999 mem: incrementing refcount of 1555: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1398 is 1146
9999 mem: location 1413 is 1400
9999 mem: location 1400 is 49
9999 mem: location 1397 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1522
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1525
9999 mem: incrementing refcount of 1146: 28 -> 29
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1526
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1527
9999 mem: incrementing refcount of 1008: 167 -> 168
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1555
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1528
 106 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1526 is 49
9999 mem: location 1528 is 1150
9999 mem: location 1150 is 1555
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 107 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1182
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1183
9999 mem: incrementing refcount of 1555: 15 -> 16
 107 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1624
9999 mem: storing 1624 in location 1184
9999 mem: incrementing refcount of 1624: 0 -> 1
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1184 is 1624
9999 mem: skipping refcount at 1624
9999 mem: location 1625 is 0
9999 mem: location 1626 is 0
9999 mem: location 1627 is 0
9999 mem: location 1182 is 49
9999 mem: location 1184 is 1624
9999 mem: skipping refcount at 1624
9998 run: address to copy to is 1625
9999 mem: storing 49 in location 1625
 107 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1183 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1211
9999 mem: location 1183 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 0
9999 mem: storing 0 in location 1185
 107 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 0
9999 mem: location 1558 is 1211
9999 mem: location 1184 is 1624
9999 mem: location 1183 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy to is 1557
9999 mem: storing 1624 in location 1557
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1624
9999 mem: skipping refcount at 1624
9999 mem: location 1625 is 49
9999 mem: location 1626 is 0
9999 mem: location 1627 is 0
9999 mem: location 1183 is 1555
9999 mem: location 1184 is 1624
9999 mem: skipping refcount at 1624
9998 run: address to copy to is 1627
9999 mem: storing 1555 in location 1627
 107 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1624
9999 mem: skipping refcount at 1624
9999 mem: location 1625 is 49
9999 mem: location 1626 is 0
9999 mem: location 1627 is 1555
9999 mem: location 1185 is 0
9999 mem: location 1184 is 1624
9999 mem: skipping refcount at 1624
9998 run: address to copy to is 1626
9999 mem: storing 0 in location 1626
 107 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1185 is 0
9998 run: jump-if fell through
 107 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1183 is 1555
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 6
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1528 is 1150
9999 mem: location 1150 is 1555
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1622
9999 mem: incrementing refcount of 1555: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1622 is 1555
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1622 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1624
9999 mem: location 1558 is 1211
9999 mem: location 1622 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 1624
9999 mem: storing 1624 in location 1623
9999 mem: incrementing refcount of 1624: 1 -> 2
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1623 is 1624
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1624
9999 mem: location 1528 is 1150
9999 mem: decrementing refcount of 1555: 17 -> 16
9999 mem: storing 1624 in location 1150
9999 mem: incrementing refcount of 1624: 2 -> 3
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9999 mem: storing 1154 in location 1529
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9999 mem: storing 1155 in location 1530
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1151
9998 run: its type is "number"
9999 mem: location 1151 is 0
9999 mem: storing 0 in location 1531
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 3
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1525 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1152
9998 run: its type is "number"
9999 mem: location 1152 is 9
9999 mem: storing 9 in location 1532
 106 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1529 is 1154
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1533
 106 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1530 is 1155
9999 mem: location 1155 is 3
9999 mem: storing 3 in location 1534
 106 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1527 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1622
9999 mem: incrementing refcount of 1008: 168 -> 169
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1622 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1623
 107 run: return {width: "number"}
9999 mem: location 1623 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1535
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1527 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1622
9999 mem: incrementing refcount of 1008: 169 -> 170
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1622 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1622 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1623
 107 run: return {height: "number"}
9999 mem: location 1623 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1536
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1532 is 9
9999 mem: storing 8 in location 1537
 106 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1530 is 1155
9999 mem: location 1155 is 3
9999 mem: location 1537 is 8
9999 mem: storing 0 in location 1538
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1538 is 0
9998 run: jumping to instruction 41
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1530 is 1155
9999 mem: location 1155 is 3
9999 mem: location 1530 is 1155
9999 mem: storing 4 in location 1155
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1528 is 1150
9999 mem: location 1150 is 1624
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1624 in location 1622
9999 mem: incrementing refcount of 1624: 3 -> 4
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1622 is 1624
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1622 is 1624
9999 mem: skipping refcount at 1624
9999 mem: location 1625 is 49
9999 mem: location 1626 is 0
9999 mem: location 1627 is 1555
9999 mem: location 1622 is 1624
9999 mem: skipping refcount at 1624
9998 run: address to copy is 1626
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1626 is 0
9999 mem: storing 0 in location 1623
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1623 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1545
 106 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1545 is 0
9999 mem: storing 1 in location 1546
 106 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1546 is 1
9998 run: jump-unless fell through
 106 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1536 is 5
9999 mem: storing 4 in location 1547
 106 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1533 is 1
9999 mem: location 1547 is 4
9999 mem: storing 0 in location 1548
 106 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1534 is 3
9999 mem: location 1532 is 9
9999 mem: storing 0 in location 1549
 106 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1548 is 0
9999 mem: location 1549 is 0
9999 mem: storing 0 in location 1550
 106 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1550 is 0
9998 run: jump-if fell through
 106 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1527 is 1008
9999 mem: location 1533 is 1
9999 mem: location 1534 is 3
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1162
9999 mem: incrementing refcount of 1008: 170 -> 171
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1164
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1162 is 1008
9998 run: jump-unless fell through
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 3
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1162 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1527 is 1008
9999 mem: location 1526 is 49
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 23
9999 mem: allocating size 25
9999 abandon: picking up space from free-list of size 25
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 171 -> 172
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 49 in location 1261
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1262
9999 mem: storing 0 in location 1263
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1263 is 0
9998 run: jump-if fell through
 107 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1262
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1264
9999 mem: storing 0 in location 1265
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1264
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1261 is 49
  90 print-character: 49 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1260 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1266
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1267
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1268
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1268 is 1
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1267 is 5
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 25
 107 run: {column: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9998 run: its type is "number"
9999 mem: location 1012 is 3
9999 mem: storing 3 in location 1270
 107 run: {legal?: "boolean"} <- greater-or-equal {column: "number"}, {0: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: "number"}, {width: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1266 is 10
9999 mem: storing 1 in location 1269
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1269 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1261 is 49
9999 mem: storing 0 in location 1271
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 45
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1268 is 1
9999 mem: location 1266 is 10
9999 mem: storing 10 in location 1274
 107 run: {index: "number"} <- add {index: "number"}, {column: "number"}
9999 mem: location 1274 is 10
9999 mem: location 1270 is 3
9999 mem: storing 13 in location 1274
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1275
9999 mem: incrementing refcount of 1014: 95 -> 96
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1276
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1261 is 49
9999 mem: storing 0 in location 1277
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1277 is 0
9998 run: jumping to instruction 63
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1275 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1274 is 13
9999 mem: storing 1042 in location 1279
 107 run: {cursor: ("address" "screen-cell"), "lookup": ()} <- merge {c: "character"}, {color: "number"}
9999 mem: location 1261 is 49
9999 mem: location 1262 is 7
9999 mem: location 1279 is 1042
9999 mem: location 1279 is 1042
9999 mem: storing 49 in location 1042
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1266 is 10
9999 mem: storing 9 in location 1280
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: "number"}, {right: "number"}
9999 mem: location 1270 is 3
9999 mem: location 1280 is 9
9999 mem: storing 0 in location 1281
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 0
9998 run: jump-if fell through
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1270 is 3
9999 mem: storing 4 in location 1270
 107 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {column: "number"}
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1270 is 4
9999 mem: location 1260 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 25
9999 trace: reply: decrementing callstack depth from 6
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1544
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1525 is 1146
9999 mem: location 1527 is 1008
9999 mem: location 1544 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1146: 29 -> 28
9999 mem: storing 1146 in location 1398
9999 mem: incrementing refcount of 1146: 28 -> 29
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1397
9999 mem: incrementing refcount of 1008: 171 -> 172
9999 mem: storing 0 in location 1403
 105 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 4
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1148
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1148 is 1203
9999 mem: storing 1203 in location 1450
9999 mem: incrementing refcount of 1203: 34 -> 35
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 4
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1398 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1417
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1417 is 1157
9999 mem: location 1157 is 1607
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1417 is 1157
9999 mem: location 1157 is 1607
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1607 in location 1622
9999 mem: incrementing refcount of 1607: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1622 is 1607
9999 mem: skipping refcount at 1607
9999 mem: location 1608 is 1595
9999 mem: location 1609 is 1592
9999 mem: location 1622 is 1607
9999 mem: skipping refcount at 1607
9998 run: address to copy is 1608
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1608 is 1595
9999 mem: storing 1595 in location 1623
9999 mem: incrementing refcount of 1595: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1623 is 1595
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1595
9999 mem: storing 1595 in location 1416
9999 mem: incrementing refcount of 1595: 4 -> 5
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1416 is 1595
9999 mem: skipping refcount at 1595
9999 mem: location 1596 is 1
9999 mem: location 1597 is 1
9999 mem: location 1598 is 3
9999 mem: location 1599 is 1203
9999 mem: location 1600 is 1
9999 mem: location 1601 is 3
9999 mem: location 1602 is 1203
9999 mem: location 1603 is 4
9999 mem: location 1604 is 0
9999 mem: location 1605 is 0
9999 mem: location 1606 is 0
9999 mem: location 1416 is 1595
9999 mem: skipping refcount at 1595
9999 mem: storing 0 in location 1423
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 429
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1460 is 1555
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1555 in location 1622
9999 mem: incrementing refcount of 1555: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1622 is 1555
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1622 is 1555
9999 mem: skipping refcount at 1555
9999 mem: location 1556 is 48
9999 mem: location 1557 is 1624
9999 mem: location 1558 is 1211
9999 mem: location 1622 is 1555
9999 mem: skipping refcount at 1555
9998 run: address to copy is 1557
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1557 is 1624
9999 mem: storing 1624 in location 1623
9999 mem: incrementing refcount of 1624: 4 -> 5
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1623 is 1624
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1624
9999 mem: storing 1624 in location 1424
9999 mem: incrementing refcount of 1624: 5 -> 6
 105 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1424 is 1624
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1624 in location 1622
9999 mem: incrementing refcount of 1624: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1622 is 1624
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1622 is 1624
9999 mem: skipping refcount at 1624
9999 mem: location 1625 is 49
9999 mem: location 1626 is 0
9999 mem: location 1627 is 1555
9999 mem: location 1622 is 1624
9999 mem: skipping refcount at 1624
9998 run: address to copy is 1626
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1626 is 0
9999 mem: storing 0 in location 1623
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1623 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1462
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1628
9999 mem: decrementing refcount of 1595: 5 -> 4
9999 mem: storing 1628 in location 1416
9999 mem: incrementing refcount of 1628: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1411 is 1
9999 mem: location 1412 is 3
9999 mem: location 1448 is 1203
9999 mem: location 1409 is 1154
9999 mem: location 1154 is 1
9999 mem: location 1410 is 1155
9999 mem: location 1155 is 4
9999 mem: location 1450 is 1203
9999 mem: location 1424 is 1624
9999 mem: location 1462 is 0
9999 mem: location 1416 is 1628
9999 mem: skipping refcount at 1628
9999 mem: location 1416 is 1628
9999 mem: skipping refcount at 1628
9999 mem: storing 0 in location 1629
9999 mem: storing 1 in location 1630
9999 mem: storing 3 in location 1631
9999 mem: storing 1203 in location 1632
9999 mem: storing 1 in location 1633
9999 mem: storing 4 in location 1634
9999 mem: storing 1203 in location 1635
9999 mem: storing 1624 in location 1636
9999 mem: storing 0 in location 1637
9999 mem: storing 1 in location 1638
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1398 is 1146
9999 mem: location 1416 is 1628
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1179
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1146 in location 1182
9999 mem: incrementing refcount of 1146: 29 -> 30
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1628 in location 1183
9999 mem: incrementing refcount of 1628: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 4
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1607
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1157
9999 mem: storing 1157 in location 1184
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1183 is 1628
9999 mem: location 1184 is 1157
9999 mem: location 1157 is 1607
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1628 in location 1162
9999 mem: incrementing refcount of 1628: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1607 in location 1163
9999 mem: incrementing refcount of 1607: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1640
9999 mem: storing 1640 in location 1164
9999 mem: incrementing refcount of 1640: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1162 is 1628
9999 mem: location 1163 is 1607
9999 mem: location 1164 is 1640
9999 mem: skipping refcount at 1640
9999 mem: location 1164 is 1640
9999 mem: skipping refcount at 1640
9999 mem: storing 1628 in location 1641
9999 mem: storing 1607 in location 1642
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1164 is 1640
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1640
9999 mem: location 1184 is 1157
9999 mem: decrementing refcount of 1607: 4 -> 3
9999 mem: storing 1640 in location 1157
9999 mem: incrementing refcount of 1640: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 4
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1640
9999 mem: location 1158 is 0
9999 mem: location 1182 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1158
9999 mem: storing 1158 in location 1185
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1185 is 1158
9999 mem: storing 0 in location 1158
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1182 is 1146
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1146
9999 mem: decrementing refcount of 1146: 30 -> 29
9999 mem: storing 1146 in location 1398
9999 mem: incrementing refcount of 1146: 29 -> 30
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1008
9999 mem: location 1398 is 1146
9999 mem: location 1403 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1146
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 171 -> 172
9999 mem: decrementing refcount of 1146: 30 -> 29
9999 mem: storing 1146 in location 1323
9999 mem: incrementing refcount of 1146: 29 -> 30
9999 mem: storing 0 in location 1333
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jumping to instruction 25
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 4
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1640
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1154
9998 run: its type is "number"
9999 mem: location 1154 is 1
9999 mem: storing 1 in location 1324
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9999 mem: location 1147 is 1165
9999 mem: location 1148 is 1203
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1624
9999 mem: location 1151 is 0
9999 mem: location 1152 is 9
9999 mem: location 1153 is 1
9999 mem: location 1154 is 1
9999 mem: location 1155 is 4
9999 mem: location 1156 is 1
9999 mem: location 1157 is 1640
9999 mem: location 1158 is 0
9999 mem: location 1323 is 1146
9999 mem: skipping refcount at 1146
9998 run: address to copy is 1155
9998 run: its type is "number"
9999 mem: location 1155 is 4
9999 mem: storing 4 in location 1325
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1321 is 1008
9999 mem: location 1324 is 1
9999 mem: location 1325 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1159
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1162
9999 mem: incrementing refcount of 1008: 172 -> 173
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1163
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1164
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1162 is 1008
9998 run: jump-unless fell through
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {new-row: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1163 is 1
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 1 in location 1011
 105 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {new-column: "number"}
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1164 is 4
9999 mem: location 1162 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1162 is 1008
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 173 -> 172
9999 mem: storing 1008 in location 1321
9999 mem: incrementing refcount of 1008: 172 -> 173
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1322 is 1616
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1282
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1616 in location 1285
9999 mem: incrementing refcount of 1616: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1285 is 1616
9998 run: jump-unless fell through
 105 run: {current-event-index: "number"} <- get {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 1
9999 mem: location 1618 is 1610
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1617
9998 run: its type is "number"
9999 mem: location 1617 is 1
9999 mem: storing 1 in location 1286
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9999 mem: location 1617 is 1
9999 mem: location 1618 is 1610
9999 mem: location 1285 is 1616
9999 mem: skipping refcount at 1616
9998 run: address to copy is 1618
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1618 is 1610
9999 mem: storing 1610 in location 1287
9999 mem: incrementing refcount of 1610: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1287 is 1610
9999 mem: skipping refcount at 1610
9999 mem: storing 1 in location 1288
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: "number"}, {max: "number"}
9999 mem: location 1286 is 1
9999 mem: location 1288 is 1
9999 mem: storing 1 in location 1289
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1289 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1619
9999 mem: storing 1619 in location 1290
9999 mem: incrementing refcount of 1619: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1290 is 1619
9999 mem: skipping refcount at 1619
9999 mem: location 1620 is 0
9999 mem: location 1621 is 0
9999 mem: location 1622 is 0
9999 mem: location 1623 is 0
9999 mem: location 1285 is 1616
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1616
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1326
9999 mem: storing 0 in location 1327
9999 mem: storing 0 in location 1328
9999 mem: storing 0 in location 1329
9999 mem: decrementing refcount of 1616: 3 -> 2
9999 mem: storing 1616 in location 1322
9999 mem: incrementing refcount of 1616: 2 -> 3
9999 mem: storing 1 in location 1330
9999 mem: storing 1 in location 1331
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1330 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1331 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1321 is 1008
9999 mem: location 1322 is 1616
9999 mem: location 1323 is 1146
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .de01      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
