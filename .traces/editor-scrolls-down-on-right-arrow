9991 parse: --- defining scenario_editor-scrolls-down-on-right-arrow
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {5: "literal", "width": ()}
9993 parse:   ingredient: {4: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {5: "literal", "width": ()}, {4: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"a\nb\ncdefgh": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"a\nb\ncdefgh": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {5: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    left-click 3, 3\n    press right-arrow\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    left-click 3, 3\n    press right-arrow\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .     .\n    .b    .\n    .cdef↩.\n    .gh   .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .     .\n    .b    .\n    .cdef↩.\n    .gh   .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 3\n    4 <- 0\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 3\n    4 <- 0\n  ": "literal-string"}
9999 parse: recipe scenario_editor-scrolls-down-on-right-arrow has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- deduce types for recipe scenario_editor-scrolls-down-on-right-arrow
9992 transform: screen => ("address" "shared" "screen")
9991 transform: --- check for invalid types in recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- collect surrounding spaces for recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- transform names for recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-scrolls-down-on-right-arrow
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {5: "literal", "width": ()}, {4: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9991 transform: --- compute instruction operations for recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- transform braces for recipe scenario_editor-scrolls-down-on-right-arrow
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- perform checks for recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- type-check calls inside recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- type-check merge instructions in recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- check types of reply instructions in recipe scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- checking reply instructions against header for scenario_editor-scrolls-down-on-right-arrow
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-scrolls-down-on-right-arrow
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {5: "literal", "width": ()}, {4: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 5
9999 mem: location 1004 is 4
9999 mem: storing 20 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 20
9999 mem: array size is 20
9999 mem: allocating size 42
9999 mem: new alloc: 1014
9999 mem: storing 20 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 4
9999 mem: location 1003 is 5
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 4 in location 1009
9999 mem: storing 5 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1056
9999 mem: storing 7 in location 1057
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1059
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1059 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1059 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1059 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1060
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1061
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1062
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 0
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 0
9999 mem: storing 1016 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1016
9999 mem: location 1064 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 0
9999 mem: storing 1 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 1
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 1
9999 mem: storing 1018 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1018
9999 mem: location 1064 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 1
9999 mem: storing 2 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 2
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 2
9999 mem: storing 1020 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1020
9999 mem: location 1064 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 2
9999 mem: storing 3 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 3
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 3
9999 mem: storing 1022 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1022
9999 mem: location 1064 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 3
9999 mem: storing 4 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 4
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 4
9999 mem: storing 1024 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1024
9999 mem: location 1064 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 4
9999 mem: storing 5 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 5
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 5
9999 mem: storing 1026 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1026
9999 mem: location 1064 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 5
9999 mem: storing 6 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 6
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 6
9999 mem: storing 1028 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1028
9999 mem: location 1064 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 6
9999 mem: storing 7 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 7
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 7
9999 mem: storing 1030 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1030
9999 mem: location 1064 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 7
9999 mem: storing 8 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 8
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 8
9999 mem: storing 1032 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1032
9999 mem: location 1064 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 8
9999 mem: storing 9 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 9
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 9
9999 mem: storing 1034 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1034
9999 mem: location 1064 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 9
9999 mem: storing 10 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 10
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 10
9999 mem: storing 1036 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1036
9999 mem: location 1064 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 10
9999 mem: storing 11 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 11
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 11
9999 mem: storing 1038 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1038
9999 mem: location 1064 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 11
9999 mem: storing 12 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 12
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 12
9999 mem: storing 1040 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1040
9999 mem: location 1064 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 12
9999 mem: storing 13 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 13
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 13
9999 mem: storing 1042 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1042
9999 mem: location 1064 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 13
9999 mem: storing 14 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 14
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 14
9999 mem: storing 1044 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1044
9999 mem: location 1064 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 14
9999 mem: storing 15 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 15
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 15
9999 mem: storing 1046 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1046
9999 mem: location 1064 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 15
9999 mem: storing 16 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 16
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 16
9999 mem: storing 1048 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1048
9999 mem: location 1064 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 16
9999 mem: storing 17 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 17
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 17
9999 mem: storing 1050 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1050
9999 mem: location 1064 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 17
9999 mem: storing 18 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 18
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 18
9999 mem: storing 1052 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1052
9999 mem: location 1064 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 18
9999 mem: storing 19 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 19
9999 mem: location 1061 is 20
9999 mem: storing 0 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1060 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1062 is 19
9999 mem: storing 1054 in location 1064
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1064 is 1054
9999 mem: location 1064 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1062 is 19
9999 mem: storing 20 in location 1062
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1062 is 20
9999 mem: location 1061 is 20
9999 mem: storing 1 in location 1063
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1063 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1059 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1059 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1059 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1059 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1059 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"a\nb\ncdefgh": "literal-string"}
9999 mem: new string alloc: 1065
9999 mem: storing 1065 in location 1
9999 mem: incrementing refcount of 1065: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {5: "literal", "right": ()}
9999 mem: location 1 is 1065
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1077
9999 mem: storing 11 in location 1078
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1065 in location 1080
9999 mem: incrementing refcount of 1065: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1081
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1082
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1083
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1083 is 5
9999 mem: storing 4 in location 1083
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1090
9999 mem: storing 1090 in location 1084
9999 mem: incrementing refcount of 1090: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1085
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1082 is 0
9999 mem: location 1085 is 1095
9999 mem: storing 0 in location 1095
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 0
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1085
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1083 is 4
9999 mem: location 1085 is 1096
9999 mem: storing 4 in location 1096
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 0
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1085
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1085 is 1098
9999 mem: storing 1 in location 1098
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1085
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1082 is 0
9999 mem: location 1085 is 1099
9999 mem: storing 0 in location 1099
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 0
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1086
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1103
9999 mem: storing 4 in location 1104
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1106
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1107
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1109
9999 mem: storing 1109 in location 1108
9999 mem: incrementing refcount of 1109: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1106 is 167
9999 mem: location 1107 is 0
9999 mem: location 1108 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1108 is 1109
9999 mem: skipping refcount at 1109
9999 mem: storing 167 in location 1110
9999 mem: storing 0 in location 1111
9999 mem: storing 0 in location 1112
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1107 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1108 is 1109
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1109
9999 mem: location 1086 is 1091
9999 mem: storing 1109 in location 1091
9999 mem: incrementing refcount of 1109: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 0
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1087
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1086 is 1091
9999 mem: location 1091 is 1109
9999 mem: location 1087 is 1092
9999 mem: storing 1109 in location 1092
9999 mem: incrementing refcount of 1109: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 0
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1088
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1086 is 1091
9999 mem: location 1091 is 1109
9999 mem: location 1088 is 1094
9999 mem: storing 1109 in location 1094
9999 mem: incrementing refcount of 1109: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1084 is 1090
9999 mem: location 1080 is 1065
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1113
9999 mem: storing 8 in location 1114
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1116
9999 mem: incrementing refcount of 1090: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1065 in location 1117
9999 mem: incrementing refcount of 1065: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1117 is 1065
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9999 mem: storing 10 in location 1118
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1118 is 10
9998 run: jumping to instruction 8
 104 run: {idx: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1119
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1116 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1116 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1091
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1091 is 1109
9999 mem: storing 1109 in location 1120
9999 mem: incrementing refcount of 1109: 4 -> 5
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 0
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 0
9998 run: address to copy is 1067
9998 run: its type is character
9999 mem: location 1067 is 97
9999 mem: storing 97 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 97
9999 mem: location 1120 is 1109
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1123
9999 mem: storing 5 in location 1124
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1127
9999 mem: incrementing refcount of 1109: 5 -> 6
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1130
9999 mem: storing 1130 in location 1128
9999 mem: incrementing refcount of 1130: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 0
9999 mem: location 1132 is 0
9999 mem: location 1133 is 0
9999 mem: location 1126 is 97
9999 mem: location 1128 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1131
9999 mem: storing 97 in location 1131
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1127 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1111
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1111 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 0
9999 mem: location 1112 is 0
9999 mem: location 1128 is 1130
9999 mem: location 1127 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy to is 1111
9999 mem: storing 1130 in location 1111
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 0
9999 mem: location 1133 is 0
9999 mem: location 1127 is 1109
9999 mem: location 1128 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1133
9999 mem: storing 1109 in location 1133
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 0
9999 mem: location 1133 is 1109
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1132
9999 mem: storing 0 in location 1132
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1109
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1109
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1134
9999 mem: storing 3 in location 1135
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1137
9999 mem: incrementing refcount of 1109: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1109
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1111
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1111 is 1130
9999 mem: storing 1130 in location 1138
9999 mem: incrementing refcount of 1130: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1130
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1109: 7 -> 6
9999 mem: storing 1130 in location 1120
9999 mem: incrementing refcount of 1130: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 0
9999 mem: storing 1 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 1
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 1
9998 run: address to copy is 1068
9998 run: its type is character
9999 mem: location 1068 is 10
9999 mem: storing 10 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 10
9999 mem: location 1120 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1127
9999 mem: incrementing refcount of 1130: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1139
9999 mem: storing 1139 in location 1128
9999 mem: incrementing refcount of 1139: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1126 is 10
9999 mem: location 1128 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy to is 1140
9999 mem: storing 10 in location 1140
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 0
9999 mem: location 1133 is 1109
9999 mem: location 1127 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 0
9999 mem: location 1133 is 1109
9999 mem: location 1128 is 1139
9999 mem: location 1127 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy to is 1132
9999 mem: storing 1139 in location 1132
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1127 is 1130
9999 mem: location 1128 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy to is 1142
9999 mem: storing 1130 in location 1142
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1130
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy to is 1141
9999 mem: storing 0 in location 1141
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1130
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1137
9999 mem: incrementing refcount of 1130: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1130
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1139
9999 mem: storing 1139 in location 1138
9999 mem: incrementing refcount of 1139: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1139
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1139
9999 mem: decrementing refcount of 1130: 5 -> 4
9999 mem: storing 1139 in location 1120
9999 mem: incrementing refcount of 1139: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 1
9999 mem: storing 2 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 2
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 2
9998 run: address to copy is 1069
9998 run: its type is character
9999 mem: location 1069 is 98
9999 mem: storing 98 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 98
9999 mem: location 1120 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1127
9999 mem: incrementing refcount of 1139: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1143
9999 mem: storing 1143 in location 1128
9999 mem: incrementing refcount of 1143: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1126 is 98
9999 mem: location 1128 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1144
9999 mem: storing 98 in location 1144
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1130
9999 mem: location 1127 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1130
9999 mem: location 1128 is 1143
9999 mem: location 1127 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy to is 1141
9999 mem: storing 1143 in location 1141
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1127 is 1139
9999 mem: location 1128 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1146
9999 mem: storing 1139 in location 1146
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1139
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1145
9999 mem: storing 0 in location 1145
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1139
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1137
9999 mem: incrementing refcount of 1139: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1139
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1143
9999 mem: storing 1143 in location 1138
9999 mem: incrementing refcount of 1143: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1143
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1139: 5 -> 4
9999 mem: storing 1143 in location 1120
9999 mem: incrementing refcount of 1143: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 2
9999 mem: storing 3 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 3
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 3
9998 run: address to copy is 1070
9998 run: its type is character
9999 mem: location 1070 is 10
9999 mem: storing 10 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 10
9999 mem: location 1120 is 1143
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1127
9999 mem: incrementing refcount of 1143: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1147
9999 mem: storing 1147 in location 1128
9999 mem: incrementing refcount of 1147: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1126 is 10
9999 mem: location 1128 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy to is 1148
9999 mem: storing 10 in location 1148
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1139
9999 mem: location 1127 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 0
9999 mem: location 1146 is 1139
9999 mem: location 1128 is 1147
9999 mem: location 1127 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy to is 1145
9999 mem: storing 1147 in location 1145
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1127 is 1143
9999 mem: location 1128 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy to is 1150
9999 mem: storing 1143 in location 1150
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1143
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy to is 1149
9999 mem: storing 0 in location 1149
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1143
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1143
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1137
9999 mem: incrementing refcount of 1143: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1143
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1147
9999 mem: storing 1147 in location 1138
9999 mem: incrementing refcount of 1147: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1147
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1143: 5 -> 4
9999 mem: storing 1147 in location 1120
9999 mem: incrementing refcount of 1147: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 3
9999 mem: storing 4 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 4
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 4
9998 run: address to copy is 1071
9998 run: its type is character
9999 mem: location 1071 is 99
9999 mem: storing 99 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 99
9999 mem: location 1120 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1127
9999 mem: incrementing refcount of 1147: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1151
9999 mem: storing 1151 in location 1128
9999 mem: incrementing refcount of 1151: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 0
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1126 is 99
9999 mem: location 1128 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy to is 1152
9999 mem: storing 99 in location 1152
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1143
9999 mem: location 1127 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1143
9999 mem: location 1128 is 1151
9999 mem: location 1127 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy to is 1149
9999 mem: storing 1151 in location 1149
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 0
9999 mem: location 1127 is 1147
9999 mem: location 1128 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy to is 1154
9999 mem: storing 1147 in location 1154
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1147
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy to is 1153
9999 mem: storing 0 in location 1153
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1147
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1137
9999 mem: incrementing refcount of 1147: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1147
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1151
9999 mem: storing 1151 in location 1138
9999 mem: incrementing refcount of 1151: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1151
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1147: 5 -> 4
9999 mem: storing 1151 in location 1120
9999 mem: incrementing refcount of 1151: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 4
9999 mem: storing 5 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 5
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 5
9998 run: address to copy is 1072
9998 run: its type is character
9999 mem: location 1072 is 100
9999 mem: storing 100 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 100
9999 mem: location 1120 is 1151
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1127
9999 mem: incrementing refcount of 1151: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1155
9999 mem: storing 1155 in location 1128
9999 mem: incrementing refcount of 1155: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 0
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1126 is 100
9999 mem: location 1128 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy to is 1156
9999 mem: storing 100 in location 1156
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1147
9999 mem: location 1127 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 0
9999 mem: location 1154 is 1147
9999 mem: location 1128 is 1155
9999 mem: location 1127 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy to is 1153
9999 mem: storing 1155 in location 1153
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1127 is 1151
9999 mem: location 1128 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy to is 1158
9999 mem: storing 1151 in location 1158
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1151
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy to is 1157
9999 mem: storing 0 in location 1157
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1151
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1151
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1137
9999 mem: incrementing refcount of 1151: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1151
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1138
9999 mem: incrementing refcount of 1155: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1155
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1151: 5 -> 4
9999 mem: storing 1155 in location 1120
9999 mem: incrementing refcount of 1155: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 5
9999 mem: storing 6 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 6
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 6
9998 run: address to copy is 1073
9998 run: its type is character
9999 mem: location 1073 is 101
9999 mem: storing 101 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 101
9999 mem: location 1120 is 1155
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1127
9999 mem: incrementing refcount of 1155: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1159
9999 mem: storing 1159 in location 1128
9999 mem: incrementing refcount of 1159: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1126 is 101
9999 mem: location 1128 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1160
9999 mem: storing 101 in location 1160
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1151
9999 mem: location 1127 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1151
9999 mem: location 1128 is 1159
9999 mem: location 1127 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy to is 1157
9999 mem: storing 1159 in location 1157
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1127 is 1155
9999 mem: location 1128 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1162
9999 mem: storing 1155 in location 1162
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1155
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1161
9999 mem: storing 0 in location 1161
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1155
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1155
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1137
9999 mem: incrementing refcount of 1155: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1155
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 1159
9999 mem: storing 1159 in location 1138
9999 mem: incrementing refcount of 1159: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1155: 5 -> 4
9999 mem: storing 1159 in location 1120
9999 mem: incrementing refcount of 1159: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 6
9999 mem: storing 7 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 7
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 7
9998 run: address to copy is 1074
9998 run: its type is character
9999 mem: location 1074 is 102
9999 mem: storing 102 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 102
9999 mem: location 1120 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1127
9999 mem: incrementing refcount of 1159: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1163
9999 mem: storing 1163 in location 1128
9999 mem: incrementing refcount of 1163: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1126 is 102
9999 mem: location 1128 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy to is 1164
9999 mem: storing 102 in location 1164
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1155
9999 mem: location 1127 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1155
9999 mem: location 1128 is 1163
9999 mem: location 1127 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1161
9999 mem: storing 1163 in location 1161
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1127 is 1159
9999 mem: location 1128 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy to is 1166
9999 mem: storing 1159 in location 1166
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1159
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy to is 1165
9999 mem: storing 0 in location 1165
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1159
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1159: 5 -> 4
9999 mem: storing 1163 in location 1120
9999 mem: incrementing refcount of 1163: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 7
9999 mem: storing 8 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 8
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 8
9998 run: address to copy is 1075
9998 run: its type is character
9999 mem: location 1075 is 103
9999 mem: storing 103 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 103
9999 mem: location 1120 is 1163
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1127
9999 mem: incrementing refcount of 1163: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1167
9999 mem: storing 1167 in location 1128
9999 mem: incrementing refcount of 1167: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 0
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1126 is 103
9999 mem: location 1128 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy to is 1168
9999 mem: storing 103 in location 1168
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1159
9999 mem: location 1127 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 0
9999 mem: location 1166 is 1159
9999 mem: location 1128 is 1167
9999 mem: location 1127 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy to is 1165
9999 mem: storing 1167 in location 1165
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1127 is 1163
9999 mem: location 1128 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy to is 1170
9999 mem: storing 1163 in location 1170
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1163
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy to is 1169
9999 mem: storing 0 in location 1169
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1163
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1163
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1137
9999 mem: incrementing refcount of 1163: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1163
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1138
9999 mem: incrementing refcount of 1167: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1167
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1167
9999 mem: decrementing refcount of 1163: 5 -> 4
9999 mem: storing 1167 in location 1120
9999 mem: incrementing refcount of 1167: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 8
9999 mem: storing 9 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 9
9999 mem: location 1118 is 10
9999 mem: storing 0 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 104 run: {c: "character"} <- index {text: ("address" "shared" "array" "character"), "lookup": ()}, {idx: "number"}
9999 mem: location 1117 is 1065
9999 mem: skipping refcount at 1065
9998 run: base address is 1066
9999 mem: location 1119 is 9
9998 run: address to copy is 1076
9998 run: its type is character
9999 mem: location 1076 is 104
9999 mem: storing 104 in location 1122
 104 run: insert_2 {c: "character"}, {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1122 is 104
9999 mem: location 1120 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 105 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1126
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1127
9999 mem: incrementing refcount of 1167: 3 -> 4
 105 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1171
9999 mem: storing 1171 in location 1128
9999 mem: incrementing refcount of 1171: 0 -> 1
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1128 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 0
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1126 is 104
9999 mem: location 1128 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1172
9999 mem: storing 104 in location 1172
 105 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1127 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1163
9999 mem: location 1127 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1169 is 0
9999 mem: storing 0 in location 1129
 105 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1127 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 0
9999 mem: location 1170 is 1163
9999 mem: location 1128 is 1171
9999 mem: location 1127 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy to is 1169
9999 mem: storing 1171 in location 1169
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 104
9999 mem: location 1173 is 0
9999 mem: location 1174 is 0
9999 mem: location 1127 is 1167
9999 mem: location 1128 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1174
9999 mem: storing 1167 in location 1174
 105 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1128 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 104
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1167
9999 mem: location 1129 is 0
9999 mem: location 1128 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy to is 1173
9999 mem: storing 0 in location 1173
 105 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1129 is 0
9998 run: jump-if fell through
 105 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1127 is 1167
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1120 is 1167
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1137
9999 mem: incrementing refcount of 1167: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1167
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1137 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1138
9999 mem: incrementing refcount of 1171: 1 -> 2
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1171
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1167: 5 -> 4
9999 mem: storing 1171 in location 1120
9999 mem: incrementing refcount of 1171: 2 -> 3
 104 run: {idx: "number"} <- add {idx: "number"}, {1: "literal"}
9999 mem: location 1119 is 9
9999 mem: storing 10 in location 1119
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-or-equal {idx: "number"}, {len: "number"}
9999 mem: location 1119 is 10
9999 mem: location 1118 is 10
9999 mem: storing 1 in location 1121
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 1
9998 run: jumping to instruction 18
 104 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1116 is 1090
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1090
9999 mem: decrementing refcount of 1090: 2 -> 1
9999 mem: storing 1090 in location 1084
9999 mem: incrementing refcount of 1090: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1088
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1086 is 1091
9999 mem: location 1091 is 1109
9999 mem: location 1088 is 1094
9999 mem: decrementing refcount of 1109: 6 -> 5
9999 mem: storing 1109 in location 1094
9999 mem: incrementing refcount of 1109: 5 -> 6
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1081 is 1008
9999 mem: location 1084 is 1090
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1175
9999 mem: storing 28 in location 1176
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1179
9999 mem: incrementing refcount of 1090: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1179 is 1090
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1180
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1178 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1137
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1137 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1138
 105 run: return {height: "number"}
9999 mem: location 1138 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 4
9999 mem: storing 4 in location 1181
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1182
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1092 is 1109
9999 mem: storing 1109 in location 1183
9999 mem: incrementing refcount of 1109: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1109
9999 mem: storing 1109 in location 1184
9999 mem: incrementing refcount of 1109: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1109
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1137
9999 mem: incrementing refcount of 1109: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1109
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1111
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1111 is 1130
9999 mem: storing 1130 in location 1138
9999 mem: incrementing refcount of 1130: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1130
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1109: 9 -> 8
9999 mem: storing 1130 in location 1183
9999 mem: incrementing refcount of 1130: 5 -> 6
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1185
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1186
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1187
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1188
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1189
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1190
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1186 is 1
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1130
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 1
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 1 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1187 is 0
9999 mem: location 1189 is 1099
9999 mem: location 1099 is 0
9999 mem: storing 1 in location 1193
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1109
9999 mem: location 1190 is 1094
9999 mem: decrementing refcount of 1109: 8 -> 7
9999 mem: storing 1109 in location 1094
9999 mem: incrementing refcount of 1109: 7 -> 8
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1183 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1131
9998 run: its type is "character"
9999 mem: location 1131 is 97
9999 mem: storing 97 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 97
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1205
9999 mem: storing 10 in location 1206
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 97
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
9990 schedule: get-color/render/new-editor/scenario_editor-scrolls-down-on-right-arrow
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 97
9999 mem: storing 0 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 97
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1217
9999 mem: storing 25 in location 1218
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 7 -> 8
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 97
  90 print-character: 97 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1234
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 97
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 5
9999 mem: storing 1026 in location 1239
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1026
9999 mem: location 1026 is 0
9999 mem: location 1027 is 7
9999 mem: location 1239 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1240
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 97
9999 mem: location 1240 is 1026
9999 mem: storing 97 in location 1026
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1026
9999 mem: location 1026 is 97
9999 mem: location 1027 is 7
9999 mem: location 1239 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1241
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1027
9999 mem: storing 7 in location 1027
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1230 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1137
9999 mem: incrementing refcount of 1130: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1130
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1139
9999 mem: storing 1139 in location 1138
9999 mem: incrementing refcount of 1139: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1139
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1139
9999 mem: decrementing refcount of 1130: 7 -> 6
9999 mem: storing 1139 in location 1183
9999 mem: incrementing refcount of 1139: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1109
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1137
9999 mem: incrementing refcount of 1109: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1109
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1111
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1111 is 1130
9999 mem: storing 1130 in location 1138
9999 mem: incrementing refcount of 1130: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1130
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1109: 9 -> 8
9999 mem: storing 1130 in location 1184
9999 mem: incrementing refcount of 1130: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1139
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 1
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 1 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1187 is 1
9999 mem: location 1189 is 1099
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1193
 104 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1183 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1140
9998 run: its type is "character"
9999 mem: location 1140 is 10
9999 mem: storing 10 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 10
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 10
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 10
9999 mem: storing 1 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 1 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 1
9998 run: jump-unless fell through
 104 run: {left-of-cursor?: "boolean"} <- lesser-than {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1187 is 1
9999 mem: location 1189 is 1099
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1196
 104 run: jump-unless {left-of-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1196 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1187 is 1
9999 mem: location 1182 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1113
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 8 -> 9
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1117
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1118
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1119
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1120
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 1
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 9 -> 10
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 3 -> 4
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 6
9999 mem: storing 1028 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1028
9999 mem: location 1028 is 0
9999 mem: location 1029 is 7
9999 mem: location 1239 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1028
9999 mem: storing 32 in location 1028
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1028
9999 mem: location 1028 is 32
9999 mem: location 1029 is 7
9999 mem: location 1239 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1029
9999 mem: storing 7 in location 1029
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1230 is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 10 -> 9
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 1
9999 mem: storing 2 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 2
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 10 -> 11
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 4 -> 5
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 7
9999 mem: storing 1030 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1030
9999 mem: location 1030 is 0
9999 mem: location 1031 is 7
9999 mem: location 1239 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1030
9999 mem: storing 32 in location 1030
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1030
9999 mem: location 1030 is 32
9999 mem: location 1031 is 7
9999 mem: location 1239 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1031
9999 mem: storing 7 in location 1031
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1230 is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 11 -> 10
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 2
9999 mem: storing 3 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 3
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 11 -> 12
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 5 -> 6
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 8
9999 mem: storing 1032 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1032
9999 mem: location 1032 is 0
9999 mem: location 1033 is 7
9999 mem: location 1239 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1032
9999 mem: storing 32 in location 1032
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1239 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1033
9999 mem: storing 7 in location 1033
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1230 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 12 -> 11
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 11 -> 12
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 3
9999 mem: storing 4 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 4
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 12 -> 13
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 6 -> 7
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 9
9999 mem: storing 1034 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1035 is 7
9999 mem: location 1239 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1034
9999 mem: storing 32 in location 1034
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1239 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1035
9999 mem: storing 7 in location 1035
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1242 is 4
9999 mem: storing 1 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 75
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 4
9999 mem: storing 5 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 5
9999 mem: location 1118 is 4
9999 mem: storing 1 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1116 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1186 is 1
9999 mem: storing 2 in location 1186
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1187
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1186 is 2
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 14 -> 13
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 13 -> 14
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1137
9999 mem: incrementing refcount of 1139: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1139
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1143
9999 mem: storing 1143 in location 1138
9999 mem: incrementing refcount of 1143: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1143
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1139: 7 -> 6
9999 mem: storing 1143 in location 1183
9999 mem: incrementing refcount of 1143: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1130
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1137
9999 mem: incrementing refcount of 1130: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1130
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1139
9999 mem: storing 1139 in location 1138
9999 mem: incrementing refcount of 1139: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1139
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1139
9999 mem: decrementing refcount of 1130: 9 -> 8
9999 mem: storing 1139 in location 1184
9999 mem: incrementing refcount of 1139: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1143
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 2
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1183 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1144
9998 run: its type is "character"
9999 mem: location 1144 is 98
9999 mem: storing 98 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 98
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 98
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 98
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 98
9999 mem: storing 0 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 98
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 98
  90 print-character: 98 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 98
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1234
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 98
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 10
9999 mem: storing 1036 in location 1239
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 7
9999 mem: location 1239 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1240
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 98
9999 mem: location 1240 is 1036
9999 mem: storing 98 in location 1036
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1036
9999 mem: location 1036 is 98
9999 mem: location 1037 is 7
9999 mem: location 1239 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1241
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1037
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1230 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1143
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1137
9999 mem: incrementing refcount of 1143: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1143
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1147
9999 mem: storing 1147 in location 1138
9999 mem: incrementing refcount of 1147: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1147
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1143: 7 -> 6
9999 mem: storing 1147 in location 1183
9999 mem: incrementing refcount of 1147: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1139
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1137
9999 mem: incrementing refcount of 1139: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1139
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1143
9999 mem: storing 1143 in location 1138
9999 mem: incrementing refcount of 1143: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1143
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1139: 9 -> 8
9999 mem: storing 1143 in location 1184
9999 mem: incrementing refcount of 1143: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1147
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 2
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
9990 schedule: render/new-editor/scenario_editor-scrolls-down-on-right-arrow
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is "character"
9999 mem: location 1148 is 10
9999 mem: storing 10 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 10
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 10
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 10
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 10
9999 mem: storing 1 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 1
9998 run: jump-unless fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 44
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1187 is 1
9999 mem: location 1182 is 4
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1113
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1117
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1118
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1119
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1120
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 1
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 16 -> 17
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 8 -> 9
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 11
9999 mem: storing 1038 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 7
9999 mem: location 1239 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1038
9999 mem: storing 32 in location 1038
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1239 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1039
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1230 is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 1
9999 mem: storing 2 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 2
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 17 -> 18
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 9 -> 10
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 12
9999 mem: storing 1040 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1239 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1040
9999 mem: storing 32 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1239 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1230 is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 2
9999 mem: storing 3 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 3
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 18 -> 19
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 10 -> 11
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 13
9999 mem: storing 1042 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1239 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1042
9999 mem: storing 32 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1239 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1230 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 3
9999 mem: storing 4 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 4
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 19 -> 20
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1234
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 11 -> 12
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 14
9999 mem: storing 1044 in location 1239
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1239 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1240
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1044
9999 mem: storing 32 in location 1044
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1239 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1241
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1045
9999 mem: storing 7 in location 1045
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1242 is 4
9999 mem: storing 1 in location 1243
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 75
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 20 -> 19
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 4
9999 mem: storing 5 in location 1117
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 5
9999 mem: location 1118 is 4
9999 mem: storing 1 in location 1122
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1116 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1186 is 2
9999 mem: storing 3 in location 1186
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1187
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1186 is 3
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 21 -> 20
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 20 -> 21
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1137
9999 mem: incrementing refcount of 1147: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1147
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1151
9999 mem: storing 1151 in location 1138
9999 mem: incrementing refcount of 1151: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1151
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1147: 7 -> 6
9999 mem: storing 1151 in location 1183
9999 mem: incrementing refcount of 1151: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1143
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1137
9999 mem: incrementing refcount of 1143: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1143
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1147
9999 mem: storing 1147 in location 1138
9999 mem: incrementing refcount of 1147: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1147
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1143: 9 -> 8
9999 mem: storing 1147 in location 1184
9999 mem: incrementing refcount of 1147: 7 -> 8
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1151
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1183 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is "character"
9999 mem: location 1152 is 99
9999 mem: storing 99 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 99
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 99
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 99
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 99
9999 mem: storing 0 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 99
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 99
  90 print-character: 99 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 99
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1234
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 99
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 15
9999 mem: storing 1046 in location 1239
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1239 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1240
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 99
9999 mem: location 1240 is 1046
9999 mem: storing 99 in location 1046
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1046
9999 mem: location 1046 is 99
9999 mem: location 1047 is 7
9999 mem: location 1239 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1241
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1047
9999 mem: storing 7 in location 1047
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1230 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1151
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1137
9999 mem: incrementing refcount of 1151: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1151
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1138
9999 mem: incrementing refcount of 1155: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1155
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1151: 7 -> 6
9999 mem: storing 1155 in location 1183
9999 mem: incrementing refcount of 1155: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1147
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1137
9999 mem: incrementing refcount of 1147: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1147
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1151
9999 mem: storing 1151 in location 1138
9999 mem: incrementing refcount of 1151: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1151
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1147: 9 -> 8
9999 mem: storing 1151 in location 1184
9999 mem: incrementing refcount of 1151: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1155
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1183 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1156
9998 run: its type is "character"
9999 mem: location 1156 is 100
9999 mem: storing 100 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 100
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 100
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 100
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 100
9999 mem: storing 0 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 1
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 100
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 22 -> 23
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 100
  90 print-character: 100 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1234
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 16
9999 mem: storing 1048 in location 1239
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1239 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1240
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 100
9999 mem: location 1240 is 1048
9999 mem: storing 100 in location 1048
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1048
9999 mem: location 1048 is 100
9999 mem: location 1049 is 7
9999 mem: location 1239 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1241
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1049
9999 mem: storing 7 in location 1049
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1230 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1155
9999 trace: incrementing callstack depth to 4
9990 schedule: next_2/render/new-editor/scenario_editor-scrolls-down-on-right-arrow
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1137
9999 mem: incrementing refcount of 1155: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1155
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 1159
9999 mem: storing 1159 in location 1138
9999 mem: incrementing refcount of 1159: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1155: 7 -> 6
9999 mem: storing 1159 in location 1183
9999 mem: incrementing refcount of 1159: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1151
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1137
9999 mem: incrementing refcount of 1151: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1151
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1138
9999 mem: incrementing refcount of 1155: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1155
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1151: 9 -> 8
9999 mem: storing 1155 in location 1184
9999 mem: incrementing refcount of 1155: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 1
9999 mem: storing 2 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1159
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1183 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1160
9998 run: its type is "character"
9999 mem: location 1160 is 101
9999 mem: storing 101 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 101
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 101
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 101
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 101
9999 mem: storing 0 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 2
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 101
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 101
  90 print-character: 101 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 101
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1234
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 101
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 17
9999 mem: storing 1050 in location 1239
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1239 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1240
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 101
9999 mem: location 1240 is 1050
9999 mem: storing 101 in location 1050
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1050
9999 mem: location 1050 is 101
9999 mem: location 1051 is 7
9999 mem: location 1239 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1241
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1051
9999 mem: storing 7 in location 1051
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1230 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1159: 7 -> 6
9999 mem: storing 1163 in location 1183
9999 mem: incrementing refcount of 1163: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1155
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1137
9999 mem: incrementing refcount of 1155: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1155
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 1159
9999 mem: storing 1159 in location 1138
9999 mem: incrementing refcount of 1159: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1155: 9 -> 8
9999 mem: storing 1159 in location 1184
9999 mem: incrementing refcount of 1159: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 2
9999 mem: storing 3 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1163
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1183 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1164
9998 run: its type is "character"
9999 mem: location 1164 is 102
9999 mem: storing 102 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 102
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 102
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 102
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 102
9999 mem: storing 0 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 3
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 104 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 102
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 102
  90 print-character: 102 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 102
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1234
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 102
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 18
9999 mem: storing 1052 in location 1239
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1239 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1240
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 102
9999 mem: location 1240 is 1052
9999 mem: storing 102 in location 1052
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1052
9999 mem: location 1052 is 102
9999 mem: location 1053 is 7
9999 mem: location 1239 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1241
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1053
9999 mem: storing 7 in location 1053
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1230 is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1163
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1137
9999 mem: incrementing refcount of 1163: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1163
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1138
9999 mem: incrementing refcount of 1167: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1167
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1167
9999 mem: decrementing refcount of 1163: 7 -> 6
9999 mem: storing 1167 in location 1183
9999 mem: incrementing refcount of 1167: 5 -> 6
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 6 -> 7
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1159: 9 -> 8
9999 mem: storing 1163 in location 1184
9999 mem: incrementing refcount of 1163: 7 -> 8
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 3
9999 mem: storing 4 in location 1187
 104 run: jump {: "offset"}
9998 run: jumping to instruction 20
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1167
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 104 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1183 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1168
9998 run: its type is "character"
9999 mem: location 1168 is 103
9999 mem: storing 103 in location 1194
 104 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 103
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
 105 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1208
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1209
 105 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1208 is 7
9999 mem: storing 1 in location 1210
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1209 is 103
9999 mem: storing 0 in location 1211
 105 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1211 is 0
9998 run: jumping to instruction 11
 105 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1212
 105 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1212 is 0
9998 run: jumping to instruction 20
 105 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1210 is 1
9998 run: jump-unless fell through
 105 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1209 is 103
9999 mem: storing 0 in location 1214
 105 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jumping to instruction 27
 105 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1208 is 7
9999 mem: storing 0 in location 1215
 105 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1215 is 0
9998 run: jumping to instruction 35
 105 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1208 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 104 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 103
9999 mem: storing 0 in location 1195
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 104 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 4
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1197
 104 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 1
9998 run: jump-unless fell through
 104 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1198
 104 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1178 is 1008
9999 mem: location 1198 is 8617
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1221
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 8617
  90 print-character: 8617 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 8617
9999 mem: storing 0 in location 1231
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1234
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 16 -> 17
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 8617
9999 mem: storing 0 in location 1237
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 19
9999 mem: storing 1054 in location 1239
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1239 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1240
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 8617
9999 mem: location 1240 is 1054
9999 mem: storing 8617 in location 1054
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1054
9999 mem: location 1054 is 8617
9999 mem: location 1055 is 7
9999 mem: location 1239 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1241
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 245
9999 mem: location 1241 is 1055
9999 mem: storing 245 in location 1055
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1242 is 4
9999 mem: storing 1 in location 1243
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 75
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1187
 104 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1186 is 3
9999 mem: storing 4 in location 1186
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1186 is 4
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 26 -> 27
 104 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1167
9998 run: jump-unless fell through
 104 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 4
9999 mem: location 1181 is 4
9999 mem: storing 1 in location 1191
 104 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 1
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1199
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1167
9999 mem: location 1199 is 1093
9999 mem: storing 1167 in location 1093
9999 mem: incrementing refcount of 1167: 6 -> 7
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 4
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1192
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1187 is 0
9999 mem: location 1189 is 1099
9999 mem: location 1099 is 0
9999 mem: storing 1 in location 1200
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1192 is 0
9999 mem: location 1200 is 1
9999 mem: storing 0 in location 1201
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 4
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 1
9999 mem: storing 0 in location 1202
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1203
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jumping to instruction 81
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 0
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1204
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1186 is 4
9999 mem: location 1204 is 1097
9999 mem: storing 4 in location 1097
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1186 is 4
9999 mem: location 1187 is 0
9999 mem: location 1178 is 1008
9999 mem: location 1179 is 1090
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 4
9998 run: result 1 is 0
9998 run: result 2 is 1008
9998 run: result 3 is 1090
9999 mem: decrementing refcount of 1008: 27 -> 26
9999 mem: storing 1008 in location 1081
9999 mem: incrementing refcount of 1008: 26 -> 27
9999 mem: decrementing refcount of 1090: 3 -> 2
9999 mem: storing 1090 in location 1084
9999 mem: incrementing refcount of 1090: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 0
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1084 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1089
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1089 is 1100
9999 mem: storing 1 in location 1100
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1084 is 1090
9999 mem: location 1081 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1090
9999 mem: storing 1090 in location 2
9999 mem: incrementing refcount of 1090: 3 -> 4
 102 run: assume-console {"\n    left-click 3, 3\n    press right-arrow\n  ": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {3: "literal"}
9993 parse:   ingredient: {3: "literal"}
9992 load: after rewriting: left-click {3: "literal"}, {3: "literal"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {right-arrow: ()}
9992 load: after rewriting: press {right-arrow: ()}
9999 mem: storing 'left-click' event starting at 1246
9999 mem: storing 'press' event starting at 1250
9999 mem: storing console in 1254
9999 mem: storing console data in 1256
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1254
9999 mem: location 2 is 1090
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1257
9999 mem: storing 14 in location 1258
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 27 -> 28
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1261
9999 mem: incrementing refcount of 1254: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1262
9999 mem: incrementing refcount of 1090: 4 -> 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 1
9999 mem: storing 1 in location 1263
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1264
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1263 is 1
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 29 -> 28
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 28 -> 29
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1261 is 1254
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1273
9999 mem: storing 12 in location 1274
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1276
9999 mem: incrementing refcount of 1254: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1276 is 1254
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 0
9999 mem: location 1256 is 1244
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1255
9999 mem: storing 1255 in location 1277
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 0
9999 mem: location 1256 is 1244
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1256 is 1244
9999 mem: storing 1244 in location 1278
9999 mem: incrementing refcount of 1244: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1278 is 1244
9999 mem: skipping refcount at 1244
9999 mem: storing 2 in location 1279
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1277 is 1255
9999 mem: location 1255 is 0
9999 mem: location 1279 is 2
9999 mem: storing 0 in location 1280
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1278 is 1244
9999 mem: skipping refcount at 1244
9998 run: base address is 1245
9999 mem: location 1277 is 1255
9999 mem: location 1255 is 0
9998 run: address to copy is 1246
9998 run: its type is event
9999 mem: location 1246 is 2
9999 mem: location 1247 is 65513
9999 mem: location 1248 is 3
9999 mem: location 1249 is 3
9999 mem: storing 2 in location 1282
9999 mem: storing 65513 in location 1283
9999 mem: storing 3 in location 1284
9999 mem: storing 3 in location 1285
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1277 is 1255
9999 mem: location 1255 is 0
9999 mem: location 1277 is 1255
9999 mem: storing 1 in location 1255
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1282 is 2
9999 mem: location 1283 is 65513
9999 mem: location 1284 is 3
9999 mem: location 1285 is 3
9999 mem: location 1276 is 1254
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 3]
9998 run: result 1 is 1254
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1265
9999 mem: storing 65513 in location 1266
9999 mem: storing 3 in location 1267
9999 mem: storing 3 in location 1268
9999 mem: decrementing refcount of 1254: 2 -> 1
9999 mem: storing 1254 in location 1261
9999 mem: incrementing refcount of 1254: 1 -> 2
9999 mem: storing 1 in location 1269
9999 mem: storing 0 in location 1270
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1265 is 2
9999 mem: location 1266 is 65513
9999 mem: location 1267 is 3
9999 mem: location 1268 is 3
9999 mem: storing 1266 in location 1271
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1271 is 1266
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 1090
9999 mem: location 1271 is 1266
9999 mem: location 1266 is 65513
9999 mem: location 1267 is 3
9999 mem: location 1268 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1287
9999 mem: storing 27 in location 1288
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1290
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1291
9999 mem: incrementing refcount of 1090: 5 -> 6
 105 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1292
9999 mem: storing 3 in location 1293
9999 mem: storing 3 in location 1294
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1291 is 1090
9998 run: jumping to instruction 6
 105 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1292 is 65513
9999 mem: location 1293 is 3
9999 mem: location 1294 is 3
9998 run: address to copy is 1293
9998 run: its type is "number"
9999 mem: location 1293 is 3
9999 mem: storing 3 in location 1295
 105 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1295 is 3
9998 run: jumping to instruction 9
 105 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1292 is 65513
9999 mem: location 1293 is 3
9999 mem: location 1294 is 3
9998 run: address to copy is 1294
9998 run: its type is "number"
9999 mem: location 1294 is 3
9999 mem: storing 3 in location 1296
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1297
 105 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1296 is 3
9999 mem: location 1297 is 0
9999 mem: storing 0 in location 1298
 105 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1298 is 0
9998 run: jumping to instruction 14
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1299
 105 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1296 is 3
9999 mem: location 1299 is 4
9999 mem: storing 0 in location 1300
 105 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1300 is 0
9998 run: jumping to instruction 18
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 1
9999 mem: storing 1 in location 1301
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1302
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1092 is 1109
9999 mem: storing 1109 in location 1303
9999 mem: incrementing refcount of 1109: 8 -> 9
 105 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1290 is 1008
9999 mem: location 1291 is 1090
9999 mem: location 1295 is 3
9999 mem: location 1296 is 3
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1316
9999 mem: storing 26 in location 1317
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1319
9999 mem: incrementing refcount of 1008: 30 -> 31
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1320
9999 mem: incrementing refcount of 1090: 6 -> 7
 106 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1321
 106 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1322
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1320 is 1090
9998 run: jumping to instruction 7
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1323
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1324
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1319 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1137
9999 mem: incrementing refcount of 1008: 31 -> 32
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1137 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1138
 107 run: return {height: "number"}
9999 mem: location 1138 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1325
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1092 is 1109
9999 mem: storing 1109 in location 1326
9999 mem: incrementing refcount of 1109: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1109
9999 mem: storing 1109 in location 1327
9999 mem: incrementing refcount of 1109: 10 -> 11
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1109
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1137
9999 mem: incrementing refcount of 1109: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1109
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1111
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1111 is 1130
9999 mem: storing 1130 in location 1138
9999 mem: incrementing refcount of 1130: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1130
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1109: 12 -> 11
9999 mem: storing 1130 in location 1326
9999 mem: incrementing refcount of 1130: 9 -> 10
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1328
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1329
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 1
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1330
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1321 is 3
9999 mem: location 1330 is 1098
9999 mem: storing 3 in location 1098
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1331
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1322 is 3
9999 mem: location 1331 is 1099
9999 mem: storing 3 in location 1099
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1109
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1320 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1332
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1130
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 1
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1326 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1131
9998 run: its type is "character"
9999 mem: location 1131 is 97
9999 mem: storing 97 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 97
9999 mem: storing 0 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1329 is 0
9999 mem: location 1324 is 4
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1130
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1137
9999 mem: incrementing refcount of 1130: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1130
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1139
9999 mem: storing 1139 in location 1138
9999 mem: incrementing refcount of 1139: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1139
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1139
9999 mem: decrementing refcount of 1130: 11 -> 10
9999 mem: storing 1139 in location 1326
9999 mem: incrementing refcount of 1139: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1109
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1137
9999 mem: incrementing refcount of 1109: 11 -> 12
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1109
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1111
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1111 is 1130
9999 mem: storing 1130 in location 1138
9999 mem: incrementing refcount of 1130: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1130
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1109: 12 -> 11
9999 mem: storing 1130 in location 1327
9999 mem: incrementing refcount of 1130: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1329 is 0
9999 mem: storing 1 in location 1329
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1139
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 1
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1326 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1140
9998 run: its type is "character"
9999 mem: location 1140 is 10
9999 mem: storing 10 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 10
9999 mem: storing 1 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-right-arrow
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 1
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1328 is 1
9999 mem: storing 2 in location 1328
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1329
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1139
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1137
9999 mem: incrementing refcount of 1139: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1139
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1143
9999 mem: storing 1143 in location 1138
9999 mem: incrementing refcount of 1143: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1143
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1139: 11 -> 10
9999 mem: storing 1143 in location 1326
9999 mem: incrementing refcount of 1143: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1130
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1137
9999 mem: incrementing refcount of 1130: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1130
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1139
9999 mem: storing 1139 in location 1138
9999 mem: incrementing refcount of 1139: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1139
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1139
9999 mem: decrementing refcount of 1130: 13 -> 12
9999 mem: storing 1139 in location 1327
9999 mem: incrementing refcount of 1139: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1143
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 2
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 2
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1326 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1144
9998 run: its type is "character"
9999 mem: location 1144 is 98
9999 mem: storing 98 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 98
9999 mem: storing 0 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1329 is 0
9999 mem: location 1324 is 4
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1143
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1137
9999 mem: incrementing refcount of 1143: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1143
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1147
9999 mem: storing 1147 in location 1138
9999 mem: incrementing refcount of 1147: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1147
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1143: 11 -> 10
9999 mem: storing 1147 in location 1326
9999 mem: incrementing refcount of 1147: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1139
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1137
9999 mem: incrementing refcount of 1139: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1139
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1143
9999 mem: storing 1143 in location 1138
9999 mem: incrementing refcount of 1143: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1143
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1139: 13 -> 12
9999 mem: storing 1143 in location 1327
9999 mem: incrementing refcount of 1143: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1329 is 0
9999 mem: storing 1 in location 1329
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1147
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 2
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 2
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1326 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is "character"
9999 mem: location 1148 is 10
9999 mem: storing 10 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 10
9999 mem: storing 1 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 2
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 0
9998 run: jumping to instruction 43
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1328 is 2
9999 mem: storing 3 in location 1328
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1329
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1137
9999 mem: incrementing refcount of 1147: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1147
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1151
9999 mem: storing 1151 in location 1138
9999 mem: incrementing refcount of 1151: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1151
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1147: 11 -> 10
9999 mem: storing 1151 in location 1326
9999 mem: incrementing refcount of 1151: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1143
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1137
9999 mem: incrementing refcount of 1143: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1143
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1147
9999 mem: storing 1147 in location 1138
9999 mem: incrementing refcount of 1147: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1147
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1143: 13 -> 12
9999 mem: storing 1147 in location 1327
9999 mem: incrementing refcount of 1147: 11 -> 12
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1151
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 3
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 3
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 0
9999 mem: location 1331 is 1099
9999 mem: location 1099 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1326 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is "character"
9999 mem: location 1152 is 99
9999 mem: storing 99 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 99
9999 mem: storing 0 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1329 is 0
9999 mem: location 1324 is 4
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1137
9999 mem: incrementing refcount of 1151: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1151
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1138
9999 mem: incrementing refcount of 1155: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1155
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1151: 11 -> 10
9999 mem: storing 1155 in location 1326
9999 mem: incrementing refcount of 1155: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1137
9999 mem: incrementing refcount of 1147: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1147
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1151
9999 mem: storing 1151 in location 1138
9999 mem: incrementing refcount of 1151: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1151
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1147: 13 -> 12
9999 mem: storing 1151 in location 1327
9999 mem: incrementing refcount of 1151: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1329 is 0
9999 mem: storing 1 in location 1329
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1155
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 3
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 3
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 1
9999 mem: location 1331 is 1099
9999 mem: location 1099 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1326 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1156
9998 run: its type is "character"
9999 mem: location 1156 is 100
9999 mem: storing 100 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 100
9999 mem: storing 0 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1329 is 1
9999 mem: location 1324 is 4
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1155
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1137
9999 mem: incrementing refcount of 1155: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1155
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 1159
9999 mem: storing 1159 in location 1138
9999 mem: incrementing refcount of 1159: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1155: 11 -> 10
9999 mem: storing 1159 in location 1326
9999 mem: incrementing refcount of 1159: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1137
9999 mem: incrementing refcount of 1151: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1151
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1138
9999 mem: incrementing refcount of 1155: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1155
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1151: 13 -> 12
9999 mem: storing 1155 in location 1327
9999 mem: incrementing refcount of 1155: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1329 is 1
9999 mem: storing 2 in location 1329
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1159
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 3
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 3
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 2
9999 mem: location 1331 is 1099
9999 mem: location 1099 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1326 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1160
9998 run: its type is "character"
9999 mem: location 1160 is 101
9999 mem: storing 101 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 101
9999 mem: storing 0 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1329 is 2
9999 mem: location 1324 is 4
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 8 -> 9
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1159: 11 -> 10
9999 mem: storing 1163 in location 1326
9999 mem: incrementing refcount of 1163: 9 -> 10
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1155
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1137
9999 mem: incrementing refcount of 1155: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1155
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 1159
9999 mem: storing 1159 in location 1138
9999 mem: incrementing refcount of 1159: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1155: 13 -> 12
9999 mem: storing 1159 in location 1327
9999 mem: incrementing refcount of 1159: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1329 is 2
9999 mem: storing 3 in location 1329
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1163
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 3
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 3
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 3
9999 mem: location 1331 is 1099
9999 mem: location 1099 is 3
9999 mem: storing 1 in location 1335
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1159
9999 mem: location 1332 is 1094
9999 mem: decrementing refcount of 1109: 11 -> 10
9999 mem: storing 1159 in location 1094
9999 mem: incrementing refcount of 1159: 12 -> 13
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1326 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1164
9998 run: its type is "character"
9999 mem: location 1164 is 102
9999 mem: storing 102 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 102
9999 mem: storing 0 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1329 is 3
9999 mem: location 1324 is 4
9999 mem: storing 0 in location 1339
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 0
9998 run: jumping to instruction 56
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1326 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1137
9999 mem: incrementing refcount of 1163: 10 -> 11
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1138
9999 mem: incrementing refcount of 1167: 7 -> 8
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1167
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: decrementing refcount of 1163: 11 -> 10
9999 mem: storing 1167 in location 1326
9999 mem: incrementing refcount of 1167: 8 -> 9
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1327 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1159: 14 -> 13
9999 mem: storing 1163 in location 1327
9999 mem: incrementing refcount of 1163: 11 -> 12
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1329 is 3
9999 mem: storing 4 in location 1329
 106 run: jump {: "offset"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1167
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 3
9999 mem: location 1325 is 4
9999 mem: storing 0 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 3
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1334
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1334 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 4
9999 mem: location 1331 is 1099
9999 mem: location 1099 is 3
9999 mem: storing 0 in location 1335
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 31
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1326 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1326 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1168
9998 run: its type is "character"
9999 mem: location 1168 is 103
9999 mem: storing 103 in location 1336
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1336 is 103
9999 mem: storing 0 in location 1337
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1337 is 0
9998 run: jumping to instruction 49
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1329 is 4
9999 mem: location 1324 is 4
9999 mem: storing 1 in location 1339
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1339 is 1
9998 run: jump-unless fell through
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1323 is 0
9999 mem: storing 0 in location 1329
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1328 is 3
9999 mem: storing 4 in location 1328
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 22
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1326 is 1167
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1328 is 4
9999 mem: location 1325 is 4
9999 mem: storing 1 in location 1333
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1333 is 1
9998 run: jumping to instruction 61
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 4
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1334
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1329 is 0
9999 mem: location 1331 is 1099
9999 mem: location 1099 is 3
9999 mem: storing 1 in location 1340
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1334 is 0
9999 mem: location 1340 is 1
9999 mem: storing 0 in location 1341
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1328 is 4
9999 mem: location 1330 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1342
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1343
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 72
 106 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1320 is 1090
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1090
9999 mem: decrementing refcount of 1090: 7 -> 6
9999 mem: storing 1090 in location 1291
9999 mem: incrementing refcount of 1090: 6 -> 7
 105 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1304
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 3
9999 mem: storing 3 in location 1305
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 3
9999 mem: storing 3 in location 1306
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1291 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1092 is 1109
9999 mem: storing 1109 in location 1307
9999 mem: incrementing refcount of 1109: 10 -> 11
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jumping to instruction 44
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1205
9999 mem: storing 1205 in location 1309
9999 mem: incrementing refcount of 1205: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1301 is 1
9999 mem: location 1302 is 0
9999 mem: location 1303 is 1109
9999 mem: location 1305 is 3
9999 mem: location 1306 is 3
9999 mem: location 1307 is 1109
9999 mem: location 1304 is 0
9999 mem: location 1309 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1309 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 1 in location 1206
9999 mem: storing 1 in location 1207
9999 mem: storing 0 in location 1208
9999 mem: storing 1109 in location 1209
9999 mem: storing 3 in location 1210
9999 mem: storing 3 in location 1211
9999 mem: storing 1109 in location 1212
9999 mem: storing 0 in location 1213
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1291 is 1090
9999 mem: location 1309 is 1205
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1126
9999 mem: incrementing refcount of 1090: 7 -> 8
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1127
9999 mem: incrementing refcount of 1205: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 0
9999 mem: location 1102 is 0
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1128
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1127 is 1205
9999 mem: location 1128 is 1101
9999 mem: location 1101 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1103
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1205 in location 1106
9999 mem: incrementing refcount of 1205: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1107
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1344
9999 mem: storing 1344 in location 1108
9999 mem: incrementing refcount of 1344: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1106 is 1205
9999 mem: location 1107 is 0
9999 mem: location 1108 is 1344
9999 mem: skipping refcount at 1344
9999 mem: location 1108 is 1344
9999 mem: skipping refcount at 1344
9999 mem: storing 1205 in location 1345
9999 mem: storing 0 in location 1346
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1108 is 1344
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1344
9999 mem: location 1128 is 1101
9999 mem: storing 1344 in location 1101
9999 mem: incrementing refcount of 1344: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1126 is 1090
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1090
9999 mem: decrementing refcount of 1090: 8 -> 7
9999 mem: storing 1090 in location 1291
9999 mem: incrementing refcount of 1090: 7 -> 8
 105 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1291 is 1090
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 3
9999 mem: storing 3 in location 1263
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 3
9999 mem: storing 3 in location 1264
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1263 is 3
9999 mem: location 1264 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 33 -> 32
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 32 -> 33
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1261 is 1254
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1273
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1276
9999 mem: incrementing refcount of 1254: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1276 is 1254
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 1
9999 mem: location 1256 is 1244
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1255
9999 mem: storing 1255 in location 1277
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 1
9999 mem: location 1256 is 1244
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1256 is 1244
9999 mem: storing 1244 in location 1278
9999 mem: incrementing refcount of 1244: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1278 is 1244
9999 mem: skipping refcount at 1244
9999 mem: storing 2 in location 1279
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1277 is 1255
9999 mem: location 1255 is 1
9999 mem: location 1279 is 2
9999 mem: storing 0 in location 1280
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1278 is 1244
9999 mem: skipping refcount at 1244
9998 run: base address is 1245
9999 mem: location 1277 is 1255
9999 mem: location 1255 is 1
9998 run: address to copy is 1250
9998 run: its type is event
9999 mem: location 1250 is 1
9999 mem: location 1251 is 65514
9999 mem: location 1252 is 0
9999 mem: location 1253 is 0
9999 mem: storing 1 in location 1282
9999 mem: storing 65514 in location 1283
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1277 is 1255
9999 mem: location 1255 is 1
9999 mem: location 1277 is 1255
9999 mem: storing 2 in location 1255
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1282 is 1
9999 mem: location 1283 is 65514
9999 mem: location 1284 is 0
9999 mem: location 1285 is 0
9999 mem: location 1276 is 1254
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1254
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1265
9999 mem: storing 65514 in location 1266
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: decrementing refcount of 1254: 3 -> 2
9999 mem: storing 1254 in location 1261
9999 mem: incrementing refcount of 1254: 2 -> 3
9999 mem: storing 1 in location 1269
9999 mem: storing 0 in location 1270
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1265 is 1
9999 mem: location 1266 is 65514
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 mem: storing 0 in location 1271
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1271 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 1090
9999 mem: location 1265 is 1
9999 mem: location 1266 is 65514
9999 mem: location 1267 is 0
9999 mem: location 1268 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1347
9999 mem: storing 85 in location 1348
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1351
9999 mem: incrementing refcount of 1090: 8 -> 9
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1352
9999 mem: storing 65514 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1356
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1351 is 1090
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1137
9999 mem: incrementing refcount of 1008: 34 -> 35
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1137 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1138
 106 run: return {width: "number"}
9999 mem: location 1138 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1357
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1350 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1137
9999 mem: incrementing refcount of 1008: 35 -> 36
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1137 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1138
 106 run: return {height: "number"}
9999 mem: location 1138 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 4
9999 mem: storing 4 in location 1358
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1359
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1360
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1361
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1362
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1363
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1362 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 3 in location 1364
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1363 is 1099
9999 mem: location 1099 is 3
9999 mem: storing 3 in location 1365
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1366
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 438
 105 run: {k: ("address" "number")} <- maybe-convert {e: "event"}, {keycode: "variant"}
9999 mem: location 1352 is 1
9999 mem: location 1353 is 65514
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 1353 in location 1420
 105 run: assert {k: ("address" "number")}, {"event was of unknown type; neither keyboard nor mouse": "literal-string"}
9999 mem: location 1420 is 1353
 105 run: {page-up?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65519: "literal", "page-up": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1383
 105 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1383 is 0
9998 run: jumping to instruction 482
 105 run: {page-down?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65518: "literal", "page-down": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1399
 105 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1399 is 0
9998 run: jumping to instruction 523
 105 run: {move-to-end-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65520: "literal", "end": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1406
 105 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1406 is 0
9998 run: jumping to instruction 561
 105 run: {move-to-start-of-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65521: "literal", "home": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1407
 105 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1407 is 0
9998 run: jumping to instruction 599
 105 run: {move-to-next-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65516: "literal", "down-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1421
 105 run: jump-unless {move-to-next-line?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 636
 105 run: {move-to-previous-line?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65517: "literal", "up-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1422
 105 run: jump-unless {move-to-previous-line?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jumping to instruction 673
 105 run: {move-to-previous-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65515: "literal", "left-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 0 in location 1423
 105 run: jump-unless {move-to-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 716
 105 run: {move-to-next-character?: "boolean"} <- equal {k: ("address" "number"), "lookup": ()}, {65514: "literal", "right-arrow": ()}
9999 mem: location 1420 is 1353
9999 mem: location 1353 is 65514
9999 mem: storing 1 in location 1425
 105 run: jump-unless {move-to-next-character?: "boolean"}, {: "offset"}
9999 mem: location 1425 is 1
9998 run: jump-unless fell through
 105 run: {next-cursor: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1361 is 1094
9999 mem: location 1094 is 1159
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 13 -> 14
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1163
9999 mem: storing 1163 in location 1426
9999 mem: incrementing refcount of 1163: 13 -> 14
 105 run: jump-unless {next-cursor: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1426 is 1163
9998 run: jump-unless fell through
 105 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 3
9999 mem: storing 3 in location 1386
 105 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 3
9999 mem: storing 3 in location 1387
 105 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1159
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1092 is 1109
9999 mem: storing 1109 in location 1388
9999 mem: incrementing refcount of 1109: 11 -> 12
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {next-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1426 is 1163
9999 mem: location 1361 is 1094
9999 mem: decrementing refcount of 1159: 14 -> 13
9999 mem: storing 1163 in location 1094
9999 mem: incrementing refcount of 1163: 14 -> 15
 105 run: {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- move-cursor-coordinates-right {editor: ("address" "shared" "editor-data")}, {screen-height: "number"}
9999 mem: location 1351 is 1090
9999 mem: location 1358 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1434
9999 mem: storing 21 in location 1435
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1437
9999 mem: incrementing refcount of 1090: 9 -> 10
 106 run: {screen-height: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1438
 106 run: {before-cursor: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1094
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1094 is 1163
9999 mem: storing 1163 in location 1439
9999 mem: incrementing refcount of 1163: 15 -> 16
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1440
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1441
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1442
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 3
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1443
 106 run: {old-cursor-character: "character"} <- get {before-cursor: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1439 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1439 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1164
9998 run: its type is "character"
9999 mem: location 1164 is 102
9999 mem: storing 102 in location 1444
 106 run: {was-at-newline?: "boolean"} <- equal {old-cursor-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1444 is 102
9999 mem: storing 0 in location 1445
 106 run: jump-unless {was-at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1445 is 0
9998 run: jumping to instruction 33
 106 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1443 is 4
9999 mem: storing 3 in location 1452
 106 run: {at-wrap?: "boolean"} <- equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1441 is 1099
9999 mem: location 1099 is 3
9999 mem: location 1452 is 3
9999 mem: storing 1 in location 1453
 106 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1453 is 1
9998 run: jump-unless fell through
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1439 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1137
9999 mem: incrementing refcount of 1163: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1138
9999 mem: incrementing refcount of 1167: 9 -> 10
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1167
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: storing 1167 in location 1454
9999 mem: incrementing refcount of 1167: 10 -> 11
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1454 is 1167
9998 run: jump-unless fell through
 106 run: {next-character: "character"} <- get {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1454 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1454 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1168
9998 run: its type is "character"
9999 mem: location 1168 is 103
9999 mem: storing 103 in location 1455
 106 run: {newline?: "boolean"} <- equal {next-character: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1455 is 103
9999 mem: storing 0 in location 1456
 106 run: jump-if {newline?: "boolean"}, {: "offset"}
9999 mem: location 1456 is 0
9998 run: jump-if fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- add {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1440 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1440 is 1098
9999 mem: storing 4 in location 1098
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1442 is 0
9999 mem: location 1441 is 1099
9999 mem: storing 0 in location 1099
 106 run: {below-screen?: "boolean"} <- greater-or-equal {cursor-row: ("address" "number"), "lookup": ()}, {screen-height: "number"}
9999 mem: location 1440 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1438 is 4
9999 mem: storing 1 in location 1446
 106 run: jump-if {below-screen?: "boolean"}, {1: "offset"}
9999 mem: location 1446 is 1
9998 run: jumping to instruction 48
 106 run: trace {10: "literal"}, {"app": "literal-string"}, {"scroll down": "literal-string"}
  10 app: scroll down 
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1448
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1442
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1109
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 4
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1437 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1443
 106 run: {max: "number"} <- subtract {right: "number"}, {left: "number"}
9999 mem: location 1443 is 4
9999 mem: location 1442 is 0
9999 mem: storing 4 in location 1449
 106 run: {old-top: ("address" "shared" "duplex-list" "character")} <- copy {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1448 is 1092
9999 mem: location 1092 is 1109
9999 mem: storing 1109 in location 1450
9999 mem: incrementing refcount of 1109: 12 -> 13
 106 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- before-start-of-next-line {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {max: "number"}
9999 mem: location 1448 is 1092
9999 mem: location 1092 is 1109
9999 mem: location 1449 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1113
 107 run: {original: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1116
9999 mem: incrementing refcount of 1109: 13 -> 14
 107 run: {max: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1117
 107 run: {count: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1118
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {original: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1116 is 1109
9999 mem: storing 1109 in location 1119
9999 mem: incrementing refcount of 1109: 14 -> 15
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1119 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1110
9998 run: its type is "character"
9999 mem: location 1110 is 167
9999 mem: storing 167 in location 1120
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1120 is 167
9999 mem: storing 0 in location 1121
 107 run: jump-unless {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jumping to instruction 11
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1109
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1118 is 0
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1119 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1110
9998 run: its type is "character"
9999 mem: location 1110 is 167
9999 mem: storing 167 in location 1120
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1120 is 167
9999 mem: storing 0 in location 1121
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1109
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1109 in location 1137
9999 mem: incrementing refcount of 1109: 15 -> 16
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1109
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9999 mem: location 1110 is 167
9999 mem: location 1111 is 1130
9999 mem: location 1112 is 0
9999 mem: location 1137 is 1109
9999 mem: skipping refcount at 1109
9998 run: address to copy is 1111
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1111 is 1130
9999 mem: storing 1130 in location 1138
9999 mem: incrementing refcount of 1130: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1130
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1130
9999 mem: decrementing refcount of 1109: 16 -> 15
9999 mem: storing 1130 in location 1119
9999 mem: incrementing refcount of 1130: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1118 is 0
9999 mem: storing 1 in location 1118
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1130
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1118 is 1
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1119 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1131
9998 run: its type is "character"
9999 mem: location 1131 is 97
9999 mem: storing 97 in location 1120
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1120 is 97
9999 mem: storing 0 in location 1121
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 107 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1130
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 108 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1130 in location 1137
9999 mem: incrementing refcount of 1130: 14 -> 15
 108 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1130
9998 run: jumping to instruction 4
 108 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9999 mem: location 1131 is 97
9999 mem: location 1132 is 1139
9999 mem: location 1133 is 1109
9999 mem: location 1137 is 1130
9999 mem: skipping refcount at 1130
9998 run: address to copy is 1132
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1132 is 1139
9999 mem: storing 1139 in location 1138
9999 mem: incrementing refcount of 1139: 12 -> 13
 108 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1139
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1139
9999 mem: decrementing refcount of 1130: 15 -> 14
9999 mem: storing 1139 in location 1119
9999 mem: incrementing refcount of 1139: 13 -> 14
 107 run: {count: "number"} <- add {count: "number"}, {1: "literal"}
9999 mem: location 1118 is 1
9999 mem: storing 2 in location 1118
 107 run: jump {: "offset"}
9998 run: jumping to instruction 13
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1139
9998 run: jumping to instruction 15
 107 run: {done?: "boolean"} <- greater-or-equal {count: "number"}, {max: "number"}
9999 mem: location 1118 is 2
9999 mem: location 1117 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1119 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1119 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1140
9998 run: its type is "character"
9999 mem: location 1140 is 10
9999 mem: storing 10 in location 1120
 107 run: {at-newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1120 is 10
9999 mem: storing 1 in location 1121
 107 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 1
9998 run: jumping to instruction 23
 107 run: jump-if {curr: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1119 is 1139
9998 run: jumping to instruction 26
 107 run: return {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1119 is 1139
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1139
9999 mem: location 1448 is 1092
9999 mem: decrementing refcount of 1109: 15 -> 14
9999 mem: storing 1139 in location 1092
9999 mem: incrementing refcount of 1139: 14 -> 15
 106 run: {no-movement?: "boolean"} <- equal {old-top: ("address" "shared" "duplex-list" "character")}, {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1450 is 1109
9999 mem: location 1448 is 1092
9999 mem: location 1092 is 1139
9999 mem: storing 0 in location 1451
 106 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1447
 106 run: jump-unless {no-movement?: "boolean"}, {1: "offset"}
9999 mem: location 1451 is 0
9998 run: jumping to instruction 60
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- subtract {cursor-row: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1440 is 1098
9999 mem: location 1098 is 4
9999 mem: location 1440 is 1098
9999 mem: storing 3 in location 1098
 106 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1447
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {go-render?: "boolean"}
9999 mem: location 1437 is 1090
9999 mem: location 1447 is 1
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1090
9998 run: result 1 is 1
9999 mem: decrementing refcount of 1090: 10 -> 9
9999 mem: storing 1090 in location 1351
9999 mem: incrementing refcount of 1090: 9 -> 10
9999 mem: storing 1 in location 1356
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: ("address" "number"), "lookup": ()}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1350 is 1008
9999 mem: location 1362 is 1098
9999 mem: location 1098 is 3
9999 mem: location 1363 is 1099
9999 mem: location 1099 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 36 -> 37
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 37 -> 36
9999 mem: storing 1008 in location 1350
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: {undo-coalesce-tag: "number"} <- copy {2: "literal", "right-arrow": ()}
9999 mem: storing 2 in location 1389
 105 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 3
9999 mem: storing 3 in location 1390
 105 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1391
 105 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1092 is 1139
9999 mem: storing 1139 in location 1392
9999 mem: incrementing refcount of 1139: 15 -> 16
9990 schedule: handle-keyboard-event/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-right-arrow
 105 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1389 is 2
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1351 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1370
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1370 is 1101
9999 mem: location 1101 is 1344
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1370 is 1101
9999 mem: location 1101 is 1344
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1344 in location 1137
9999 mem: incrementing refcount of 1344: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1137 is 1344
9999 mem: skipping refcount at 1344
9999 mem: location 1345 is 1205
9999 mem: location 1346 is 0
9999 mem: location 1137 is 1344
9999 mem: skipping refcount at 1344
9998 run: address to copy is 1345
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1345 is 1205
9999 mem: storing 1205 in location 1138
9999 mem: incrementing refcount of 1205: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1138 is 1205
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1205
9999 mem: storing 1205 in location 1369
9999 mem: incrementing refcount of 1205: 4 -> 5
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1369 is 1205
9999 mem: skipping refcount at 1205
9999 mem: location 1206 is 1
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1109
9999 mem: location 1210 is 3
9999 mem: location 1211 is 3
9999 mem: location 1212 is 1109
9999 mem: location 1213 is 0
9999 mem: location 1214 is 0
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1369 is 1205
9999 mem: skipping refcount at 1205
9999 mem: storing 1207 in location 1375
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1375 is 1207
9998 run: jump-unless fell through
 105 run: {previous-coalesce-tag: "number"} <- get {move: ("address" "move-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1375 is 1207
9999 mem: location 1207 is 1
9999 mem: location 1208 is 0
9999 mem: location 1209 is 1109
9999 mem: location 1210 is 3
9999 mem: location 1211 is 3
9999 mem: location 1212 is 1109
9999 mem: location 1213 is 0
9999 mem: location 1375 is 1207
9998 run: address to copy is 1213
9998 run: its type is "number"
9999 mem: location 1213 is 0
9999 mem: storing 0 in location 1393
 105 run: {coalesce?: "boolean"} <- equal {undo-coalesce-tag: "number"}, {previous-coalesce-tag: "number"}
9999 mem: location 1389 is 2
9999 mem: location 1393 is 0
9999 mem: storing 0 in location 1394
 105 run: jump-unless {coalesce?: "boolean"}, {: "offset"}
9999 mem: location 1394 is 0
9998 run: jumping to instruction 750
 105 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1457
9999 mem: decrementing refcount of 1205: 5 -> 4
9999 mem: storing 1457 in location 1369
9999 mem: incrementing refcount of 1457: 0 -> 1
 105 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1386 is 3
9999 mem: location 1387 is 3
9999 mem: location 1388 is 1109
9999 mem: location 1390 is 3
9999 mem: location 1391 is 0
9999 mem: location 1392 is 1139
9999 mem: location 1389 is 2
9999 mem: location 1369 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1369 is 1457
9999 mem: skipping refcount at 1457
9999 mem: storing 1 in location 1458
9999 mem: storing 3 in location 1459
9999 mem: storing 3 in location 1460
9999 mem: storing 1109 in location 1461
9999 mem: storing 3 in location 1462
9999 mem: storing 0 in location 1463
9999 mem: storing 1139 in location 1464
9999 mem: storing 2 in location 1465
 105 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1351 is 1090
9999 mem: location 1369 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1123
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1126
9999 mem: incrementing refcount of 1090: 10 -> 11
 106 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1127
9999 mem: incrementing refcount of 1457: 1 -> 2
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1344
9999 mem: location 1102 is 0
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1128
 106 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1127 is 1457
9999 mem: location 1128 is 1101
9999 mem: location 1101 is 1344
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1103
 107 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1106
9999 mem: incrementing refcount of 1457: 2 -> 3
 107 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1344 in location 1107
9999 mem: incrementing refcount of 1344: 3 -> 4
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1469
9999 mem: storing 1469 in location 1108
9999 mem: incrementing refcount of 1469: 0 -> 1
 107 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1106 is 1457
9999 mem: location 1107 is 1344
9999 mem: location 1108 is 1469
9999 mem: skipping refcount at 1469
9999 mem: location 1108 is 1469
9999 mem: skipping refcount at 1469
9999 mem: storing 1457 in location 1470
9999 mem: storing 1344 in location 1471
 107 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1108 is 1469
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1469
9999 mem: location 1128 is 1101
9999 mem: decrementing refcount of 1344: 4 -> 3
9999 mem: storing 1469 in location 1101
9999 mem: incrementing refcount of 1469: 1 -> 2
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1126 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1129
 106 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1129 is 1102
9999 mem: storing 0 in location 1102
 106 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1126 is 1090
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1090
9999 mem: decrementing refcount of 1090: 11 -> 10
9999 mem: storing 1090 in location 1351
9999 mem: incrementing refcount of 1090: 10 -> 11
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1350 is 1008
9999 mem: location 1351 is 1090
9999 mem: location 1356 is 1
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1090
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 37 -> 36
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 36 -> 37
9999 mem: decrementing refcount of 1090: 11 -> 10
9999 mem: storing 1090 in location 1262
9999 mem: incrementing refcount of 1090: 10 -> 11
9999 mem: storing 1 in location 1272
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1272 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 1090
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1056
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1059
9999 mem: incrementing refcount of 1008: 37 -> 38
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1060
9999 mem: incrementing refcount of 1090: 11 -> 12
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1060 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1060 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1061
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1060 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1060 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1062
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1059 is 1008
9999 mem: location 1060 is 1090
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1175
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 38 -> 39
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1090 in location 1179
9999 mem: incrementing refcount of 1090: 12 -> 13
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1179 is 1090
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1095
9998 run: its type is "number"
9999 mem: location 1095 is 0
9999 mem: storing 0 in location 1180
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1178 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1137
9999 mem: incrementing refcount of 1008: 39 -> 40
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1137 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1138
 107 run: return {height: "number"}
9999 mem: location 1138 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 4
9999 mem: storing 4 in location 1181
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1096
9998 run: its type is "number"
9999 mem: location 1096 is 4
9999 mem: storing 4 in location 1182
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1092
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1092 is 1139
9999 mem: storing 1139 in location 1183
9999 mem: incrementing refcount of 1139: 16 -> 17
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1139
9999 mem: storing 1139 in location 1184
9999 mem: incrementing refcount of 1139: 17 -> 18
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1139
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1137
9999 mem: incrementing refcount of 1139: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1139
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1143
9999 mem: storing 1143 in location 1138
9999 mem: incrementing refcount of 1143: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1143
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1139: 19 -> 18
9999 mem: storing 1143 in location 1183
9999 mem: incrementing refcount of 1143: 13 -> 14
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1185
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1186
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1187
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1188
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1189
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1190
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1186 is 1
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 40 -> 41
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 40 -> 41
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1143
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 1
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1183 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1144
9998 run: its type is "character"
9999 mem: location 1144 is 98
9999 mem: storing 98 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1472
9999 mem: storing 10 in location 1473
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 98
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 98
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 98
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 98
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 41 -> 42
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 98
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 5 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 17 -> 18
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 98
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 5
9999 mem: storing 1026 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1026
9999 mem: location 1026 is 97
9999 mem: location 1027 is 7
9999 mem: location 1239 is 1026
9998 run: address to copy is 1026
9999 mem: storing 1026 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 98
9999 mem: location 1240 is 1026
9999 mem: storing 98 in location 1026
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1026
9999 mem: location 1026 is 98
9999 mem: location 1027 is 7
9999 mem: location 1239 is 1026
9998 run: address to copy is 1027
9999 mem: storing 1027 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1027
9999 mem: storing 7 in location 1027
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1230 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1143
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1137
9999 mem: incrementing refcount of 1143: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1143
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1147
9999 mem: storing 1147 in location 1138
9999 mem: incrementing refcount of 1147: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1147
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1143: 15 -> 14
9999 mem: storing 1147 in location 1183
9999 mem: incrementing refcount of 1147: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1139
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1139 in location 1137
9999 mem: incrementing refcount of 1139: 18 -> 19
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1139
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9999 mem: location 1140 is 10
9999 mem: location 1141 is 1143
9999 mem: location 1142 is 1130
9999 mem: location 1137 is 1139
9999 mem: skipping refcount at 1139
9998 run: address to copy is 1141
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1141 is 1143
9999 mem: storing 1143 in location 1138
9999 mem: incrementing refcount of 1143: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1143
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1143
9999 mem: decrementing refcount of 1139: 19 -> 18
9999 mem: storing 1143 in location 1184
9999 mem: incrementing refcount of 1143: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1147
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 1
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1183 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1148
9998 run: its type is "character"
9999 mem: location 1148 is 10
9999 mem: storing 10 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 10
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 10
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 10
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 10
9999 mem: storing 1 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 1
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 44
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1187 is 1
9999 mem: location 1182 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1113
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 42 -> 43
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1117
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1118
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1119
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1120
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 1
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 43 -> 44
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 6 in location 1234
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 18 -> 19
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 6
9999 mem: storing 1028 in location 1239
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1028
9999 mem: location 1028 is 32
9999 mem: location 1029 is 7
9999 mem: location 1239 is 1028
9998 run: address to copy is 1028
9999 mem: storing 1028 in location 1240
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1028
9999 mem: storing 32 in location 1028
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1028
9999 mem: location 1028 is 32
9999 mem: location 1029 is 7
9999 mem: location 1239 is 1028
9998 run: address to copy is 1029
9999 mem: storing 1029 in location 1241
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1029
9999 mem: storing 7 in location 1029
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1230 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 43 -> 44
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 1
9999 mem: storing 2 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 2
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 44 -> 45
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 7 in location 1234
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 19 -> 20
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 7
9999 mem: storing 1030 in location 1239
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1030
9999 mem: location 1030 is 32
9999 mem: location 1031 is 7
9999 mem: location 1239 is 1030
9998 run: address to copy is 1030
9999 mem: storing 1030 in location 1240
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1030
9999 mem: storing 32 in location 1030
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1030
9999 mem: location 1030 is 32
9999 mem: location 1031 is 7
9999 mem: location 1239 is 1030
9998 run: address to copy is 1031
9999 mem: storing 1031 in location 1241
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1031
9999 mem: storing 7 in location 1031
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1230 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 44 -> 45
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 2
9999 mem: storing 3 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 3
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 45 -> 46
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 8 in location 1234
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 20 -> 21
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 8
9999 mem: storing 1032 in location 1239
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1239 is 1032
9998 run: address to copy is 1032
9999 mem: storing 1032 in location 1240
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1032
9999 mem: storing 32 in location 1032
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1032
9999 mem: location 1032 is 32
9999 mem: location 1033 is 7
9999 mem: location 1239 is 1032
9998 run: address to copy is 1033
9999 mem: storing 1033 in location 1241
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1033
9999 mem: storing 7 in location 1033
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1230 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 45 -> 46
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 3
9999 mem: storing 4 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 4
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 46 -> 47
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 1
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 1
9999 mem: location 1226 is 5
9999 mem: storing 5 in location 1234
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 5
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 9 in location 1234
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 21 -> 22
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 9
9999 mem: storing 1034 in location 1239
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1239 is 1034
9998 run: address to copy is 1034
9999 mem: storing 1034 in location 1240
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1034
9999 mem: storing 32 in location 1034
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1034
9999 mem: location 1034 is 32
9999 mem: location 1035 is 7
9999 mem: location 1239 is 1034
9998 run: address to copy is 1035
9999 mem: storing 1035 in location 1241
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1035
9999 mem: storing 7 in location 1035
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1242 is 4
9999 mem: storing 1 in location 1243
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 46 -> 47
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 4
9999 mem: storing 5 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 5
9999 mem: location 1118 is 4
9999 mem: storing 1 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1116 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1186 is 1
9999 mem: storing 2 in location 1186
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1187
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1186 is 2
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 47 -> 48
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 48 -> 47
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 47 -> 48
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1137
9999 mem: incrementing refcount of 1147: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1147
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1151
9999 mem: storing 1151 in location 1138
9999 mem: incrementing refcount of 1151: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1151
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1147: 15 -> 14
9999 mem: storing 1151 in location 1183
9999 mem: incrementing refcount of 1151: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1143
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1143 in location 1137
9999 mem: incrementing refcount of 1143: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1143
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9999 mem: location 1144 is 98
9999 mem: location 1145 is 1147
9999 mem: location 1146 is 1139
9999 mem: location 1137 is 1143
9999 mem: skipping refcount at 1143
9998 run: address to copy is 1145
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1145 is 1147
9999 mem: storing 1147 in location 1138
9999 mem: incrementing refcount of 1147: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1147
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1147
9999 mem: decrementing refcount of 1143: 17 -> 16
9999 mem: storing 1147 in location 1184
9999 mem: incrementing refcount of 1147: 15 -> 16
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1151
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 2
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-right-arrow
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1183 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1152
9998 run: its type is "character"
9999 mem: location 1152 is 99
9999 mem: storing 99 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 99
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 99
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 99
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 99
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 48 -> 49
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 99
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 22 -> 23
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 99
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 10
9999 mem: storing 1036 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1036
9999 mem: location 1036 is 98
9999 mem: location 1037 is 7
9999 mem: location 1239 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 99
9999 mem: location 1240 is 1036
9999 mem: storing 99 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1036
9999 mem: location 1036 is 99
9999 mem: location 1037 is 7
9999 mem: location 1239 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1230 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1137
9999 mem: incrementing refcount of 1151: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1151
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1138
9999 mem: incrementing refcount of 1155: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1155
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1151: 15 -> 14
9999 mem: storing 1155 in location 1183
9999 mem: incrementing refcount of 1155: 13 -> 14
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1147
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1147 in location 1137
9999 mem: incrementing refcount of 1147: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1147
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9999 mem: location 1148 is 10
9999 mem: location 1149 is 1151
9999 mem: location 1150 is 1143
9999 mem: location 1137 is 1147
9999 mem: skipping refcount at 1147
9998 run: address to copy is 1149
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1149 is 1151
9999 mem: storing 1151 in location 1138
9999 mem: incrementing refcount of 1151: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1151
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1151
9999 mem: decrementing refcount of 1147: 17 -> 16
9999 mem: storing 1151 in location 1184
9999 mem: incrementing refcount of 1151: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1155
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 2
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1183 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1156
9998 run: its type is "character"
9999 mem: location 1156 is 100
9999 mem: storing 100 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 100
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 100
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 100
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 1
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 100
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 49 -> 50
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 23 -> 24
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 100
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 11
9999 mem: storing 1038 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1239 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 100
9999 mem: location 1240 is 1038
9999 mem: storing 100 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1038
9999 mem: location 1038 is 100
9999 mem: location 1039 is 7
9999 mem: location 1239 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1230 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1155
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1137
9999 mem: incrementing refcount of 1155: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1155
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 1159
9999 mem: storing 1159 in location 1138
9999 mem: incrementing refcount of 1159: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1155: 15 -> 14
9999 mem: storing 1159 in location 1183
9999 mem: incrementing refcount of 1159: 14 -> 15
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1151
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1151 in location 1137
9999 mem: incrementing refcount of 1151: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1151
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9999 mem: location 1152 is 99
9999 mem: location 1153 is 1155
9999 mem: location 1154 is 1147
9999 mem: location 1137 is 1151
9999 mem: skipping refcount at 1151
9998 run: address to copy is 1153
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1153 is 1155
9999 mem: storing 1155 in location 1138
9999 mem: incrementing refcount of 1155: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1155
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1155
9999 mem: decrementing refcount of 1151: 17 -> 16
9999 mem: storing 1155 in location 1184
9999 mem: incrementing refcount of 1155: 15 -> 16
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 1
9999 mem: storing 2 in location 1187
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1159
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 2
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1183 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1160
9998 run: its type is "character"
9999 mem: location 1160 is 101
9999 mem: storing 101 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 101
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 101
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 101
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 101
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 2
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 101
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 50 -> 51
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 101
  90 print-character: 101 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 101
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 24 -> 25
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 101
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 12
9999 mem: storing 1040 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1239 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 101
9999 mem: location 1240 is 1040
9999 mem: storing 101 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1040
9999 mem: location 1040 is 101
9999 mem: location 1041 is 7
9999 mem: location 1239 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1230 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 15 -> 16
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1159: 16 -> 15
9999 mem: storing 1163 in location 1183
9999 mem: incrementing refcount of 1163: 18 -> 19
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1155
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1155 in location 1137
9999 mem: incrementing refcount of 1155: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1155
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9999 mem: location 1156 is 100
9999 mem: location 1157 is 1159
9999 mem: location 1158 is 1151
9999 mem: location 1137 is 1155
9999 mem: skipping refcount at 1155
9998 run: address to copy is 1157
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1157 is 1159
9999 mem: storing 1159 in location 1138
9999 mem: incrementing refcount of 1159: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1159
9999 mem: decrementing refcount of 1155: 17 -> 16
9999 mem: storing 1159 in location 1184
9999 mem: incrementing refcount of 1159: 16 -> 17
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 2
9999 mem: storing 3 in location 1187
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1163
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 2
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1183 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1164
9998 run: its type is "character"
9999 mem: location 1164 is 102
9999 mem: storing 102 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 102
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 102
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 102
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 102
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 3
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 102
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 51 -> 52
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 102
  90 print-character: 102 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 102
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 25 -> 26
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 102
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 13
9999 mem: storing 1042 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1239 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 102
9999 mem: location 1240 is 1042
9999 mem: storing 102 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1042
9999 mem: location 1042 is 102
9999 mem: location 1043 is 7
9999 mem: location 1239 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1230 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1137
9999 mem: incrementing refcount of 1163: 19 -> 20
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1138
9999 mem: incrementing refcount of 1167: 11 -> 12
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1167
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: decrementing refcount of 1163: 20 -> 19
9999 mem: storing 1167 in location 1183
9999 mem: incrementing refcount of 1167: 12 -> 13
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1137
9999 mem: incrementing refcount of 1159: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 101
9999 mem: location 1161 is 1163
9999 mem: location 1162 is 1155
9999 mem: location 1137 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1163
9999 mem: storing 1163 in location 1138
9999 mem: incrementing refcount of 1163: 19 -> 20
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1163
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1163
9999 mem: decrementing refcount of 1159: 18 -> 17
9999 mem: storing 1163 in location 1184
9999 mem: incrementing refcount of 1163: 20 -> 21
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 3
9999 mem: storing 4 in location 1187
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1167
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 2
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 2
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1183 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1168
9998 run: its type is "character"
9999 mem: location 1168 is 103
9999 mem: storing 103 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 103
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 103
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 103
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 4
9999 mem: location 1182 is 4
9999 mem: storing 1 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 1
9998 run: jump-unless fell through
 106 run: {wrap-icon: "character"} <- copy {8617: "literal", "loop-back-to-left": ()}
9999 mem: storing 8617 in location 1198
 106 run: print {screen: ("address" "shared" "screen")}, {wrap-icon: "character"}, {245: "literal", "grey": ()}
9999 mem: location 1178 is 1008
9999 mem: location 1198 is 8617
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 52 -> 53
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 8617 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 8617
  90 print-character: 8617 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1229
9990 schedule: print/render/editor-render/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-right-arrow
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 8617
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 2
9999 mem: location 1226 is 5
9999 mem: storing 10 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 10
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 26 -> 27
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 8617
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 14
9999 mem: storing 1044 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1239 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 8617
9999 mem: location 1240 is 1044
9999 mem: storing 8617 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1044
9999 mem: location 1044 is 8617
9999 mem: location 1045 is 7
9999 mem: location 1239 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 245
9999 mem: location 1241 is 1045
9999 mem: storing 245 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1242 is 4
9999 mem: storing 1 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1180 is 0
9999 mem: storing 0 in location 1187
 106 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1186 is 2
9999 mem: storing 3 in location 1186
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1186 is 3
9999 mem: location 1187 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1178
9999 mem: incrementing refcount of 1008: 53 -> 54
 106 run: jump {+next-character: "label"}
9998 run: jumping to instruction 21
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1167
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1187 is 0
9999 mem: location 1189 is 1099
9999 mem: location 1099 is 0
9999 mem: storing 1 in location 1193
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1163
9999 mem: location 1190 is 1094
9999 mem: decrementing refcount of 1163: 21 -> 20
9999 mem: storing 1163 in location 1094
9999 mem: incrementing refcount of 1163: 20 -> 21
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1183 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1168
9998 run: its type is "character"
9999 mem: location 1168 is 103
9999 mem: storing 103 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 103
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 103
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 103
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 103
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 0
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 103
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 103 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 103
  90 print-character: 103 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 103
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 15 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 27 -> 28
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 103
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 15
9999 mem: storing 1046 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1046
9999 mem: location 1046 is 99
9999 mem: location 1047 is 7
9999 mem: location 1239 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 103
9999 mem: location 1240 is 1046
9999 mem: storing 103 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1046
9999 mem: location 1046 is 103
9999 mem: location 1047 is 7
9999 mem: location 1239 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1230 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1137
9999 mem: incrementing refcount of 1167: 13 -> 14
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1167
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1137 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1138
9999 mem: incrementing refcount of 1171: 3 -> 4
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1171
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1167: 14 -> 13
9999 mem: storing 1171 in location 1183
9999 mem: incrementing refcount of 1171: 4 -> 5
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1163
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1163 in location 1137
9999 mem: incrementing refcount of 1163: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1163
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9999 mem: location 1164 is 102
9999 mem: location 1165 is 1167
9999 mem: location 1166 is 1159
9999 mem: location 1137 is 1163
9999 mem: skipping refcount at 1163
9998 run: address to copy is 1165
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1165 is 1167
9999 mem: storing 1167 in location 1138
9999 mem: incrementing refcount of 1167: 13 -> 14
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1167
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1167
9999 mem: decrementing refcount of 1163: 22 -> 21
9999 mem: storing 1167 in location 1184
9999 mem: incrementing refcount of 1167: 14 -> 15
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 0
9999 mem: storing 1 in location 1187
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 1171
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1181 is 4
9999 mem: storing 0 in location 1191
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1192
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1192 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1187 is 1
9999 mem: location 1189 is 1099
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1193
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1183 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 104
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1167
9999 mem: location 1183 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1172
9998 run: its type is "character"
9999 mem: location 1172 is 104
9999 mem: storing 104 in location 1194
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1185 is 7
9999 mem: location 1194 is 104
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1472
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1475
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1476
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1475 is 7
9999 mem: storing 1 in location 1477
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1476 is 104
9999 mem: storing 0 in location 1478
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1479
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1479 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1477 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1476 is 104
9999 mem: storing 0 in location 1481
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1481 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1475 is 7
9999 mem: storing 0 in location 1482
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1482 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1475 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1185
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1194 is 104
9999 mem: storing 0 in location 1195
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1187 is 1
9999 mem: location 1182 is 4
9999 mem: storing 0 in location 1197
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1197 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1178 is 1008
9999 mem: location 1194 is 104
9999 mem: location 1185 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 104 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 0 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1224
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 104
  90 print-character: 104 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 104
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 16 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 28 -> 29
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 104
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 16
9999 mem: storing 1048 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1048
9999 mem: location 1048 is 100
9999 mem: location 1049 is 7
9999 mem: location 1239 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 104
9999 mem: location 1240 is 1048
9999 mem: storing 104 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1048
9999 mem: location 1048 is 104
9999 mem: location 1049 is 7
9999 mem: location 1239 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1230 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 1171
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1171 in location 1137
9999 mem: incrementing refcount of 1171: 5 -> 6
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1171
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1171
9999 mem: skipping refcount at 1171
9999 mem: location 1172 is 104
9999 mem: location 1173 is 0
9999 mem: location 1174 is 1167
9999 mem: location 1137 is 1171
9999 mem: skipping refcount at 1171
9998 run: address to copy is 1173
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1173 is 0
9999 mem: storing 0 in location 1138
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1171: 6 -> 5
9999 mem: storing 0 in location 1183
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1184 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1137
9999 mem: incrementing refcount of 1167: 15 -> 16
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1137 is 1167
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1137 is 1167
9999 mem: skipping refcount at 1167
9999 mem: location 1168 is 103
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1163
9999 mem: location 1137 is 1167
9999 mem: skipping refcount at 1167
9998 run: address to copy is 1169
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1138
9999 mem: incrementing refcount of 1171: 5 -> 6
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1138 is 1171
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1171
9999 mem: decrementing refcount of 1167: 16 -> 15
9999 mem: storing 1171 in location 1184
9999 mem: incrementing refcount of 1171: 6 -> 7
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1187 is 1
9999 mem: storing 2 in location 1187
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1183 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 1167
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1199
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1183 is 0
9999 mem: location 1199 is 1093
9999 mem: decrementing refcount of 1167: 15 -> 14
9999 mem: storing 0 in location 1093
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 1 in location 1192
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1187 is 2
9999 mem: location 1189 is 1099
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1200
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1192 is 1
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1186 is 3
9999 mem: location 1188 is 1098
9999 mem: location 1098 is 3
9999 mem: storing 0 in location 1202
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: storing 0 in location 1203
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1203 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 4
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1179 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1204
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1186 is 3
9999 mem: location 1204 is 1097
9999 mem: storing 3 in location 1097
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1186 is 3
9999 mem: location 1187 is 2
9999 mem: location 1178 is 1008
9999 mem: location 1179 is 1090
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 3
9998 run: result 1 is 2
9999 mem: storing 3 in location 1063
9999 mem: storing 2 in location 1064
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1059 is 1008
9999 mem: location 1064 is 2
9999 mem: location 1062 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1113
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1117
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1118
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1119
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1120
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 2
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 17 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 29 -> 30
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 17
9999 mem: storing 1050 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1050
9999 mem: location 1050 is 101
9999 mem: location 1051 is 7
9999 mem: location 1239 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1239 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1230 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 2
9999 mem: storing 3 in location 1117
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 3
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 18 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 30 -> 31
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 18
9999 mem: storing 1052 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1052
9999 mem: location 1052 is 102
9999 mem: location 1053 is 7
9999 mem: location 1239 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1239 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1242 is 4
9999 mem: storing 0 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1230 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 3
9999 mem: storing 4 in location 1117
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 4
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 3
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1227 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1230
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1226 is 5
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1231
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1231 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1228 is 3
9999 mem: location 1226 is 5
9999 mem: storing 15 in location 1234
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1234 is 15
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 19 in location 1234
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1235
9999 mem: incrementing refcount of 1014: 31 -> 32
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 20 in location 1236
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1221 is 32
9999 mem: storing 0 in location 1237
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1237 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1235 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1234 is 19
9999 mem: storing 1054 in location 1239
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1239 is 1054
9999 mem: location 1054 is 8617
9999 mem: location 1055 is 245
9999 mem: location 1239 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1240
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1221 is 32
9999 mem: location 1240 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1239 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 245
9999 mem: location 1239 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1241
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1222 is 7
9999 mem: location 1241 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1226 is 5
9999 mem: storing 4 in location 1242
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1230 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1242 is 4
9999 mem: storing 1 in location 1243
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 4
9999 mem: storing 5 in location 1117
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 5
9999 mem: location 1118 is 4
9999 mem: storing 1 in location 1122
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1116 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1063 is 3
9999 mem: storing 4 in location 1063
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1059 is 1008
9999 mem: location 1063 is 4
9999 mem: location 1061 is 0
9999 mem: location 1062 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1273
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1277
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1279
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1280
9999 mem: storing 1 in location 1281
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1281 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1283 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1282
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1284
9999 mem: storing 0 in location 1285
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1285 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1284
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1277 is 4
9999 mem: location 1278 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 4
9999 mem: location 1006 is 1011
9999 mem: storing 4 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1276
9999 mem: incrementing refcount of 1008: 61 -> 62
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1278 is 0
9999 mem: location 1279 is 4
9999 mem: storing 1 in location 1286
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1280 is 9480
9999 mem: location 1282 is 245
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 62 -> 63
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-scrolls-down-on-right-arrow
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1278 is 0
9999 mem: storing 1 in location 1278
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1278 is 1
9999 mem: location 1279 is 4
9999 mem: storing 1 in location 1286
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1280 is 9480
9999 mem: location 1282 is 245
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 63 -> 64
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1278 is 1
9999 mem: storing 2 in location 1278
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1278 is 2
9999 mem: location 1279 is 4
9999 mem: storing 1 in location 1286
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1280 is 9480
9999 mem: location 1282 is 245
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 64 -> 65
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1278 is 2
9999 mem: storing 3 in location 1278
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1278 is 3
9999 mem: location 1279 is 4
9999 mem: storing 1 in location 1286
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1280 is 9480
9999 mem: location 1282 is 245
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 65 -> 66
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1278 is 3
9999 mem: storing 4 in location 1278
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1278 is 4
9999 mem: location 1279 is 4
9999 mem: storing 1 in location 1286
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1276 is 1008
9999 mem: location 1280 is 9480
9999 mem: location 1282 is 245
9999 mem: location 1284 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 66 -> 67
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1221
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1222
9999 mem: storing 1 in location 1223
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1228
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 4
9999 mem: storing 1 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 4
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1278 is 4
9999 mem: storing 5 in location 1278
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1278 is 5
9999 mem: location 1279 is 4
9999 mem: storing 0 in location 1286
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1286 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1276 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1063 is 4
9999 mem: storing 5 in location 1063
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1059 is 1008
9999 mem: location 1063 is 5
9999 mem: location 1061 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 4
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 67 -> 68
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1484
9999 mem: storing 6 in location 1485
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1487
9999 mem: incrementing refcount of 1008: 68 -> 69
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1488
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1489
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1487 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1490
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1488 is 5
9999 mem: location 1490 is 1011
9999 mem: storing 5 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1491
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1489 is 0
9999 mem: location 1491 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1487 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 69 -> 68
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 68 -> 69
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1113
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 69 -> 70
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1117
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1118
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1119
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1120
9999 mem: storing 0 in location 1121
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1121 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1120
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 0
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 70 -> 71
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 5
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 71 -> 70
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 70 -> 71
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 0
9999 mem: storing 1 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 1
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 71 -> 72
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 5
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 71 -> 72
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 1
9999 mem: storing 2 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 2
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 72 -> 73
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 5
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 72 -> 73
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 2
9999 mem: storing 3 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 3
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 73 -> 74
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 5
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 74 -> 73
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 73 -> 74
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 3
9999 mem: storing 4 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 4
9999 mem: location 1118 is 4
9999 mem: storing 0 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1116 is 1008
9999 mem: location 1119 is 32
9999 mem: location 1120 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1217
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1220
9999 mem: incrementing refcount of 1008: 74 -> 75
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1221
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1222
9999 mem: storing 1 in location 1223
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1223 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1224
9999 mem: storing 1 in location 1225
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1225 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1221 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1220 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 5
9999 mem: storing 5 in location 1226
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1227
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1220 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 5
9999 mem: storing 5 in location 1228
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1228 is 5
9999 mem: storing 1 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1228 is 5
9999 mem: location 1227 is 4
9999 mem: storing 0 in location 1229
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1229 is 0
9998 run: jump-if fell through
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1220 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 75 -> 74
9999 mem: storing 1008 in location 1116
9999 mem: incrementing refcount of 1008: 74 -> 75
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1117 is 4
9999 mem: storing 5 in location 1117
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1117 is 5
9999 mem: location 1118 is 4
9999 mem: storing 1 in location 1122
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1122 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1116 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 5
9999 mem: location 1006 is 0
9999 mem: location 1007 is 4
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1492
9999 mem: storing 7 in location 1493
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1495
9999 mem: incrementing refcount of 1008: 75 -> 76
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1496
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1497
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1498
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1496 is 5
9999 mem: storing 6 in location 1496
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1495 is 1008
9999 mem: location 1496 is 6
9999 mem: location 1497 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1484
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1487
9999 mem: incrementing refcount of 1008: 76 -> 77
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 6 in location 1488
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1489
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1487 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 5
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1490
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1488 is 6
9999 mem: location 1490 is 1011
9999 mem: storing 6 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1487 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1491
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1489 is 0
9999 mem: location 1491 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1487 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 77 -> 76
9999 mem: storing 1008 in location 1495
9999 mem: incrementing refcount of 1008: 76 -> 77
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1495 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1137
9999 mem: incrementing refcount of 1008: 77 -> 78
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1137 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1137 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 4
9999 mem: storing 4 in location 1138
 108 run: return {height: "number"}
9999 mem: location 1138 is 4
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 4
9999 mem: storing 4 in location 1499
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1496 is 6
9999 mem: location 1499 is 4
9999 mem: storing 1 in location 1500
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1500 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1495 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1059 is 1008
9999 mem: location 1060 is 1090
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 78 -> 77
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 77 -> 78
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 3
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 3
9999 mem: storing 3 in location 1263
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 3
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 1262 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 1264
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1263 is 3
9999 mem: location 1264 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 78 -> 79
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 3
9999 mem: location 1006 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 4
9999 mem: location 1010 is 5
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 79 -> 78
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 78 -> 79
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1261 is 1254
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1273
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1254 in location 1276
9999 mem: incrementing refcount of 1254: 3 -> 4
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1276 is 1254
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 2
9999 mem: location 1256 is 1244
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1255
9999 mem: storing 1255 in location 1277
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9999 mem: location 1255 is 2
9999 mem: location 1256 is 1244
9999 mem: location 1276 is 1254
9999 mem: skipping refcount at 1254
9998 run: address to copy is 1256
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1256 is 1244
9999 mem: storing 1244 in location 1278
9999 mem: incrementing refcount of 1244: 3 -> 4
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1278 is 1244
9999 mem: skipping refcount at 1244
9999 mem: storing 2 in location 1279
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1277 is 1255
9999 mem: location 1255 is 2
9999 mem: location 1279 is 2
9999 mem: storing 1 in location 1280
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1280 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1134
9999 mem: storing 1134 in location 1281
9999 mem: incrementing refcount of 1134: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1281 is 1134
9999 mem: skipping refcount at 1134
9999 mem: location 1135 is 0
9999 mem: location 1136 is 0
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1276 is 1254
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1254
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1265
9999 mem: storing 0 in location 1266
9999 mem: storing 0 in location 1267
9999 mem: storing 0 in location 1268
9999 mem: decrementing refcount of 1254: 4 -> 3
9999 mem: storing 1254 in location 1261
9999 mem: incrementing refcount of 1254: 3 -> 4
9999 mem: storing 1 in location 1269
9999 mem: storing 1 in location 1270
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1269 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1270 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 1254
9999 mem: location 1262 is 1090
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 3
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 2 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1098
9998 run: its type is "number"
9999 mem: location 1098 is 3
9999 mem: storing 3 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1090
9999 mem: skipping refcount at 1090
9999 mem: location 1091 is 1109
9999 mem: location 1092 is 1139
9999 mem: location 1093 is 0
9999 mem: location 1094 is 1163
9999 mem: location 1095 is 0
9999 mem: location 1096 is 4
9999 mem: location 1097 is 3
9999 mem: location 1098 is 3
9999 mem: location 1099 is 0
9999 mem: location 1100 is 1
9999 mem: location 1101 is 1469
9999 mem: location 1102 is 0
9999 mem: location 2 is 1090
9999 mem: skipping refcount at 1090
9998 run: address to copy is 1099
9998 run: its type is "number"
9999 mem: location 1099 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .     .\n    .b    .\n    .cdef↩.\n    .gh   .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 3\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
