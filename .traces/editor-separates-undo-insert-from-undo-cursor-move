9991 parse: --- defining scenario_editor-separates-undo-insert-from-undo-cursor-move
9993 parse: instruction: assume-screen
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {10: "literal", "width": ()}
9993 parse:   ingredient: {5: "literal", "height": ()}
9992 load: after rewriting: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"": "literal-string"}
9993 parse:   product: {1: ("address" "shared" "array" "character")}
9992 load: after rewriting: {1: ("address" "shared" "array" "character")} <- new {"": "literal-string"}
9993 parse: instruction: new-editor
9993 parse:   number of ingredients: 4
9993 parse:   ingredient: {1: ("address" "shared" "array" "character")}
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {0: "literal", "left": ()}
9993 parse:   ingredient: {10: "literal", "right": ()}
9993 parse:   product: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9993 parse: instruction: editor-render
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {screen: ()}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    type [abc]\n    left-click 1, 1\n    type [d]\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    type [abc]\n    left-click 1, 1\n    type [d]\n  ": "literal-string"}
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .adbc      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .adbc      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-z\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .          .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .          .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 0\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 1\n    4 <- 0\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-y\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-y\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9993 parse: instruction: assume-console
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    press ctrl-y\n  ": "literal-string"}
9992 load: after rewriting: assume-console {"\n    press ctrl-y\n  ": "literal-string"}
9993 parse: instruction: run
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9992 load: after rewriting: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9993 parse: instruction: screen-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    .          .\n    .adbc      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9992 load: after rewriting: screen-should-contain {"\n    .          .\n    .adbc      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
9993 parse: instruction: memory-should-contain
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9992 load: after rewriting: memory-should-contain {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9999 parse: recipe scenario_editor-separates-undo-insert-from-undo-cursor-move has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- rewrite 'stash' instructions in recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- fill in reply ingredients from header for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- deduce types for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9992 transform: screen => ("address" "shared" "screen")
9992 transform: screen <= ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- collect surrounding spaces for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- transform names for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9992 transform: instruction {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9992 transform: checking variant (strict) 0: recipe new-fake-screen {w: "number"} {h: "number"} -> {result: ("address" "shared" "screen")}
9992 transform: instruction {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9992 transform: checking variant (strict) 0: recipe new-editor {s: ("address" "shared" "array" "character")} {screen: ("address" "shared" "screen")} {left: "number"} {right: "number"} -> {result: ("address" "shared" "editor-data")} {screen: ("address" "shared" "screen")}
9992 transform: instruction editor-render {screen: ()}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-render {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {editor: ("address" "shared" "editor-data")}
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- transform braces for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9992 transform: assume-screen ...
9992 transform: new ...
9992 transform: new-editor ...
9992 transform: editor-render ...
9992 transform: assume-console ...
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform: assume-console ...
9992 transform: run ...
9992 transform: screen-should-contain ...
9992 transform: memory-should-contain ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- perform checks for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- type-check 'call' instructions inside recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- type-check calls inside recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- convert 'new' to 'allocate' for recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- type-check merge instructions in recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- check types of reply instructions in recipe scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- checking reply instructions against header for scenario_editor-separates-undo-insert-from-undo-cursor-move
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: scenario_editor-separates-undo-insert-from-undo-cursor-move
 102 run: {screen: ("address" "shared" "screen")} <- new-fake-screen {10: "literal", "width": ()}, {5: "literal", "height": ()}
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1000
9999 mem: storing 6 in location 1001
 103 run: {w: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1003
 103 run: {h: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1004
 103 run: {result: ("address" "shared" "screen")} <- new {screen: "type"}
9999 mem: allocating size 6
9999 mem: new alloc: 1008
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 0 -> 1
 103 run: {bufsize: "number"} <- multiply {w: "number"}, {h: "number"}
9999 mem: location 1003 is 10
9999 mem: location 1004 is 5
9999 mem: storing 50 in location 1006
 103 run: {data: ("address" "shared" "array" "screen-cell")} <- new {screen-cell: "type"}, {bufsize: "number"}
9999 mem: location 1006 is 50
9999 mem: array size is 50
9999 mem: allocating size 102
9999 mem: new alloc: 1014
9999 mem: storing 50 in location 1015
9999 mem: storing 1014 in location 1007
9999 mem: incrementing refcount of 1014: 0 -> 1
 103 run: {result: ("address" "shared" "screen"), "lookup": ()} <- merge {h: "number", "num-rows": ()}, {w: "number", "num-columns": ()}, {0: "literal", "cursor-row": ()}, {0: "literal", "cursor-column": ()}, {data: ("address" "shared" "array" "screen-cell")}
9999 mem: location 1004 is 5
9999 mem: location 1003 is 10
9999 mem: location 1007 is 1014
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1005 is 1008
9999 mem: skipping refcount at 1008
9999 mem: storing 5 in location 1009
9999 mem: storing 10 in location 1010
9999 mem: storing 0 in location 1011
9999 mem: storing 0 in location 1012
9999 mem: storing 1014 in location 1013
 103 run: {result: ("address" "shared" "screen")} <- clear-screen {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1116
9999 mem: storing 7 in location 1117
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 1 -> 2
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1119 is 1008
9998 run: jump-unless fell through
 104 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1120
9999 mem: incrementing refcount of 1014: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1121
 104 run: {i: "number"} <- copy {0: "literal"}
9999 mem: storing 0 in location 1122
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 0
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 0
9999 mem: storing 1016 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1016
9999 mem: location 1124 is 1016
9999 mem: storing 0 in location 1016
9999 mem: storing 7 in location 1017
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 1
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 1
9999 mem: storing 1018 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1018
9999 mem: location 1124 is 1018
9999 mem: storing 0 in location 1018
9999 mem: storing 7 in location 1019
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 2
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 2
9999 mem: storing 1020 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1020
9999 mem: location 1124 is 1020
9999 mem: storing 0 in location 1020
9999 mem: storing 7 in location 1021
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 3
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 3
9999 mem: storing 1022 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1022
9999 mem: location 1124 is 1022
9999 mem: storing 0 in location 1022
9999 mem: storing 7 in location 1023
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 4
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 4
9999 mem: storing 1024 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1024
9999 mem: location 1124 is 1024
9999 mem: storing 0 in location 1024
9999 mem: storing 7 in location 1025
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 5
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 5
9999 mem: storing 1026 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1026
9999 mem: location 1124 is 1026
9999 mem: storing 0 in location 1026
9999 mem: storing 7 in location 1027
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 6
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 6
9999 mem: storing 1028 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1028
9999 mem: location 1124 is 1028
9999 mem: storing 0 in location 1028
9999 mem: storing 7 in location 1029
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 7
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 7
9999 mem: storing 1030 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1030
9999 mem: location 1124 is 1030
9999 mem: storing 0 in location 1030
9999 mem: storing 7 in location 1031
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 7
9999 mem: storing 8 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 8
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 8
9999 mem: storing 1032 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1032
9999 mem: location 1124 is 1032
9999 mem: storing 0 in location 1032
9999 mem: storing 7 in location 1033
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 8
9999 mem: storing 9 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 9
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 9
9999 mem: storing 1034 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1034
9999 mem: location 1124 is 1034
9999 mem: storing 0 in location 1034
9999 mem: storing 7 in location 1035
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 9
9999 mem: storing 10 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 10
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 10
9999 mem: storing 1036 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1036
9999 mem: location 1124 is 1036
9999 mem: storing 0 in location 1036
9999 mem: storing 7 in location 1037
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 10
9999 mem: storing 11 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 11
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 11
9999 mem: storing 1038 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1038
9999 mem: location 1124 is 1038
9999 mem: storing 0 in location 1038
9999 mem: storing 7 in location 1039
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 11
9999 mem: storing 12 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 12
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 12
9999 mem: storing 1040 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1040
9999 mem: location 1124 is 1040
9999 mem: storing 0 in location 1040
9999 mem: storing 7 in location 1041
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 12
9999 mem: storing 13 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 13
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 13
9999 mem: storing 1042 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1042
9999 mem: location 1124 is 1042
9999 mem: storing 0 in location 1042
9999 mem: storing 7 in location 1043
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 13
9999 mem: storing 14 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 14
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 14
9999 mem: storing 1044 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1044
9999 mem: location 1124 is 1044
9999 mem: storing 0 in location 1044
9999 mem: storing 7 in location 1045
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 14
9999 mem: storing 15 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 15
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 15
9999 mem: storing 1046 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1046
9999 mem: location 1124 is 1046
9999 mem: storing 0 in location 1046
9999 mem: storing 7 in location 1047
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 15
9999 mem: storing 16 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 16
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 16
9999 mem: storing 1048 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1048
9999 mem: location 1124 is 1048
9999 mem: storing 0 in location 1048
9999 mem: storing 7 in location 1049
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 16
9999 mem: storing 17 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 17
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 17
9999 mem: storing 1050 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1050
9999 mem: location 1124 is 1050
9999 mem: storing 0 in location 1050
9999 mem: storing 7 in location 1051
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 17
9999 mem: storing 18 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 18
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 18
9999 mem: storing 1052 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1052
9999 mem: location 1124 is 1052
9999 mem: storing 0 in location 1052
9999 mem: storing 7 in location 1053
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 18
9999 mem: storing 19 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 19
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 19
9999 mem: storing 1054 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1054
9999 mem: location 1124 is 1054
9999 mem: storing 0 in location 1054
9999 mem: storing 7 in location 1055
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 19
9999 mem: storing 20 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 20
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 20
9999 mem: storing 1056 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1056
9999 mem: location 1124 is 1056
9999 mem: storing 0 in location 1056
9999 mem: storing 7 in location 1057
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 20
9999 mem: storing 21 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 21
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 21
9999 mem: storing 1058 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1058
9999 mem: location 1124 is 1058
9999 mem: storing 0 in location 1058
9999 mem: storing 7 in location 1059
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 21
9999 mem: storing 22 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 22
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 22
9999 mem: storing 1060 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1060
9999 mem: location 1124 is 1060
9999 mem: storing 0 in location 1060
9999 mem: storing 7 in location 1061
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 22
9999 mem: storing 23 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 23
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 23
9999 mem: storing 1062 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1062
9999 mem: location 1124 is 1062
9999 mem: storing 0 in location 1062
9999 mem: storing 7 in location 1063
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 23
9999 mem: storing 24 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 24
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 24
9999 mem: storing 1064 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1064
9999 mem: location 1124 is 1064
9999 mem: storing 0 in location 1064
9999 mem: storing 7 in location 1065
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 24
9999 mem: storing 25 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 25
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 25
9999 mem: storing 1066 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1066
9999 mem: location 1124 is 1066
9999 mem: storing 0 in location 1066
9999 mem: storing 7 in location 1067
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 25
9999 mem: storing 26 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 26
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 26
9999 mem: storing 1068 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1068
9999 mem: location 1124 is 1068
9999 mem: storing 0 in location 1068
9999 mem: storing 7 in location 1069
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 26
9999 mem: storing 27 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 27
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 27
9999 mem: storing 1070 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1070
9999 mem: location 1124 is 1070
9999 mem: storing 0 in location 1070
9999 mem: storing 7 in location 1071
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 27
9999 mem: storing 28 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 28
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 28
9999 mem: storing 1072 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1072
9999 mem: location 1124 is 1072
9999 mem: storing 0 in location 1072
9999 mem: storing 7 in location 1073
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 28
9999 mem: storing 29 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 29
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 29
9999 mem: storing 1074 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1074
9999 mem: location 1124 is 1074
9999 mem: storing 0 in location 1074
9999 mem: storing 7 in location 1075
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 29
9999 mem: storing 30 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 30
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 30
9999 mem: storing 1076 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1076
9999 mem: location 1124 is 1076
9999 mem: storing 0 in location 1076
9999 mem: storing 7 in location 1077
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 30
9999 mem: storing 31 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 31
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 31
9999 mem: storing 1078 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1078
9999 mem: location 1124 is 1078
9999 mem: storing 0 in location 1078
9999 mem: storing 7 in location 1079
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 31
9999 mem: storing 32 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 32
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 32
9999 mem: storing 1080 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1080
9999 mem: location 1124 is 1080
9999 mem: storing 0 in location 1080
9999 mem: storing 7 in location 1081
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 32
9999 mem: storing 33 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 33
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 33
9999 mem: storing 1082 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1082
9999 mem: location 1124 is 1082
9999 mem: storing 0 in location 1082
9999 mem: storing 7 in location 1083
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 33
9999 mem: storing 34 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 34
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 34
9999 mem: storing 1084 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1084
9999 mem: location 1124 is 1084
9999 mem: storing 0 in location 1084
9999 mem: storing 7 in location 1085
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 34
9999 mem: storing 35 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 35
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 35
9999 mem: storing 1086 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1086
9999 mem: location 1124 is 1086
9999 mem: storing 0 in location 1086
9999 mem: storing 7 in location 1087
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 35
9999 mem: storing 36 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 36
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 36
9999 mem: storing 1088 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1088
9999 mem: location 1124 is 1088
9999 mem: storing 0 in location 1088
9999 mem: storing 7 in location 1089
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 36
9999 mem: storing 37 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 37
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 37
9999 mem: storing 1090 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1090
9999 mem: location 1124 is 1090
9999 mem: storing 0 in location 1090
9999 mem: storing 7 in location 1091
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 37
9999 mem: storing 38 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 38
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 38
9999 mem: storing 1092 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1092
9999 mem: location 1124 is 1092
9999 mem: storing 0 in location 1092
9999 mem: storing 7 in location 1093
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 38
9999 mem: storing 39 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 39
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 39
9999 mem: storing 1094 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1094
9999 mem: location 1124 is 1094
9999 mem: storing 0 in location 1094
9999 mem: storing 7 in location 1095
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 39
9999 mem: storing 40 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 40
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 40
9999 mem: storing 1096 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1096
9999 mem: location 1124 is 1096
9999 mem: storing 0 in location 1096
9999 mem: storing 7 in location 1097
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 40
9999 mem: storing 41 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 41
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 41
9999 mem: storing 1098 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1098
9999 mem: location 1124 is 1098
9999 mem: storing 0 in location 1098
9999 mem: storing 7 in location 1099
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 41
9999 mem: storing 42 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 42
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 42
9999 mem: storing 1100 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1100
9999 mem: location 1124 is 1100
9999 mem: storing 0 in location 1100
9999 mem: storing 7 in location 1101
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 42
9999 mem: storing 43 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 43
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 43
9999 mem: storing 1102 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1102
9999 mem: location 1124 is 1102
9999 mem: storing 0 in location 1102
9999 mem: storing 7 in location 1103
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 43
9999 mem: storing 44 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 44
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 44
9999 mem: storing 1104 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1104
9999 mem: location 1124 is 1104
9999 mem: storing 0 in location 1104
9999 mem: storing 7 in location 1105
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 44
9999 mem: storing 45 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 45
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 45
9999 mem: storing 1106 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1106
9999 mem: location 1124 is 1106
9999 mem: storing 0 in location 1106
9999 mem: storing 7 in location 1107
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 45
9999 mem: storing 46 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 46
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 46
9999 mem: storing 1108 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1108
9999 mem: location 1124 is 1108
9999 mem: storing 0 in location 1108
9999 mem: storing 7 in location 1109
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 46
9999 mem: storing 47 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 47
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 47
9999 mem: storing 1110 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1110
9999 mem: location 1124 is 1110
9999 mem: storing 0 in location 1110
9999 mem: storing 7 in location 1111
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 47
9999 mem: storing 48 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 48
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 48
9999 mem: storing 1112 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1112
9999 mem: location 1124 is 1112
9999 mem: storing 0 in location 1112
9999 mem: storing 7 in location 1113
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 48
9999 mem: storing 49 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 49
9999 mem: location 1121 is 50
9999 mem: storing 0 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 0
9998 run: jump-if fell through
 104 run: {curr: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {i: "number"}
9999 mem: location 1120 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1122 is 49
9999 mem: storing 1114 in location 1124
 104 run: {curr: ("address" "screen-cell"), "lookup": ()} <- merge {0: "literal", "empty": ()}, {7: "literal", "white": ()}
9999 mem: location 1124 is 1114
9999 mem: location 1124 is 1114
9999 mem: storing 0 in location 1114
9999 mem: storing 7 in location 1115
 104 run: {i: "number"} <- add {i: "number"}, {1: "literal"}
9999 mem: location 1122 is 49
9999 mem: storing 50 in location 1122
 104 run: jump {: "offset"}
9998 run: jumping to instruction 8
 104 run: {done?: "boolean"} <- greater-or-equal {i: "number"}, {max: "number"}
9999 mem: location 1122 is 50
9999 mem: location 1121 is 50
9999 mem: storing 1 in location 1123
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1123 is 1
9998 run: jumping to instruction 14
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1011
9999 mem: storing 0 in location 1011
 104 run: {screen: ("address" "shared" "screen"), "lookup": ()} <- put {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}, {0: "literal"}
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1119 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy to is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1119 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 2 -> 1
9999 mem: storing 1008 in location 1005
9999 mem: incrementing refcount of 1008: 1 -> 2
 103 run: reply {result: ("address" "shared" "screen")}
9999 mem: location 1005 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1008
9999 mem: storing 1008 in location 900
9999 mem: incrementing refcount of 1008: 2 -> 3
 102 run: {1: ("address" "shared" "array" "character")} <- new {"": "literal-string"}
9999 mem: new string alloc: 1125
9999 mem: storing 1125 in location 1
9999 mem: incrementing refcount of 1125: 0 -> 1
 102 run: {2: ("address" "shared" "editor-data")} <- new-editor {1: ("address" "shared" "array" "character")}, {screen: ("address" "shared" "screen")}, {0: "literal", "left": ()}, {10: "literal", "right": ()}
9999 mem: location 1 is 1125
9999 mem: location 900 is 1008
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 11
9999 mem: allocating size 13
9999 mem: new alloc: 1127
9999 mem: storing 11 in location 1128
 103 run: {s: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1130
9999 mem: incrementing refcount of 1125: 1 -> 2
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1131
9999 mem: incrementing refcount of 1008: 3 -> 4
 103 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1132
 103 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 10 in location 1133
 103 run: {right: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1133 is 10
9999 mem: storing 9 in location 1133
 103 run: {result: ("address" "shared" "editor-data")} <- new {editor-data: "type"}
9999 mem: allocating size 13
9999 mem: new alloc: 1140
9999 mem: storing 1140 in location 1134
9999 mem: incrementing refcount of 1140: 0 -> 1
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9999 mem: storing 1145 in location 1135
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1132 is 0
9999 mem: location 1135 is 1145
9999 mem: storing 0 in location 1145
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9999 mem: storing 1146 in location 1135
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {right: "number"}
9999 mem: location 1133 is 9
9999 mem: location 1135 is 1146
9999 mem: storing 9 in location 1146
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1135
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {1: "literal", "top": ()}
9999 mem: location 1135 is 1148
9999 mem: storing 1 in location 1148
 103 run: {x: ("address" "number")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1135
 103 run: {x: ("address" "number"), "lookup": ()} <- copy {left: "number"}
9999 mem: location 1132 is 0
9999 mem: location 1135 is 1149
9999 mem: storing 0 in location 1149
 103 run: {init: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {data: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1141
9999 mem: storing 1141 in location 1136
 103 run: {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- push_3 {167: "literal", "§": ()}, {0: "literal", "tail": ()}
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 mem: new alloc: 1153
9999 mem: storing 4 in location 1154
 104 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 167 in location 1156
 104 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1157
 104 run: {result: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1159
9999 mem: storing 1159 in location 1158
9999 mem: incrementing refcount of 1159: 0 -> 1
 104 run: {result: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- merge {x: "character"}, {in: ("address" "shared" "duplex-list" "character")}, {0: "literal"}
9999 mem: location 1156 is 167
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1158 is 1159
9999 mem: skipping refcount at 1159
9999 mem: storing 167 in location 1160
9999 mem: storing 0 in location 1161
9999 mem: storing 0 in location 1162
 104 run: jump-unless {in: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1157 is 0
9998 run: jumping to instruction 8
 104 run: return {result: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1159
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1159
9999 mem: location 1136 is 1141
9999 mem: storing 1159 in location 1141
9999 mem: incrementing refcount of 1159: 1 -> 2
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1137
 103 run: {top-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1136 is 1141
9999 mem: location 1141 is 1159
9999 mem: location 1137 is 1142
9999 mem: storing 1159 in location 1142
9999 mem: incrementing refcount of 1159: 2 -> 3
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1138
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1136 is 1141
9999 mem: location 1141 is 1159
9999 mem: location 1138 is 1144
9999 mem: storing 1159 in location 1144
9999 mem: incrementing refcount of 1159: 3 -> 4
 103 run: {result: ("address" "shared" "editor-data")} <- insert-text {result: ("address" "shared" "editor-data")}, {s: ("address" "shared" "array" "character")}
9999 mem: location 1134 is 1140
9999 mem: location 1130 is 1125
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 mem: new alloc: 1163
9999 mem: storing 8 in location 1164
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1166
9999 mem: incrementing refcount of 1140: 1 -> 2
 104 run: {text: ("address" "shared" "array" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1125 in location 1167
9999 mem: incrementing refcount of 1125: 2 -> 3
 104 run: jump-if {text: ("address" "shared" "array" "character")}, {1: "offset"}
9999 mem: location 1167 is 1125
9998 run: jumping to instruction 5
 104 run: {len: "number"} <- length {text: ("address" "shared" "array" "character"), "lookup": ()}
9999 mem: location 1167 is 1125
9999 mem: skipping refcount at 1125
9999 mem: storing 0 in location 1168
 104 run: jump-if {len: "number"}, {1: "offset"}
9999 mem: location 1168 is 0
9998 run: jump-if fell through
 104 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1166 is 1140
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 2 -> 1
9999 mem: storing 1140 in location 1134
9999 mem: incrementing refcount of 1140: 1 -> 2
 103 run: {y: ("address" "address" "shared" "duplex-list" "character")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1138
 103 run: {y: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {init: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1136 is 1141
9999 mem: location 1141 is 1159
9999 mem: location 1138 is 1144
9999 mem: decrementing refcount of 1159: 4 -> 3
9999 mem: storing 1159 in location 1144
9999 mem: incrementing refcount of 1159: 3 -> 4
 103 run: _, _, {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")} <- render {screen: ("address" "shared" "screen")}, {result: ("address" "shared" "editor-data")}
9999 mem: location 1131 is 1008
9999 mem: location 1134 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 mem: new alloc: 1173
9999 mem: storing 28 in location 1174
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 4 -> 5
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 2 -> 3
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1203
9999 mem: storing 3 in location 1204
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 5 -> 6
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 105 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 4 -> 5
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 5 -> 6
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1207
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1159: 7 -> 6
9999 mem: storing 0 in location 1181
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 6 -> 7
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 0
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 6 -> 7
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 1 in location 1198
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 1
9999 mem: storing 1 in location 1199
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 1
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1201
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 104 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: storing 1 in location 1148
 104 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: storing 0 in location 1149
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1159: 6 -> 5
9999 mem: storing 1159 in location 1144
9999 mem: incrementing refcount of 1159: 5 -> 6
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 0
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 0
9998 run: result 2 is 1008
9998 run: result 3 is 1140
9999 mem: decrementing refcount of 1008: 7 -> 6
9999 mem: storing 1008 in location 1131
9999 mem: incrementing refcount of 1008: 6 -> 7
9999 mem: decrementing refcount of 1140: 3 -> 2
9999 mem: storing 1140 in location 1134
9999 mem: incrementing refcount of 1140: 2 -> 3
 103 run: {indent?: ("address" "boolean")} <- get-address {result: ("address" "shared" "editor-data"), "lookup": ()}, {indent?: "offset"}
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1134 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1150
9999 mem: storing 1150 in location 1139
 103 run: {indent?: ("address" "boolean"), "lookup": ()} <- copy {1: "literal", "true": ()}
9999 mem: location 1139 is 1150
9999 mem: storing 1 in location 1150
 103 run: reply {result: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "1"}
9999 mem: location 1134 is 1140
9999 mem: location 1131 is 1008
9999 abandon: saving in free-list of size 13
9999 trace: reply: decrementing callstack depth from 2
9998 run: result 0 is 1140
9999 mem: storing 1140 in location 2
9999 mem: incrementing refcount of 1140: 3 -> 4
 102 run: editor-render {screen: ("address" "shared" "screen")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 7 -> 8
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1120
9999 mem: incrementing refcount of 1140: 4 -> 5
 103 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1121
 103 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1122
 103 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1173
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 8 -> 9
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 5 -> 6
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 9 -> 10
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 105 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 6 -> 7
 104 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 7 -> 8
 104 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 8 -> 9
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1207
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1159: 9 -> 8
9999 mem: storing 0 in location 1181
 104 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 104 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 104 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 10 -> 11
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 11 -> 10
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 10 -> 11
 104 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 104 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 104 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 104 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 1 in location 1198
 104 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 1
9999 mem: storing 1 in location 1199
 104 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 104 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 1
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1201
 104 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 104 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: storing 1 in location 1148
 104 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: storing 0 in location 1149
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1159: 8 -> 7
9999 mem: storing 1159 in location 1144
9999 mem: incrementing refcount of 1159: 7 -> 8
 104 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 104 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 104 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1
9998 run: result 1 is 0
9999 mem: storing 1 in location 1123
9999 mem: storing 0 in location 1124
 103 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
9990 schedule: clear-line-delimited/editor-render/scenario_editor-separates-undo-insert-from-undo-cursor-move
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 11 -> 12
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 104 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 mem: new alloc: 1208
9999 mem: storing 25 in location 1209
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 12 -> 13
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 2 -> 3
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 0
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1036
9999 mem: storing 32 in location 1036
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 13 -> 12
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 12 -> 13
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 3 -> 4
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 0
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1038
9999 mem: storing 32 in location 1038
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 14 -> 13
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 13 -> 14
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 14 -> 15
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 4 -> 5
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 0
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1040
9999 mem: storing 32 in location 1040
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 15 -> 14
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 14 -> 15
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 15 -> 16
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 5 -> 6
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 0
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1042
9999 mem: storing 32 in location 1042
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 16 -> 15
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 15 -> 16
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 16 -> 17
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 6 -> 7
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 14
9999 mem: storing 1044 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 0
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1044
9999 mem: storing 32 in location 1044
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1045
9999 mem: storing 7 in location 1045
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 17 -> 16
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 16 -> 17
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 17 -> 18
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 7 -> 8
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 15
9999 mem: storing 1046 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 0
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1046
9999 mem: storing 32 in location 1046
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1047
9999 mem: storing 7 in location 1047
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 18 -> 17
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 17 -> 18
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 18 -> 19
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 8 -> 9
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 16
9999 mem: storing 1048 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 0
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1048
9999 mem: storing 32 in location 1048
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1049
9999 mem: storing 7 in location 1049
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 19 -> 18
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 18 -> 19
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 19 -> 20
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 9 -> 10
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 17
9999 mem: storing 1050 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 0
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1050
9999 mem: storing 32 in location 1050
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1051
9999 mem: storing 7 in location 1051
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 20 -> 19
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 19 -> 20
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 20 -> 21
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 10 -> 11
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 18
9999 mem: storing 1052 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 0
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1052
9999 mem: storing 32 in location 1052
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1053
9999 mem: storing 7 in location 1053
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
9990 schedule: print/clear-line-delimited/editor-render/scenario_editor-separates-undo-insert-from-undo-cursor-move
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 21 -> 20
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 20 -> 21
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 21 -> 22
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 11 -> 12
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 19
9999 mem: storing 1054 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 0
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1054
9999 mem: storing 32 in location 1054
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1055
9999 mem: storing 7 in location 1055
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 22 -> 21
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 21 -> 22
 104 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 104 run: jump {: "offset"}
9998 run: jumping to instruction 11
 104 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 104 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 103 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 mem: new alloc: 1235
9999 mem: storing 12 in location 1236
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 22 -> 23
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1239
 104 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1240
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1241
 104 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1242
9999 mem: storing 1 in location 1243
 104 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 9
 104 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 104 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 104 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1244
 104 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 104 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 104 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1246
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1239 is 2
9999 mem: location 1240 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 23 -> 24
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 24 -> 23
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 23 -> 24
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 24 -> 25
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 12 -> 13
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 20
9999 mem: storing 1056 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 0
9999 mem: location 1057 is 7
9999 mem: location 1230 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1056
9999 mem: storing 9480 in location 1056
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 7
9999 mem: location 1230 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1057
9999 mem: storing 245 in location 1057
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 25 -> 26
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 13 -> 14
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 21
9999 mem: storing 1058 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 0
9999 mem: location 1059 is 7
9999 mem: location 1230 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1058
9999 mem: storing 9480 in location 1058
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 7
9999 mem: location 1230 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1059
9999 mem: storing 245 in location 1059
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 26 -> 27
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 14 -> 15
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 22
9999 mem: storing 1060 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 0
9999 mem: location 1061 is 7
9999 mem: location 1230 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1060
9999 mem: storing 9480 in location 1060
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 7
9999 mem: location 1230 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1061
9999 mem: storing 245 in location 1061
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 27 -> 28
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 15 -> 16
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 23
9999 mem: storing 1062 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 0
9999 mem: location 1063 is 7
9999 mem: location 1230 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1062
9999 mem: storing 9480 in location 1062
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 7
9999 mem: location 1230 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1063
9999 mem: storing 245 in location 1063
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 28 -> 29
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 16 -> 17
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 24
9999 mem: storing 1064 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 0
9999 mem: location 1065 is 7
9999 mem: location 1230 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1064
9999 mem: storing 9480 in location 1064
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 7
9999 mem: location 1230 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1065
9999 mem: storing 245 in location 1065
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 29 -> 30
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 17 -> 18
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 25
9999 mem: storing 1066 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 0
9999 mem: location 1067 is 7
9999 mem: location 1230 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1066
9999 mem: storing 9480 in location 1066
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 7
9999 mem: location 1230 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1067
9999 mem: storing 245 in location 1067
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 6
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 30 -> 31
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 18 -> 19
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 26
9999 mem: storing 1068 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 0
9999 mem: location 1069 is 7
9999 mem: location 1230 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1068
9999 mem: storing 9480 in location 1068
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 7
9999 mem: location 1230 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1069
9999 mem: storing 245 in location 1069
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 6
9999 mem: storing 7 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 7
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 31 -> 32
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
9990 schedule: print/draw-horizontal/editor-render/scenario_editor-separates-undo-insert-from-undo-cursor-move
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 19 -> 20
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 27
9999 mem: storing 1070 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 0
9999 mem: location 1071 is 7
9999 mem: location 1230 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1070
9999 mem: storing 9480 in location 1070
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 7
9999 mem: location 1230 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1071
9999 mem: storing 245 in location 1071
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 7
9999 mem: storing 8 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 8
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 32 -> 33
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 20 -> 21
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 28
9999 mem: storing 1072 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 0
9999 mem: location 1073 is 7
9999 mem: location 1230 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1072
9999 mem: storing 9480 in location 1072
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 7
9999 mem: location 1230 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1073
9999 mem: storing 245 in location 1073
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 105 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 8
9999 mem: storing 9 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 104 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 33 -> 34
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 105 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 105 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 105 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 105 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 105 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 105 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 105 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 105 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 105 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 105 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1225
 105 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 21 -> 22
 105 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 105 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 105 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 105 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 29
9999 mem: storing 1074 in location 1230
 105 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 0
9999 mem: location 1075 is 7
9999 mem: location 1230 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1231
 105 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1074
9999 mem: storing 9480 in location 1074
 105 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 7
9999 mem: location 1230 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1232
 105 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1075
9999 mem: storing 245 in location 1075
 105 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 105 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 4
 104 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 9
9999 mem: storing 10 in location 1240
 104 run: jump {: "offset"}
9998 run: jumping to instruction 22
 104 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 10
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1248
 104 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 27
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1238 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
 103 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 103 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 34 -> 35
 104 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 104 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 104 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 104 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 mem: new alloc: 1249
9999 mem: storing 6 in location 1250
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 35 -> 36
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1011
9999 mem: storing 3 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 36 -> 35
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 35 -> 36
 104 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 36 -> 37
 105 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 105 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 105 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 105 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 105 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 37 -> 38
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 22 -> 23
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 30
9999 mem: storing 1076 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 0
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1076
9999 mem: storing 32 in location 1076
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1077
9999 mem: storing 7 in location 1077
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 38 -> 37
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 37 -> 38
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 38 -> 39
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 23 -> 24
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 31
9999 mem: storing 1078 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 0
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1078
9999 mem: storing 32 in location 1078
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1079
9999 mem: storing 7 in location 1079
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 39 -> 38
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 38 -> 39
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 39 -> 40
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 24 -> 25
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 32
9999 mem: storing 1080 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 0
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1080
9999 mem: storing 32 in location 1080
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1081
9999 mem: storing 7 in location 1081
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 40 -> 39
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 39 -> 40
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 40 -> 41
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 25 -> 26
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 33
9999 mem: storing 1082 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 0
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1082
9999 mem: storing 32 in location 1082
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1083
9999 mem: storing 7 in location 1083
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 41 -> 40
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 40 -> 41
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 41 -> 42
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 26 -> 27
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 34
9999 mem: storing 1084 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 0
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1084
9999 mem: storing 32 in location 1084
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1085
9999 mem: storing 7 in location 1085
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 42 -> 41
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 41 -> 42
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 42 -> 43
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 27 -> 28
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/scenario_editor-separates-undo-insert-from-undo-cursor-move
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 35
9999 mem: storing 1086 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 0
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1086
9999 mem: storing 32 in location 1086
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1087
9999 mem: storing 7 in location 1087
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 43 -> 42
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 42 -> 43
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 43 -> 44
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 28 -> 29
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 36
9999 mem: storing 1088 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 0
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1088
9999 mem: storing 32 in location 1088
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1089
9999 mem: storing 7 in location 1089
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 44 -> 43
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 43 -> 44
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 44 -> 45
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 29 -> 30
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 37
9999 mem: storing 1090 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 0
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1090
9999 mem: storing 32 in location 1090
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1091
9999 mem: storing 7 in location 1091
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 45 -> 44
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 44 -> 45
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 45 -> 46
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 30 -> 31
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 38
9999 mem: storing 1092 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 0
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1092
9999 mem: storing 32 in location 1092
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1093
9999 mem: storing 7 in location 1093
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 46 -> 45
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 45 -> 46
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 46 -> 47
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 31 -> 32
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 39
9999 mem: storing 1094 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 0
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1094
9999 mem: storing 32 in location 1094
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1095
9999 mem: storing 7 in location 1095
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 47 -> 46
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 46 -> 47
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 105 run: jump {: "offset"}
9998 run: jumping to instruction 11
 105 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 105 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 4
 104 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 mem: new alloc: 1257
9999 mem: storing 7 in location 1258
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 47 -> 48
 105 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 105 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 105 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 48 -> 49
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 49 -> 48
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 48 -> 49
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 49 -> 50
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 105 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 50 -> 51
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 51 -> 50
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 50 -> 51
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 51 -> 52
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 52 -> 53
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 32 -> 33
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 40
9999 mem: storing 1096 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 0
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1096
9999 mem: storing 32 in location 1096
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1097
9999 mem: storing 7 in location 1097
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 53 -> 52
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 52 -> 53
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 53 -> 54
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 33 -> 34
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 41
9999 mem: storing 1098 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 0
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1098
9999 mem: storing 32 in location 1098
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1099
9999 mem: storing 7 in location 1099
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 54 -> 53
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 53 -> 54
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 54 -> 55
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 34 -> 35
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 42
9999 mem: storing 1100 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 0
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1100
9999 mem: storing 32 in location 1100
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1101
9999 mem: storing 7 in location 1101
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 55 -> 54
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 54 -> 55
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 55 -> 56
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 35 -> 36
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 43
9999 mem: storing 1102 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 0
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1102
9999 mem: storing 32 in location 1102
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1103
9999 mem: storing 7 in location 1103
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 56 -> 55
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 55 -> 56
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 56 -> 57
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 36 -> 37
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 44
9999 mem: storing 1104 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 0
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1104
9999 mem: storing 32 in location 1104
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1105
9999 mem: storing 7 in location 1105
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 57 -> 56
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 56 -> 57
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 57 -> 58
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 37 -> 38
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 45
9999 mem: storing 1106 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 0
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1106
9999 mem: storing 32 in location 1106
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1107
9999 mem: storing 7 in location 1107
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 58 -> 57
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 57 -> 58
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 58 -> 59
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 38 -> 39
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 46
9999 mem: storing 1108 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 0
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1108
9999 mem: storing 32 in location 1108
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1109
9999 mem: storing 7 in location 1109
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 59 -> 58
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 58 -> 59
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 59 -> 60
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 39 -> 40
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 47
9999 mem: storing 1110 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 0
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1110
9999 mem: storing 32 in location 1110
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1111
9999 mem: storing 7 in location 1111
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 60 -> 59
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 59 -> 60
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 60 -> 61
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 40 -> 41
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 48
9999 mem: storing 1112 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 0
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1112
9999 mem: storing 32 in location 1112
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1113
9999 mem: storing 7 in location 1113
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 61 -> 60
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 60 -> 61
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 61 -> 62
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 41 -> 42
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 49
9999 mem: storing 1114 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 0
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1114
9999 mem: storing 32 in location 1114
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1115
9999 mem: storing 7 in location 1115
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 62 -> 61
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 61 -> 62
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 105 run: jump {: "offset"}
9998 run: jumping to instruction 9
 105 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 105 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 2
 102 run: assume-console {"\n    type [abc]\n    left-click 1, 1\n    type [d]\n  ": "literal-string"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"abc": "literal-string"}
9992 load: after rewriting: type {"abc": "literal-string"}
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {1: "literal"}
9993 parse:   ingredient: {1: "literal"}
9992 load: after rewriting: left-click {1: "literal"}, {1: "literal"}
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"d": "literal-string"}
9992 load: after rewriting: type {"d": "literal-string"}
9999 mem: storing 'type' event starting at 1268
9999 mem: storing 'text' tag at 1268
9999 mem: storing character 97 at 1269
9999 mem: storing 'text' tag at 1272
9999 mem: storing character 98 at 1273
9999 mem: storing 'text' tag at 1276
9999 mem: storing character 99 at 1277
9999 mem: storing 'left-click' event starting at 1280
9999 mem: storing 'type' event starting at 1284
9999 mem: storing 'text' tag at 1284
9999 mem: storing character 100 at 1285
9999 mem: storing console in 1288
9999 mem: storing console data in 1290
 102 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1288
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 2
 103 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1291
9999 mem: storing 14 in location 1292
 103 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 62 -> 63
 103 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1295
9999 mem: incrementing refcount of 1288: 0 -> 1
 103 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 6 -> 7
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1298
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 63 -> 64
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 64 -> 63
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 63 -> 64
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1288
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1238
9999 mem: incrementing refcount of 1288: 1 -> 2
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1288
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 0
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9999 mem: storing 1289 in location 1239
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 0
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1290 is 1266
9999 mem: storing 1266 in location 1240
9999 mem: incrementing refcount of 1266: 1 -> 2
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 5 in location 1241
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 0
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1242
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 0
9998 run: address to copy is 1268
9998 run: its type is event
9999 mem: location 1268 is 0
9999 mem: location 1269 is 97
9999 mem: location 1270 is 0
9999 mem: location 1271 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 97 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 0
9999 mem: location 1239 is 1289
9999 mem: storing 1 in location 1289
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 97
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1288
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 97, 0, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 97 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1288: 2 -> 1
9999 mem: storing 1288 in location 1295
9999 mem: incrementing refcount of 1288: 1 -> 2
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 97
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 97
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1307
9999 mem: storing 85 in location 1308
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 64 -> 65
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 7 -> 8
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 97 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 65 -> 66
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 105 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 66 -> 67
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 105 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1325
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 97
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1327
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1338
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1343
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1359
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1360
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1365
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1366
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1367
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1368
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1372
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 0 in location 1376
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: storing 1 in location 1379
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1361
9999 mem: incrementing refcount of 1159: 8 -> 9
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1159
9999 mem: storing 1159 in location 1373
9999 mem: incrementing refcount of 1159: 9 -> 10
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1311 is 1140
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 97
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1394
9999 mem: storing 31 in location 1395
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1397
9999 mem: incrementing refcount of 1140: 8 -> 9
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1398
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1399
9999 mem: incrementing refcount of 1008: 67 -> 68
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1400
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1398 is 97
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1159
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1427
9999 mem: storing 5 in location 1428
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1430
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1431
9999 mem: incrementing refcount of 1159: 10 -> 11
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1434
9999 mem: storing 1434 in location 1432
9999 mem: incrementing refcount of 1434: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1432 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 0
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1430 is 97
9999 mem: location 1432 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1435
9999 mem: storing 97 in location 1435
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1431 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1431 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1433
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1432 is 1434
9999 mem: location 1431 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1161
9999 mem: storing 1434 in location 1161
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 0
9999 mem: location 1437 is 0
9999 mem: location 1431 is 1159
9999 mem: location 1432 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1437
9999 mem: storing 1159 in location 1437
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1159
9999 mem: location 1433 is 0
9999 mem: location 1432 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1436
9999 mem: storing 0 in location 1436
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1431 is 1159
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1159
9999 trace: incrementing callstack depth to 5
9990 schedule: next_2/insert-at-cursor/handle-keyboard-event/editor-event-loop/scenario_editor-separates-undo-insert-from-undo-cursor-move
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1207
9999 mem: incrementing refcount of 1434: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1434
9999 mem: location 1400 is 1144
9999 mem: decrementing refcount of 1159: 12 -> 11
9999 mem: storing 1434 in location 1144
9999 mem: incrementing refcount of 1434: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1401
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1402
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1403
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1404
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1401 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1405
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1406
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 68 -> 69
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 106 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1407
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 69 -> 70
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1408
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1404 is 9
9999 mem: storing 8 in location 1409
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 0
9999 mem: location 1409 is 8
9999 mem: storing 0 in location 1410
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 0
9999 mem: location 1402 is 1149
9999 mem: storing 1 in location 1149
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1206
9999 mem: incrementing refcount of 1434: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1434
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1159
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 105 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1408 is 5
9999 mem: storing 4 in location 1419
 105 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1406 is 0
9999 mem: location 1404 is 9
9999 mem: storing 0 in location 1421
 105 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1399 is 1008
9999 mem: location 1405 is 1
9999 mem: location 1406 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 70 -> 71
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1399 is 1008
9999 mem: location 1398 is 97
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 71 -> 72
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 97
  90 print-character: 97 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 42 -> 43
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 97
9999 mem: location 1231 is 1036
9999 mem: storing 97 in location 1036
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1416
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1140
9999 mem: location 1399 is 1008
9999 mem: location 1416 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 9 -> 8
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 8 -> 9
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 71 -> 72
9999 mem: storing 0 in location 1316
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1363
9999 mem: incrementing refcount of 1159: 11 -> 12
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 0
9998 run: jumping to instruction 429
 104 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1159
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 12 -> 13
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1207
9999 mem: incrementing refcount of 1434: 4 -> 5
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1434
9999 mem: storing 1434 in location 1337
9999 mem: incrementing refcount of 1434: 5 -> 6
 104 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1337 is 1434
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1206
9999 mem: incrementing refcount of 1434: 6 -> 7
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1434
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1159
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 0
9999 mem: storing 0 in location 1207
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: storing 0 in location 1375
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1438
9999 mem: storing 1438 in location 1329
9999 mem: incrementing refcount of 1438: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1324 is 1
9999 mem: location 1325 is 0
9999 mem: location 1361 is 1159
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1363 is 1159
9999 mem: location 1337 is 1434
9999 mem: location 1375 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 0 in location 1439
9999 mem: storing 1 in location 1440
9999 mem: storing 0 in location 1441
9999 mem: storing 1159 in location 1442
9999 mem: storing 1 in location 1443
9999 mem: storing 1 in location 1444
9999 mem: storing 1159 in location 1445
9999 mem: storing 1434 in location 1446
9999 mem: storing 0 in location 1447
9999 mem: storing 1 in location 1448
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1311 is 1140
9999 mem: location 1329 is 1438
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1430
9999 mem: incrementing refcount of 1140: 9 -> 10
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1438 in location 1431
9999 mem: incrementing refcount of 1438: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 0
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1432
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1431 is 1438
9999 mem: location 1432 is 1151
9999 mem: location 1151 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1438 in location 1156
9999 mem: incrementing refcount of 1438: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1157
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1450
9999 mem: storing 1450 in location 1158
9999 mem: incrementing refcount of 1450: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1438
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1158 is 1450
9999 mem: skipping refcount at 1450
9999 mem: storing 1438 in location 1451
9999 mem: storing 0 in location 1452
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1450
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1450
9999 mem: location 1432 is 1151
9999 mem: storing 1450 in location 1151
9999 mem: incrementing refcount of 1450: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1433
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1433 is 1152
9999 mem: storing 0 in location 1152
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1430 is 1140
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 10 -> 9
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 9 -> 10
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 mem: location 1316 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 72 -> 71
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 71 -> 72
9999 mem: decrementing refcount of 1140: 10 -> 9
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 9 -> 10
9999 mem: storing 0 in location 1306
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1298
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 72 -> 73
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 73 -> 72
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 72 -> 73
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1288
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1238
9999 mem: incrementing refcount of 1288: 2 -> 3
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1288
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 1
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9999 mem: storing 1289 in location 1239
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 1
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1290 is 1266
9999 mem: storing 1266 in location 1240
9999 mem: incrementing refcount of 1266: 2 -> 3
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 5 in location 1241
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 1
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1242
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 1
9998 run: address to copy is 1272
9998 run: its type is event
9999 mem: location 1272 is 0
9999 mem: location 1273 is 98
9999 mem: location 1274 is 0
9999 mem: location 1275 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 98 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 1
9999 mem: location 1239 is 1289
9999 mem: storing 2 in location 1289
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 98
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1288
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 98, 0, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 98 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1288: 3 -> 2
9999 mem: storing 1288 in location 1295
9999 mem: incrementing refcount of 1288: 2 -> 3
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 98
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 98
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 73 -> 74
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 10 -> 11
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 98 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 74 -> 75
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 105 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 75 -> 76
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 105 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1325
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 98
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1327
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1338
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1343
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1359
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1360
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1365
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1366
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1367
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1368
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1372
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 0 in location 1376
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: storing 1 in location 1379
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1361
9999 mem: incrementing refcount of 1159: 13 -> 14
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1434
9999 mem: storing 1434 in location 1373
9999 mem: incrementing refcount of 1434: 7 -> 8
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1311 is 1140
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 98
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1394
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1397
9999 mem: incrementing refcount of 1140: 11 -> 12
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1398
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1399
9999 mem: incrementing refcount of 1008: 76 -> 77
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1400
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1398 is 98
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1430
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1431
9999 mem: incrementing refcount of 1434: 8 -> 9
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1453
9999 mem: storing 1453 in location 1432
9999 mem: incrementing refcount of 1453: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1432 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 0
9999 mem: location 1455 is 0
9999 mem: location 1456 is 0
9999 mem: location 1430 is 98
9999 mem: location 1432 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy to is 1454
9999 mem: storing 98 in location 1454
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1159
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 0
9999 mem: storing 0 in location 1433
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1159
9999 mem: location 1432 is 1453
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1436
9999 mem: storing 1453 in location 1436
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 0
9999 mem: location 1456 is 0
9999 mem: location 1431 is 1434
9999 mem: location 1432 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy to is 1456
9999 mem: storing 1434 in location 1456
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1434
9999 mem: location 1433 is 0
9999 mem: location 1432 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy to is 1455
9999 mem: storing 0 in location 1455
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1431 is 1434
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1206
9999 mem: incrementing refcount of 1434: 9 -> 10
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1434
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1207
9999 mem: incrementing refcount of 1453: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1453
9999 mem: location 1400 is 1144
9999 mem: decrementing refcount of 1434: 10 -> 9
9999 mem: storing 1453 in location 1144
9999 mem: incrementing refcount of 1453: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1401
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1402
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1403
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1404
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1401 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1405
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1406
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 77 -> 78
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 106 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1407
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 78 -> 79
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1408
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1404 is 9
9999 mem: storing 8 in location 1409
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1409 is 8
9999 mem: storing 0 in location 1410
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1402 is 1149
9999 mem: storing 2 in location 1149
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1453
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1206
9999 mem: incrementing refcount of 1453: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1453
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1434
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 105 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1408 is 5
9999 mem: storing 4 in location 1419
 105 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1406 is 1
9999 mem: location 1404 is 9
9999 mem: storing 0 in location 1421
 105 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1399 is 1008
9999 mem: location 1405 is 1
9999 mem: location 1406 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 79 -> 80
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1399 is 1008
9999 mem: location 1398 is 98
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 80 -> 81
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 43 -> 44
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1038
9999 mem: storing 98 in location 1038
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1416
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1140
9999 mem: location 1399 is 1008
9999 mem: location 1416 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 12 -> 11
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 11 -> 12
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 80 -> 81
9999 mem: storing 0 in location 1316
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1363
9999 mem: incrementing refcount of 1159: 14 -> 15
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1450
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1450
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1206
9999 mem: incrementing refcount of 1450: 2 -> 3
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1206 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 1438
9999 mem: location 1452 is 0
9999 mem: location 1206 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1451
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1451 is 1438
9999 mem: storing 1438 in location 1207
9999 mem: incrementing refcount of 1438: 3 -> 4
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1207 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1438
9999 mem: storing 1438 in location 1329
9999 mem: incrementing refcount of 1438: 4 -> 5
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 1
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 1440 in location 1336
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 1440
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 1
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1448
9998 run: its type is "number"
9999 mem: location 1448 is 1
9999 mem: storing 1 in location 1353
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 1
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1447
9999 mem: storing 1447 in location 1374
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1453
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1206
9999 mem: incrementing refcount of 1453: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1453
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1434
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 0
9999 mem: storing 0 in location 1207
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1374 is 1447
9999 mem: storing 0 in location 1447
 104 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 1
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1443
9999 mem: storing 1443 in location 1355
 104 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: location 1355 is 1443
9999 mem: storing 1 in location 1443
 104 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 1
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1444
9999 mem: storing 1444 in location 1356
 104 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1356 is 1444
9999 mem: storing 2 in location 1444
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 2
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1445
9999 mem: storing 1445 in location 1357
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: location 1357 is 1445
9999 mem: decrementing refcount of 1159: 15 -> 14
9999 mem: storing 1159 in location 1445
9999 mem: incrementing refcount of 1159: 14 -> 15
 104 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 mem: location 1316 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 81 -> 80
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 80 -> 81
9999 mem: decrementing refcount of 1140: 12 -> 11
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 11 -> 12
9999 mem: storing 0 in location 1306
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1298
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 2
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 81 -> 82
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 82 -> 81
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 81 -> 82
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1288
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1238
9999 mem: incrementing refcount of 1288: 3 -> 4
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1288
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 2
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9999 mem: storing 1289 in location 1239
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 2
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1290 is 1266
9999 mem: storing 1266 in location 1240
9999 mem: incrementing refcount of 1266: 3 -> 4
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 5 in location 1241
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 2
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1242
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 2
9998 run: address to copy is 1276
9998 run: its type is event
9999 mem: location 1276 is 0
9999 mem: location 1277 is 99
9999 mem: location 1278 is 0
9999 mem: location 1279 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 99 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 2
9999 mem: location 1239 is 1289
9999 mem: storing 3 in location 1289
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 99
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1288
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 99, 0, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 99 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1288: 4 -> 3
9999 mem: storing 1288 in location 1295
9999 mem: incrementing refcount of 1288: 3 -> 4
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 99
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 99
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 82 -> 83
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 12 -> 13
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 99 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 83 -> 84
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 105 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 84 -> 85
9990 schedule: screen-height/handle-keyboard-event/editor-event-loop/scenario_editor-separates-undo-insert-from-undo-cursor-move
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 105 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1325
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 99
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1327
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1338
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1343
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1359
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1360
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1365
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1366
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1367
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1368
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1372
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 0 in location 1376
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: storing 1 in location 1379
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1361
9999 mem: incrementing refcount of 1159: 15 -> 16
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1453
9999 mem: storing 1453 in location 1373
9999 mem: incrementing refcount of 1453: 5 -> 6
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1311 is 1140
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 99
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1394
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1397
9999 mem: incrementing refcount of 1140: 13 -> 14
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1398
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1399
9999 mem: incrementing refcount of 1008: 85 -> 86
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1453
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1400
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1398 is 99
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1453
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1430
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1431
9999 mem: incrementing refcount of 1453: 6 -> 7
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1457
9999 mem: storing 1457 in location 1432
9999 mem: incrementing refcount of 1457: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 0
9999 mem: location 1459 is 0
9999 mem: location 1460 is 0
9999 mem: location 1430 is 99
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy to is 1458
9999 mem: storing 99 in location 1458
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1431 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1434
9999 mem: location 1431 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 0
9999 mem: storing 0 in location 1433
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1434
9999 mem: location 1432 is 1457
9999 mem: location 1431 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy to is 1455
9999 mem: storing 1457 in location 1455
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 0
9999 mem: location 1431 is 1453
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy to is 1460
9999 mem: storing 1453 in location 1460
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1433 is 0
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy to is 1459
9999 mem: storing 0 in location 1459
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1433 is 0
9998 run: jump-if fell through
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1431 is 1453
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1453
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1206
9999 mem: incrementing refcount of 1453: 7 -> 8
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1453
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1207
9999 mem: incrementing refcount of 1457: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1457
9999 mem: location 1400 is 1144
9999 mem: decrementing refcount of 1453: 8 -> 7
9999 mem: storing 1457 in location 1144
9999 mem: incrementing refcount of 1457: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1401
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1402
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1403
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1404
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1401 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1405
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1406
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 86 -> 87
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 106 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1407
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 87 -> 88
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1408
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1404 is 9
9999 mem: storing 8 in location 1409
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1409 is 8
9999 mem: storing 0 in location 1410
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1402 is 1149
9999 mem: storing 3 in location 1149
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1206
9999 mem: incrementing refcount of 1457: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1457
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: storing 0 in location 1417
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1417 is 0
9999 mem: storing 1 in location 1418
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 105 run: {bottom: "number"} <- subtract {screen-height: "number"}, {1: "literal"}
9999 mem: location 1408 is 5
9999 mem: storing 4 in location 1419
 105 run: {at-bottom?: "boolean"} <- equal {save-row: "number"}, {bottom: "number"}
9999 mem: location 1405 is 1
9999 mem: location 1419 is 4
9999 mem: storing 0 in location 1420
 105 run: {at-right?: "boolean"} <- equal {save-column: "number"}, {right: "number"}
9999 mem: location 1406 is 2
9999 mem: location 1404 is 9
9999 mem: storing 0 in location 1421
 105 run: {overflow?: "boolean"} <- and {at-bottom?: "boolean"}, {at-right?: "boolean"}
9999 mem: location 1420 is 0
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 105 run: jump-if {overflow?: "boolean"}, {: "offset"}
9999 mem: location 1422 is 0
9998 run: jump-if fell through
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1399 is 1008
9999 mem: location 1405 is 1
9999 mem: location 1406 is 2
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 88 -> 89
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: print {screen: ("address" "shared" "screen")}, {c: "character"}
9999 mem: location 1399 is 1008
9999 mem: location 1398 is 99
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 89 -> 90
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 44 -> 45
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1040
9999 mem: storing 99 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1416
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1140
9999 mem: location 1399 is 1008
9999 mem: location 1416 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 14 -> 13
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 13 -> 14
9999 mem: decrementing refcount of 1008: 90 -> 89
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 89 -> 90
9999 mem: storing 0 in location 1316
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1363
9999 mem: incrementing refcount of 1159: 16 -> 17
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1450
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1450
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1206
9999 mem: incrementing refcount of 1450: 3 -> 4
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1206 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 1438
9999 mem: location 1452 is 0
9999 mem: location 1206 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1451
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1451 is 1438
9999 mem: storing 1438 in location 1207
9999 mem: incrementing refcount of 1438: 5 -> 6
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1207 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1438
9999 mem: storing 1438 in location 1329
9999 mem: incrementing refcount of 1438: 6 -> 7
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 2
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 1440 in location 1336
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 1440
9998 run: jump-unless fell through
 104 run: {previous-coalesce-tag: "number"} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {tag: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 2
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1448
9998 run: its type is "number"
9999 mem: location 1448 is 1
9999 mem: storing 1 in location 1353
 104 run: jump-unless {previous-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1353 is 1
9998 run: jump-unless fell through
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 2
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1447
9999 mem: storing 1447 in location 1374
 104 run: {insert-until: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1457
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1206
9999 mem: incrementing refcount of 1457: 4 -> 5
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1457
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1207
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 0
9999 mem: location 1374 is 1447
9999 mem: storing 0 in location 1447
 104 run: {after-row: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 2
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1443
9999 mem: storing 1443 in location 1355
 104 run: {after-row: ("address" "number"), "lookup": ()} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: location 1355 is 1443
9999 mem: storing 1 in location 1443
 104 run: {after-column: ("address" "number")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 2
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1444
9999 mem: storing 1444 in location 1356
 104 run: {after-column: ("address" "number"), "lookup": ()} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 3
9999 mem: location 1356 is 1444
9999 mem: storing 3 in location 1444
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1445
9999 mem: storing 1445 in location 1357
 104 run: {after-top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: location 1357 is 1445
9999 mem: decrementing refcount of 1159: 17 -> 16
9999 mem: storing 1159 in location 1445
9999 mem: incrementing refcount of 1159: 16 -> 17
 104 run: jump {+handle-keyboard-event_0_27+done-adding-insert-operation: "label"}
9998 run: jumping to instruction 436
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 mem: location 1316 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 90 -> 89
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 89 -> 90
9999 mem: decrementing refcount of 1140: 14 -> 13
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 13 -> 14
9999 mem: storing 0 in location 1306
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1298
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 3
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 90 -> 91
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 91 -> 90
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 90 -> 91
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1288
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1238
9999 mem: incrementing refcount of 1288: 4 -> 5
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1288
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 3
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9999 mem: storing 1289 in location 1239
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 3
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1290 is 1266
9999 mem: storing 1266 in location 1240
9999 mem: incrementing refcount of 1266: 4 -> 5
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 5 in location 1241
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 3
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1242
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 3
9998 run: address to copy is 1280
9998 run: its type is event
9999 mem: location 1280 is 2
9999 mem: location 1281 is 65513
9999 mem: location 1282 is 1
9999 mem: location 1283 is 1
9999 mem: storing 2 in location 1244
9999 mem: storing 65513 in location 1245
9999 mem: storing 1 in location 1246
9999 mem: storing 1 in location 1247
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 3
9999 mem: location 1239 is 1289
9999 mem: storing 4 in location 1289
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 2
9999 mem: location 1245 is 65513
9999 mem: location 1246 is 1
9999 mem: location 1247 is 1
9999 mem: location 1238 is 1288
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [2, 65513, 1, 1]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1299
9999 mem: storing 65513 in location 1300
9999 mem: storing 1 in location 1301
9999 mem: storing 1 in location 1302
9999 mem: decrementing refcount of 1288: 5 -> 4
9999 mem: storing 1288 in location 1295
9999 mem: incrementing refcount of 1288: 4 -> 5
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 2
9999 mem: location 1300 is 65513
9999 mem: location 1301 is 1
9999 mem: location 1302 is 1
9999 mem: storing 1300 in location 1305
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 1300
9998 run: jump-unless fell through
 103 run: move-cursor-in-editor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {t: ("address" "touch-event"), "lookup": ()}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1305 is 1300
9999 mem: location 1300 is 65513
9999 mem: location 1301 is 1
9999 mem: location 1302 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1461
9999 mem: storing 27 in location 1462
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1464
9999 mem: incrementing refcount of 1008: 91 -> 92
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1465
9999 mem: incrementing refcount of 1140: 14 -> 15
 104 run: {t: "touch-event"} <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1466
9999 mem: storing 1 in location 1467
9999 mem: storing 1 in location 1468
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1465 is 1140
9998 run: jumping to instruction 6
 104 run: {click-row: "number"} <- get {t: "touch-event"}, {row: "offset"}
9999 mem: location 1466 is 65513
9999 mem: location 1467 is 1
9999 mem: location 1468 is 1
9998 run: address to copy is 1467
9998 run: its type is "number"
9999 mem: location 1467 is 1
9999 mem: storing 1 in location 1469
 104 run: jump-if {click-row: "number"}, {1: "offset"}
9999 mem: location 1469 is 1
9998 run: jumping to instruction 9
 104 run: {click-column: "number"} <- get {t: "touch-event"}, {column: "offset"}
9999 mem: location 1466 is 65513
9999 mem: location 1467 is 1
9999 mem: location 1468 is 1
9998 run: address to copy is 1468
9998 run: its type is "number"
9999 mem: location 1468 is 1
9999 mem: storing 1 in location 1470
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1471
 104 run: {too-far-left?: "boolean"} <- lesser-than {click-column: "number"}, {left: "number"}
9999 mem: location 1470 is 1
9999 mem: location 1471 is 0
9999 mem: storing 0 in location 1472
 104 run: jump-unless {too-far-left?: "boolean"}, {1: "offset"}
9999 mem: location 1472 is 0
9998 run: jumping to instruction 14
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1473
 104 run: {too-far-right?: "boolean"} <- greater-than {click-column: "number"}, {right: "number"}
9999 mem: location 1470 is 1
9999 mem: location 1473 is 9
9999 mem: storing 0 in location 1474
 104 run: jump-unless {too-far-right?: "boolean"}, {1: "offset"}
9999 mem: location 1474 is 0
9998 run: jumping to instruction 18
 104 run: {before-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1475
 104 run: {before-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1476
 104 run: {before-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1477
9999 mem: incrementing refcount of 1159: 17 -> 18
 104 run: {editor: ("address" "shared" "editor-data")} <- snap-cursor {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {click-row: "number"}, {click-column: "number"}
9999 mem: location 1464 is 1008
9999 mem: location 1465 is 1140
9999 mem: location 1469 is 1
9999 mem: location 1470 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1490
9999 mem: storing 26 in location 1491
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1493
9999 mem: incrementing refcount of 1008: 92 -> 93
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1494
9999 mem: incrementing refcount of 1140: 15 -> 16
 105 run: {target-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1495
 105 run: {target-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1496
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1494 is 1140
9998 run: jumping to instruction 7
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1497
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1498
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1493 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 93 -> 94
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1499
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1500
9999 mem: incrementing refcount of 1159: 18 -> 19
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1500 is 1159
9999 mem: storing 1159 in location 1501
9999 mem: incrementing refcount of 1159: 19 -> 20
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1500 is 1159
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1207
9999 mem: incrementing refcount of 1434: 9 -> 10
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 21 -> 20
9999 mem: storing 1434 in location 1500
9999 mem: incrementing refcount of 1434: 10 -> 11
 105 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1502
 105 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1497 is 0
9999 mem: storing 0 in location 1503
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1504
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {target-row: "number"}
9999 mem: location 1495 is 1
9999 mem: location 1504 is 1148
9999 mem: storing 1 in location 1148
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1505
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {target-column: "number"}
9999 mem: location 1496 is 1
9999 mem: location 1505 is 1149
9999 mem: storing 1 in location 1149
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1494 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1506
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1500 is 1434
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1502 is 1
9999 mem: location 1499 is 5
9999 mem: storing 0 in location 1507
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1502 is 1
9999 mem: location 1504 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1508
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1503 is 0
9999 mem: location 1505 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1509
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1500 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1500 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1435
9998 run: its type is "character"
9999 mem: location 1435 is 97
9999 mem: storing 97 in location 1510
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1510 is 97
9999 mem: storing 0 in location 1511
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1503 is 0
9999 mem: location 1498 is 9
9999 mem: storing 0 in location 1513
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1500 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1206
9999 mem: incrementing refcount of 1434: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1434
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1207
9999 mem: incrementing refcount of 1453: 7 -> 8
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 12 -> 11
9999 mem: storing 1453 in location 1500
9999 mem: incrementing refcount of 1453: 8 -> 9
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1501 is 1159
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1206
9999 mem: incrementing refcount of 1159: 20 -> 21
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1159
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1206 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1207
9999 mem: incrementing refcount of 1434: 11 -> 12
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 21 -> 20
9999 mem: storing 1434 in location 1501
9999 mem: incrementing refcount of 1434: 12 -> 13
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1503 is 0
9999 mem: storing 1 in location 1503
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1500 is 1453
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1502 is 1
9999 mem: location 1499 is 5
9999 mem: storing 0 in location 1507
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1502 is 1
9999 mem: location 1504 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1508
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1503 is 1
9999 mem: location 1505 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1509
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 1
9998 run: jump-unless fell through
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1501 is 1434
9999 mem: location 1506 is 1144
9999 mem: decrementing refcount of 1457: 5 -> 4
9999 mem: storing 1434 in location 1144
9999 mem: incrementing refcount of 1434: 13 -> 14
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1500 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1500 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1454
9998 run: its type is "character"
9999 mem: location 1454 is 98
9999 mem: storing 98 in location 1510
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1510 is 98
9999 mem: storing 0 in location 1511
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1503 is 1
9999 mem: location 1498 is 9
9999 mem: storing 0 in location 1513
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1500 is 1453
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1206
9999 mem: incrementing refcount of 1453: 9 -> 10
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1453
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1207
9999 mem: incrementing refcount of 1457: 4 -> 5
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 10 -> 9
9999 mem: storing 1457 in location 1500
9999 mem: incrementing refcount of 1457: 5 -> 6
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1501 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1206
9999 mem: incrementing refcount of 1434: 14 -> 15
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1434
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1207
9999 mem: incrementing refcount of 1453: 9 -> 10
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 15 -> 14
9999 mem: storing 1453 in location 1501
9999 mem: incrementing refcount of 1453: 10 -> 11
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1503 is 1
9999 mem: storing 2 in location 1503
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1500 is 1457
9998 run: jump-unless fell through
 105 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1502 is 1
9999 mem: location 1499 is 5
9999 mem: storing 0 in location 1507
 105 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1507 is 0
9998 run: jump-if fell through
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1502 is 1
9999 mem: location 1504 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1508
 105 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1508 is 1
9998 run: jump-unless fell through
 105 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1503 is 2
9999 mem: location 1505 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1509
 105 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1509 is 0
9998 run: jumping to instruction 31
 105 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1500 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1500 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is "character"
9999 mem: location 1458 is 99
9999 mem: storing 99 in location 1510
 105 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1510 is 99
9999 mem: storing 0 in location 1511
 105 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1511 is 0
9998 run: jumping to instruction 49
 105 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1503 is 2
9999 mem: location 1498 is 9
9999 mem: storing 0 in location 1513
 105 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1513 is 0
9998 run: jumping to instruction 56
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1500 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1206
9999 mem: incrementing refcount of 1457: 6 -> 7
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1457
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 7 -> 6
9999 mem: storing 0 in location 1500
 105 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1501 is 1453
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1206
9999 mem: incrementing refcount of 1453: 11 -> 12
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1453
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1207
9999 mem: incrementing refcount of 1457: 6 -> 7
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 12 -> 11
9999 mem: storing 1457 in location 1501
9999 mem: incrementing refcount of 1457: 7 -> 8
 105 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1503 is 2
9999 mem: storing 3 in location 1503
 105 run: jump {: "offset"}
9998 run: jumping to instruction 21
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1500 is 0
9998 run: jumping to instruction 61
 105 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1502 is 1
9999 mem: location 1504 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1508
 105 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1503 is 3
9999 mem: location 1505 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1514
 105 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1508 is 1
9999 mem: location 1514 is 0
9999 mem: storing 0 in location 1515
 105 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1502 is 1
9999 mem: location 1504 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1516
 105 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1515 is 0
9999 mem: location 1516 is 0
9999 mem: storing 0 in location 1517
 105 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1517 is 0
9998 run: jumping to instruction 72
 105 run: reply {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1494 is 1140
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 16 -> 15
9999 mem: storing 1140 in location 1465
9999 mem: incrementing refcount of 1140: 15 -> 16
 104 run: {undo-coalesce-tag: "number"} <- copy {0: "literal", "never": ()}
9999 mem: storing 0 in location 1478
 104 run: {after-cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1479
 104 run: {after-cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1480
 104 run: {after-top-of-screen: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1465 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1481
9999 mem: incrementing refcount of 1159: 20 -> 21
 104 run: jump-unless {undo-coalesce-tag: "number"}, {: "offset"}
9999 mem: location 1478 is 0
9998 run: jumping to instruction 44
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1518
9999 mem: storing 1518 in location 1483
9999 mem: incrementing refcount of 1518: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {1: "literal", "move-operation": ()}, {before-cursor-row: "number"}, {before-cursor-column: "number"}, {before-top-of-screen: ("address" "shared" "duplex-list" "character")}, {after-cursor-row: "number"}, {after-cursor-column: "number"}, {after-top-of-screen: ("address" "shared" "duplex-list" "character")}, {undo-coalesce-tag: "number"}
9999 mem: location 1475 is 1
9999 mem: location 1476 is 3
9999 mem: location 1477 is 1159
9999 mem: location 1479 is 1
9999 mem: location 1480 is 1
9999 mem: location 1481 is 1159
9999 mem: location 1478 is 0
9999 mem: location 1483 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1483 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 1 in location 1519
9999 mem: storing 1 in location 1520
9999 mem: storing 3 in location 1521
9999 mem: storing 1159 in location 1522
9999 mem: storing 1 in location 1523
9999 mem: storing 1 in location 1524
9999 mem: storing 1159 in location 1525
9999 mem: storing 0 in location 1526
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1465 is 1140
9999 mem: location 1483 is 1518
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1430
9999 mem: incrementing refcount of 1140: 16 -> 17
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1518 in location 1431
9999 mem: incrementing refcount of 1518: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 0
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1432
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1431 is 1518
9999 mem: location 1432 is 1151
9999 mem: location 1151 is 1450
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1518 in location 1156
9999 mem: incrementing refcount of 1518: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1157
9999 mem: incrementing refcount of 1450: 4 -> 5
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1530
9999 mem: storing 1530 in location 1158
9999 mem: incrementing refcount of 1530: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1518
9999 mem: location 1157 is 1450
9999 mem: location 1158 is 1530
9999 mem: skipping refcount at 1530
9999 mem: location 1158 is 1530
9999 mem: skipping refcount at 1530
9999 mem: storing 1518 in location 1531
9999 mem: storing 1450 in location 1532
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1530
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1530
9999 mem: location 1432 is 1151
9999 mem: decrementing refcount of 1450: 5 -> 4
9999 mem: storing 1530 in location 1151
9999 mem: incrementing refcount of 1530: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1433
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1433 is 1152
9999 mem: storing 0 in location 1152
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1430 is 1140
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 17 -> 16
9999 mem: storing 1140 in location 1465
9999 mem: incrementing refcount of 1140: 16 -> 17
 104 run: return {1: "literal", "true": ()}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1465 is 1140
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 3
 103 run: jump {+next-event: "label"}
9998 run: jumping to instruction 6
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1298
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 94 -> 95
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 95 -> 94
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 94 -> 95
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1288
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1238
9999 mem: incrementing refcount of 1288: 5 -> 6
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1288
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 4
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9999 mem: storing 1289 in location 1239
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 4
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1290 is 1266
9999 mem: storing 1266 in location 1240
9999 mem: incrementing refcount of 1266: 5 -> 6
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 5 in location 1241
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 4
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1242
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 104 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9998 run: base address is 1267
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 4
9998 run: address to copy is 1284
9998 run: its type is event
9999 mem: location 1284 is 0
9999 mem: location 1285 is 100
9999 mem: location 1286 is 0
9999 mem: location 1287 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 100 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 104 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 4
9999 mem: location 1239 is 1289
9999 mem: storing 5 in location 1289
 104 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 100
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1288
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 100, 0, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 100 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1288: 6 -> 5
9999 mem: storing 1288 in location 1295
9999 mem: incrementing refcount of 1288: 5 -> 6
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 103 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 103 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 100
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 103 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 103 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 103 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 100
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 95 -> 96
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 17 -> 18
9990 schedule: handle-keyboard-event/editor-event-loop/scenario_editor-separates-undo-insert-from-undo-cursor-move
 104 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 100 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 104 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 96 -> 97
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 105 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 104 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 97 -> 98
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 105 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 105 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 104 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 104 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 104 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 104 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 104 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 104 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 104 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1325
 104 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 100
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 104 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 104 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1327
 104 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 61
 104 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1338
 104 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 0
9998 run: jumping to instruction 108
 104 run: {page-up?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {2: "literal", "ctrl-b": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1343
 104 run: jump-unless {page-up?: "boolean"}, {: "offset"}
9999 mem: location 1343 is 0
9998 run: jumping to instruction 149
 104 run: {page-down?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {6: "literal", "ctrl-f": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1359
 104 run: jump-unless {page-down?: "boolean"}, {: "offset"}
9999 mem: location 1359 is 0
9998 run: jumping to instruction 190
 104 run: {delete-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {11: "literal", "ctrl-k": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1360
 104 run: jump-unless {delete-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1360 is 0
9998 run: jumping to instruction 210
 104 run: {delete-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {21: "literal", "ctrl-u": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1365
 104 run: jump-unless {delete-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1365 is 0
9998 run: jumping to instruction 230
 104 run: {move-to-end-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {5: "literal", "ctrl-e": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1366
 104 run: jump-unless {move-to-end-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1366 is 0
9998 run: jumping to instruction 268
 104 run: {move-to-start-of-line?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {1: "literal", "ctrl-a": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1367
 104 run: jump-unless {move-to-start-of-line?: "boolean"}, {: "offset"}
9999 mem: location 1367 is 0
9998 run: jumping to instruction 306
 104 run: {delete-previous-character?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {8: "literal", "backspace": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1368
 104 run: jump-unless {delete-previous-character?: "boolean"}, {: "offset"}
9999 mem: location 1368 is 0
9998 run: jumping to instruction 346
 104 run: {tab?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {9: "literal", "tab": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1372
 104 run: jump-unless {tab?: "boolean"}, {: "offset"}
9999 mem: location 1372 is 0
9998 run: jumping to instruction 383
 104 run: {newline?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {10: "literal", "newline": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 0 in location 1376
 104 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1376 is 0
9998 run: jumping to instruction 402
 104 run: {regular-character?: "boolean"} <- greater-or-equal {c: ("address" "character"), "lookup": ()}, {32: "literal", "space": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: storing 1 in location 1379
 104 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 104 run: jump-if {regular-character?: "boolean"}, {1: "offset"}
9999 mem: location 1379 is 1
9998 run: jumping to instruction 407
 104 run: {top-before: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1361
9999 mem: incrementing refcount of 1159: 21 -> 22
 104 run: {cursor-before: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1434
9999 mem: storing 1434 in location 1373
9999 mem: incrementing refcount of 1434: 14 -> 15
 104 run: {editor: ("address" "shared" "editor-data")}, {screen: ("address" "shared" "screen")}, {go-render?: "boolean"} <- insert-at-cursor {editor: ("address" "shared" "editor-data")}, {c: ("address" "character"), "lookup": ()}, {screen: ("address" "shared" "screen")}
9999 mem: location 1311 is 1140
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 100
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 31
9999 mem: allocating size 33
9999 abandon: picking up space from free-list of size 33
9999 mem: new alloc from free list: 1394
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1397
9999 mem: incrementing refcount of 1140: 18 -> 19
 105 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1398
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1399
9999 mem: incrementing refcount of 1008: 98 -> 99
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1400
 105 run: insert_2 {c: "character"}, {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1398 is 100
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 106 run: {x: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1430
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1431
9999 mem: incrementing refcount of 1434: 15 -> 16
 106 run: {new-node: ("address" "shared" "duplex-list" "character")} <- new {(duplex-list character): "type"}
9999 mem: allocating size 4
9999 mem: new alloc: 1533
9999 mem: storing 1533 in location 1432
9999 mem: incrementing refcount of 1533: 0 -> 1
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}, {x: "character"}
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 0
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1430 is 100
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy to is 1534
9999 mem: storing 100 in location 1534
 106 run: {next-node: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1433
9999 mem: incrementing refcount of 1453: 11 -> 12
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1432 is 1533
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1436
9999 mem: storing 1533 in location 1436
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1431 is 1434
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy to is 1536
9999 mem: storing 1434 in location 1536
 106 run: {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {new-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 0
9999 mem: location 1536 is 1434
9999 mem: location 1433 is 1453
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy to is 1535
9999 mem: storing 1453 in location 1535
 106 run: jump-if {next-node: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1433 is 1453
9998 run: jumping to instruction 11
 106 run: {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next-node: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {new-node: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1433 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1432 is 1533
9999 mem: location 1433 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy to is 1456
9999 mem: storing 1533 in location 1456
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "1"}
9999 mem: location 1431 is 1434
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1206
9999 mem: incrementing refcount of 1434: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1434
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1533
9999 mem: location 1437 is 1159
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1533
9999 mem: storing 1533 in location 1207
9999 mem: incrementing refcount of 1533: 1 -> 2
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1533
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1533
9999 mem: location 1400 is 1144
9999 mem: decrementing refcount of 1434: 17 -> 16
9999 mem: storing 1533 in location 1144
9999 mem: incrementing refcount of 1533: 2 -> 3
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1401
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1402
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1403
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1397 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1404
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1401 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1405
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1406
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 99 -> 100
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1207
 106 run: return {width: "number"}
9999 mem: location 1207 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1407
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1399 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1206
9999 mem: incrementing refcount of 1008: 100 -> 101
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1206 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1206 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1207
 106 run: return {height: "number"}
9999 mem: location 1207 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1408
 105 run: {wrap-column: "number"} <- subtract {right: "number"}, {1: "literal"}
9999 mem: location 1404 is 9
9999 mem: storing 8 in location 1409
 105 run: {at-wrap?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {wrap-column: "number"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1409 is 8
9999 mem: storing 0 in location 1410
 105 run: jump-unless {at-wrap?: "boolean"}, {: "offset"}
9999 mem: location 1410 is 0
9998 run: jumping to instruction 41
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- add {cursor-column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 1
9999 mem: location 1402 is 1149
9999 mem: storing 2 in location 1149
 105 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1533
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1206
9999 mem: incrementing refcount of 1533: 3 -> 4
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1533
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1206 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1535
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1535 is 1453
9999 mem: storing 1453 in location 1207
9999 mem: incrementing refcount of 1453: 12 -> 13
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1453
9999 mem: storing 1453 in location 1417
9999 mem: incrementing refcount of 1453: 13 -> 14
 105 run: {at-end?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {0: "literal", "null": ()}
9999 mem: location 1417 is 1453
9999 mem: storing 0 in location 1418
 105 run: jump-unless {at-end?: "boolean"}, {: "offset"}
9999 mem: location 1418 is 0
9998 run: jumping to instruction 56
 105 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1417 is 1453
9998 run: jump-unless fell through
 105 run: {at-right?: "boolean"} <- greater-or-equal {cursor-column: ("address" "number"), "lookup": ()}, {screen-width: "number"}
9999 mem: location 1402 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1407 is 10
9999 mem: storing 0 in location 1421
 105 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1421 is 0
9998 run: jump-if fell through
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- copy {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}
9999 mem: location 1400 is 1144
9999 mem: location 1144 is 1533
9999 mem: storing 1533 in location 1423
9999 mem: incrementing refcount of 1533: 4 -> 5
 105 run: move-cursor {screen: ("address" "shared" "screen")}, {save-row: "number"}, {save-column: "number"}
9999 mem: location 1399 is 1008
9999 mem: location 1405 is 1
9999 mem: location 1406 is 1
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 101 -> 102
 106 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 106 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 106 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 106 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 106 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- copy {save-column: "number"}
9999 mem: location 1406 is 1
9999 mem: storing 1 in location 1424
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1416
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1424 is 1
9999 mem: location 1404 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 1533
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1423 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1423 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1534
9998 run: its type is "character"
9999 mem: location 1534 is 100
9999 mem: storing 100 in location 1425
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1425 is 100
9999 mem: storing 0 in location 1426
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1399 is 1008
9999 mem: location 1425 is 100
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 102 -> 103
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 100
  90 print-character: 100 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 100
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 45 -> 46
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 100
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 100
9999 mem: location 1231 is 1038
9999 mem: storing 100 in location 1038
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 100
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1424 is 1
9999 mem: storing 2 in location 1424
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1423 is 1533
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1206
9999 mem: incrementing refcount of 1533: 5 -> 6
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1533
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1206 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1535
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1535 is 1453
9999 mem: storing 1453 in location 1207
9999 mem: incrementing refcount of 1453: 14 -> 15
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1533: 6 -> 5
9999 mem: storing 1453 in location 1423
9999 mem: incrementing refcount of 1453: 15 -> 16
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1416
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1424 is 2
9999 mem: location 1404 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 1453
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1423 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1533
9999 mem: location 1423 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1454
9998 run: its type is "character"
9999 mem: location 1454 is 98
9999 mem: storing 98 in location 1425
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1425 is 98
9999 mem: storing 0 in location 1426
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1399 is 1008
9999 mem: location 1425 is 98
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 103 -> 104
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 46 -> 47
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1040
9999 mem: storing 98 in location 1040
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1424 is 2
9999 mem: storing 3 in location 1424
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1423 is 1453
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1206
9999 mem: incrementing refcount of 1453: 16 -> 17
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1453
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1533
9999 mem: location 1206 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1207
9999 mem: incrementing refcount of 1457: 8 -> 9
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 17 -> 16
9999 mem: storing 1457 in location 1423
9999 mem: incrementing refcount of 1457: 9 -> 10
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1416
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1424 is 3
9999 mem: location 1404 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 1457
9998 run: jump-unless fell through
 105 run: {currc: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1423 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1423 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is "character"
9999 mem: location 1458 is 99
9999 mem: storing 99 in location 1425
 105 run: {at-newline?: "boolean"} <- equal {currc: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1425 is 99
9999 mem: storing 0 in location 1426
 105 run: jump-if {at-newline?: "boolean"}, {: "offset"}
9999 mem: location 1426 is 0
9998 run: jump-if fell through
 105 run: print {screen: ("address" "shared" "screen")}, {currc: "character"}
9999 mem: location 1399 is 1008
9999 mem: location 1425 is 99
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 104 -> 105
 106 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1213
9999 mem: storing 0 in location 1214
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1213
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 106 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 106 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 106 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 106 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 106 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 106 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 106 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 106 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 106 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 106 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 106 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 47 -> 48
 106 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 106 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 106 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 106 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 106 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 106 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1042
9999 mem: storing 99 in location 1042
 106 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 99
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 106 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 106 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 106 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 106 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 106 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 5
 105 run: {curr-column: "number"} <- add {curr-column: "number"}, {1: "literal"}
9999 mem: location 1424 is 3
9999 mem: storing 4 in location 1424
 105 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1423 is 1457
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1206
9999 mem: incrementing refcount of 1457: 10 -> 11
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1457
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1206 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1207
 106 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 11 -> 10
9999 mem: storing 0 in location 1423
 105 run: jump {: "offset"}
9998 run: jumping to instruction 65
 105 run: {go-render?: "boolean"} <- copy {1: "literal", "true": ()}
9999 mem: storing 1 in location 1416
 105 run: {at-right?: "boolean"} <- greater-than {curr-column: "number"}, {right: "number"}
9999 mem: location 1424 is 4
9999 mem: location 1404 is 9
9999 mem: storing 0 in location 1421
 105 run: jump-unless {at-right?: "boolean"}, {1: "offset"}
9999 mem: location 1421 is 0
9998 run: jumping to instruction 69
 105 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1423 is 0
9998 run: jumping to instruction 77
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1416
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "2"}, {go-render?: "boolean"}
9999 mem: location 1397 is 1140
9999 mem: location 1399 is 1008
9999 mem: location 1416 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9998 run: result 1 is 1008
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1140: 19 -> 18
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 18 -> 19
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 104 -> 105
9999 mem: storing 0 in location 1316
 104 run: {top-after: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1363
9999 mem: incrementing refcount of 1159: 22 -> 23
 104 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 104 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1530
9998 run: jump-unless fell through
 104 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1530
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1206
9999 mem: incrementing refcount of 1530: 2 -> 3
 105 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1206 is 1530
9999 mem: skipping refcount at 1530
9999 mem: location 1531 is 1518
9999 mem: location 1532 is 1450
9999 mem: location 1206 is 1530
9999 mem: skipping refcount at 1530
9998 run: address to copy is 1531
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1531 is 1518
9999 mem: storing 1518 in location 1207
9999 mem: incrementing refcount of 1518: 3 -> 4
 105 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1207 is 1518
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1518
9999 mem: storing 1518 in location 1329
9999 mem: incrementing refcount of 1518: 4 -> 5
 104 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 0 in location 1336
 104 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 429
 104 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- next_2 {cursor-before: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1373 is 1434
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1206
9999 mem: incrementing refcount of 1434: 16 -> 17
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1434
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1533
9999 mem: location 1437 is 1159
9999 mem: location 1206 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1533
9999 mem: storing 1533 in location 1207
9999 mem: incrementing refcount of 1533: 5 -> 6
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1533
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1533
9999 mem: storing 1533 in location 1337
9999 mem: incrementing refcount of 1533: 6 -> 7
 104 run: {insert-to: ("address" "shared" "duplex-list" "character")} <- next_2 {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1337 is 1533
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
 105 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1206
9999 mem: incrementing refcount of 1533: 7 -> 8
 105 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1206 is 1533
9998 run: jumping to instruction 4
 105 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1206 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1206 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1535
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1535 is 1453
9999 mem: storing 1453 in location 1207
9999 mem: incrementing refcount of 1453: 16 -> 17
 105 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1207 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1453
9999 mem: storing 1453 in location 1375
9999 mem: incrementing refcount of 1453: 17 -> 18
 104 run: {op: ("address" "shared" "operation")} <- new {operation: "type"}
9999 mem: allocating size 12
9999 mem: new alloc: 1537
9999 mem: decrementing refcount of 1518: 5 -> 4
9999 mem: storing 1537 in location 1329
9999 mem: incrementing refcount of 1537: 0 -> 1
 104 run: {op: ("address" "shared" "operation"), "lookup": ()} <- merge {0: "literal", "insert-operation": ()}, {save-row: "number", "before": ()}, {save-column: "number", "before": ()}, {top-before: ("address" "shared" "duplex-list" "character")}, {cursor-row: ("address" "number"), "after": (), "lookup": ()}, {cursor-column: ("address" "number"), "after": (), "lookup": ()}, {top-after: ("address" "shared" "duplex-list" "character")}, {insert-from: ("address" "shared" "duplex-list" "character")}, {insert-to: ("address" "shared" "duplex-list" "character")}, {1: "literal", "coalesce": ()}
9999 mem: location 1324 is 1
9999 mem: location 1325 is 1
9999 mem: location 1361 is 1159
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 2
9999 mem: location 1363 is 1159
9999 mem: location 1337 is 1533
9999 mem: location 1375 is 1453
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: storing 0 in location 1538
9999 mem: storing 1 in location 1539
9999 mem: storing 1 in location 1540
9999 mem: storing 1159 in location 1541
9999 mem: storing 1 in location 1542
9999 mem: storing 2 in location 1543
9999 mem: storing 1159 in location 1544
9999 mem: storing 1533 in location 1545
9999 mem: storing 1453 in location 1546
9999 mem: storing 1 in location 1547
 104 run: {editor: ("address" "shared" "editor-data")} <- add-operation {editor: ("address" "shared" "editor-data")}, {op: ("address" "shared" "operation")}
9999 mem: location 1311 is 1140
9999 mem: location 1329 is 1537
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1430
9999 mem: incrementing refcount of 1140: 19 -> 20
 105 run: {op: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1431
9999 mem: incrementing refcount of 1537: 1 -> 2
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1432
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1431 is 1537
9999 mem: location 1432 is 1151
9999 mem: location 1151 is 1530
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1156
9999 mem: incrementing refcount of 1537: 2 -> 3
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1157
9999 mem: incrementing refcount of 1530: 3 -> 4
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1549
9999 mem: storing 1549 in location 1158
9999 mem: incrementing refcount of 1549: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1537
9999 mem: location 1157 is 1530
9999 mem: location 1158 is 1549
9999 mem: skipping refcount at 1549
9999 mem: location 1158 is 1549
9999 mem: skipping refcount at 1549
9999 mem: storing 1537 in location 1550
9999 mem: storing 1530 in location 1551
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1549
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1549
9999 mem: location 1432 is 1151
9999 mem: decrementing refcount of 1530: 4 -> 3
9999 mem: storing 1549 in location 1151
9999 mem: incrementing refcount of 1549: 1 -> 2
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1430 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1433
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- copy {0: "literal"}
9999 mem: location 1433 is 1152
9999 mem: storing 0 in location 1152
 105 run: return {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1430 is 1140
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1140
9999 mem: decrementing refcount of 1140: 20 -> 19
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 19 -> 20
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}, {go-render?: "boolean"}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 mem: location 1316 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1008: 105 -> 104
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 104 -> 105
9999 mem: decrementing refcount of 1140: 20 -> 19
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 19 -> 20
9999 mem: storing 0 in location 1306
 103 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 0
9998 run: jumping to instruction 25
 103 run: jump {: "offset"}
9998 run: jumping to instruction 5
 103 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 103 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1298
 103 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 2
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 105 -> 106
 104 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 104 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 104 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 104 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 104 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 104 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 104 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 104 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 106 -> 105
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 105 -> 106
 103 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1288
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1288 in location 1238
9999 mem: incrementing refcount of 1288: 6 -> 7
 104 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1288
9998 run: jump-unless fell through
 104 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 5
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1289
9999 mem: storing 1289 in location 1239
 104 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9999 mem: location 1289 is 5
9999 mem: location 1290 is 1266
9999 mem: location 1238 is 1288
9999 mem: skipping refcount at 1288
9998 run: address to copy is 1290
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1290 is 1266
9999 mem: storing 1266 in location 1240
9999 mem: incrementing refcount of 1266: 6 -> 7
 104 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1266
9999 mem: skipping refcount at 1266
9999 mem: storing 5 in location 1241
 104 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1289
9999 mem: location 1289 is 5
9999 mem: location 1241 is 5
9999 mem: storing 1 in location 1242
 104 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 104 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1203
9999 mem: storing 1203 in location 1243
9999 mem: incrementing refcount of 1203: 0 -> 1
 104 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1243 is 1203
9999 mem: skipping refcount at 1203
9999 mem: location 1204 is 0
9999 mem: location 1205 is 0
9999 mem: location 1206 is 0
9999 mem: location 1207 is 0
9999 mem: location 1238 is 1288
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 3
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1288
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1288: 7 -> 6
9999 mem: storing 1288 in location 1295
9999 mem: incrementing refcount of 1288: 6 -> 7
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
 103 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 103 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jumping to instruction 28
 103 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 1288
9999 mem: location 1296 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 2
 102 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 3
 102 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 4
 102 run: screen-should-contain {"\n    .          .\n    .adbc      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1554
9999 mem: storing console in 1558
9999 mem: storing console data in 1560
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1001
9991 transform: --- rewrite 'stash' instructions in recipe run_1001
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1001
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1001
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- type-check merge instructions in recipe run_1001
9991 transform: --- check types of reply instructions in recipe run_1001
9991 transform: --- checking reply instructions against header for run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1558
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1291
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 106 -> 107
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1558 in location 1295
9999 mem: incrementing refcount of 1558: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 20 -> 21
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 107 -> 108
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 108 -> 107
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 107 -> 108
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1558
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1558 in location 1238
9999 mem: incrementing refcount of 1558: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1558
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1552
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9998 run: address to copy is 1559
9999 mem: storing 1559 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9999 mem: location 1559 is 0
9999 mem: location 1560 is 1552
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9998 run: address to copy is 1560
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1560 is 1552
9999 mem: storing 1552 in location 1240
9999 mem: incrementing refcount of 1552: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1552
9999 mem: skipping refcount at 1552
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1559
9999 mem: location 1559 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1552
9999 mem: skipping refcount at 1552
9998 run: base address is 1553
9999 mem: location 1239 is 1559
9999 mem: location 1559 is 0
9998 run: address to copy is 1554
9998 run: its type is event
9999 mem: location 1554 is 0
9999 mem: location 1555 is 26
9999 mem: location 1556 is 0
9999 mem: location 1557 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 26 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1559
9999 mem: location 1559 is 0
9999 mem: location 1239 is 1559
9999 mem: storing 1 in location 1559
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 26
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1558
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1558
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 26 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1558: 2 -> 1
9999 mem: storing 1558 in location 1295
9999 mem: incrementing refcount of 1558: 1 -> 2
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 26
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
9990 schedule: editor-event-loop/run_1001/scenario_editor-separates-undo-insert-from-undo-cursor-move
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 26
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 108 -> 109
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 21 -> 22
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 26 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1561
9999 mem: storing 3 in location 1562
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1564
9999 mem: incrementing refcount of 1008: 109 -> 110
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1564 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1565
 106 run: return {width: "number"}
9999 mem: location 1565 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1564
9999 mem: incrementing refcount of 1008: 110 -> 111
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1564 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1565
 106 run: return {height: "number"}
9999 mem: location 1565 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1325
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 26
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 26
9999 mem: storing 0 in location 1327
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 26
9999 mem: storing 1 in location 1338
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1549
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1549
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1549
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1549 in location 1564
9999 mem: incrementing refcount of 1549: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1564 is 1549
9999 mem: skipping refcount at 1549
9999 mem: location 1550 is 1537
9999 mem: location 1551 is 1530
9999 mem: location 1564 is 1549
9999 mem: skipping refcount at 1549
9998 run: address to copy is 1550
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1550 is 1537
9999 mem: storing 1537 in location 1565
9999 mem: incrementing refcount of 1537: 3 -> 4
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1565 is 1537
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1537
9999 mem: storing 1537 in location 1329
9999 mem: incrementing refcount of 1537: 4 -> 5
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1549
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1549 in location 1564
9999 mem: incrementing refcount of 1549: 3 -> 4
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1549
9999 mem: skipping refcount at 1549
9999 mem: location 1550 is 1537
9999 mem: location 1551 is 1530
9999 mem: location 1564 is 1549
9999 mem: skipping refcount at 1549
9998 run: address to copy is 1551
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1551 is 1530
9999 mem: storing 1530 in location 1565
9999 mem: incrementing refcount of 1530: 3 -> 4
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1565 is 1530
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1530
9999 mem: location 1330 is 1151
9999 mem: decrementing refcount of 1549: 4 -> 3
9999 mem: storing 1530 in location 1151
9999 mem: incrementing refcount of 1530: 4 -> 5
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1328
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1329 is 1537
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1156
9999 mem: incrementing refcount of 1537: 5 -> 6
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1157
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1566
9999 mem: storing 1566 in location 1158
9999 mem: incrementing refcount of 1566: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1537
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1566
9999 mem: skipping refcount at 1566
9999 mem: location 1158 is 1566
9999 mem: skipping refcount at 1566
9999 mem: storing 1537 in location 1567
9999 mem: storing 0 in location 1568
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1566
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1566
9999 mem: location 1328 is 1152
9999 mem: storing 1566 in location 1152
9999 mem: incrementing refcount of 1566: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1548 is 0
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: storing 0 in location 1331
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 86
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1548 is 0
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: storing 0 in location 1335
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 94
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1548 is 0
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: storing 1539 in location 1336
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 1539
9998 run: jump-unless fell through
 105 run: {start: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-from: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1545
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1545 is 1533
9999 mem: storing 1533 in location 1332
9999 mem: incrementing refcount of 1533: 8 -> 9
 105 run: {end: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1546
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1546 is 1453
9999 mem: storing 1453 in location 1333
9999 mem: incrementing refcount of 1453: 18 -> 19
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1533
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1564
9999 mem: incrementing refcount of 1533: 9 -> 10
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1533
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1564 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1564 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1536
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1536 is 1434
9999 mem: storing 1434 in location 1565
9999 mem: incrementing refcount of 1434: 17 -> 18
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1565 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1434
9999 mem: location 1321 is 1144
9999 mem: decrementing refcount of 1533: 10 -> 9
9999 mem: storing 1434 in location 1144
9999 mem: incrementing refcount of 1434: 18 -> 19
 105 run: remove-between_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1434
9999 mem: location 1333 is 1453
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1003
9999 mem: incrementing refcount of 1434: 19 -> 20
 106 run: {end: ("address" "shared" "duplex-list" "character"), "contained-in": "start"} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1004
9999 mem: incrementing refcount of 1453: 19 -> 20
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- get {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1003 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1533
9999 mem: location 1437 is 1159
9999 mem: location 1003 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1533
9999 mem: storing 1533 in location 1005
9999 mem: incrementing refcount of 1533: 9 -> 10
 106 run: {nothing-to-delete?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1533
9999 mem: location 1004 is 1453
9999 mem: storing 0 in location 1006
 106 run: jump-unless {nothing-to-delete?: "boolean"}, {1: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 7
 106 run: assert {next: ("address" "shared" "duplex-list" "character")}, {"malformed duplex list": "literal-string"}
9999 mem: location 1005 is 1533
 106 run: {next: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {0: "literal"}
9999 mem: location 1005 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1005 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy to is 1536
9999 mem: storing 0 in location 1536
 106 run: {start: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1533
9999 mem: location 1437 is 1159
9999 mem: location 1004 is 1453
9999 mem: location 1003 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1436
9999 mem: storing 1453 in location 1436
 106 run: jump-if {end: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1004 is 1453
9998 run: jumping to instruction 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- get {end: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1004 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1533
9999 mem: location 1004 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1456
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1456 is 1533
9999 mem: storing 1533 in location 1007
9999 mem: incrementing refcount of 1533: 10 -> 11
 106 run: assert {prev: ("address" "shared" "duplex-list" "character")}, {"malformed duplex list - 2": "literal-string"}
9999 mem: location 1007 is 1533
 106 run: {prev: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {prev: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {0: "literal"}
9999 mem: location 1007 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 0
9999 mem: location 1007 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy to is 1535
9999 mem: storing 0 in location 1535
 106 run: {end: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {end: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1004 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1533
9999 mem: location 1003 is 1434
9999 mem: location 1004 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy to is 1456
9999 mem: storing 1434 in location 1456
 106 run: reply {start: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1434
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-row: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1539
9998 run: its type is "number"
9999 mem: location 1539 is 1
9999 mem: location 1322 is 1148
9999 mem: storing 1 in location 1148
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-column: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1540
9998 run: its type is "number"
9999 mem: location 1540 is 1
9999 mem: location 1323 is 1149
9999 mem: storing 1 in location 1149
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1334
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-top-of-screen: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1541
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1541 is 1159
9999 mem: location 1334 is 1142
9999 mem: decrementing refcount of 1159: 23 -> 22
9999 mem: storing 1159 in location 1142
9999 mem: incrementing refcount of 1159: 22 -> 23
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 111 -> 110
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 110 -> 111
9999 mem: decrementing refcount of 1140: 22 -> 21
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 21 -> 22
9999 mem: storing 1 in location 1306
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 111 -> 112
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1120
9999 mem: incrementing refcount of 1140: 22 -> 23
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1173
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 112 -> 113
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 23 -> 24
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1564
9999 mem: incrementing refcount of 1008: 113 -> 114
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1564 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1565
 107 run: return {height: "number"}
9999 mem: location 1565 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 23 -> 24
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 24 -> 25
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1564
9999 mem: incrementing refcount of 1159: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1564 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1565
9999 mem: incrementing refcount of 1434: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1565 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 26 -> 25
9999 mem: storing 1434 in location 1181
9999 mem: incrementing refcount of 1434: 21 -> 22
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 114 -> 115
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 115 -> 114
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 114 -> 115
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1434
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1435
9998 run: its type is "character"
9999 mem: location 1435 is 97
9999 mem: storing 97 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 mem: new alloc: 1569
9999 mem: storing 10 in location 1570
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 97
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 97
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 115 -> 116
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 48 -> 49
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 97
9999 mem: location 1231 is 1036
9999 mem: storing 97 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1564
9999 mem: incrementing refcount of 1434: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1564 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1565
9999 mem: incrementing refcount of 1453: 20 -> 21
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1565 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 23 -> 22
9999 mem: storing 1453 in location 1181
9999 mem: incrementing refcount of 1453: 21 -> 22
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1564
9999 mem: incrementing refcount of 1159: 25 -> 26
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1564 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1565
9999 mem: incrementing refcount of 1434: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1565 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 26 -> 25
9999 mem: storing 1434 in location 1182
9999 mem: incrementing refcount of 1434: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1453
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1434
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1434: 24 -> 23
9999 mem: storing 1434 in location 1144
9999 mem: incrementing refcount of 1434: 23 -> 24
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1454
9998 run: its type is "character"
9999 mem: location 1454 is 98
9999 mem: storing 98 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 98
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 98
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 116 -> 117
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 49 -> 50
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 100
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1038
9999 mem: storing 98 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1564
9999 mem: incrementing refcount of 1453: 22 -> 23
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1564 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1565
9999 mem: incrementing refcount of 1457: 10 -> 11
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1565 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 23 -> 22
9999 mem: storing 1457 in location 1181
9999 mem: incrementing refcount of 1457: 11 -> 12
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1564
9999 mem: incrementing refcount of 1434: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1564 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1565
9999 mem: incrementing refcount of 1453: 22 -> 23
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1565 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 25 -> 24
9999 mem: storing 1453 in location 1182
9999 mem: incrementing refcount of 1453: 23 -> 24
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1457
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is "character"
9999 mem: location 1458 is 99
9999 mem: storing 99 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 117 -> 118
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 50 -> 51
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1040
9999 mem: storing 99 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1457
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1564
9999 mem: incrementing refcount of 1457: 12 -> 13
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1457
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1564 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1565
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1565 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 13 -> 12
9999 mem: storing 0 in location 1181
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1564
9999 mem: incrementing refcount of 1453: 24 -> 25
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1564 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1564 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1564 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1565
9999 mem: incrementing refcount of 1457: 12 -> 13
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1565 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 25 -> 24
9999 mem: storing 1457 in location 1182
9999 mem: incrementing refcount of 1457: 13 -> 14
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1198
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1199
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
9990 schedule: render/editor-render/editor-event-loop/run_1001/scenario_editor-separates-undo-insert-from-undo-cursor-move
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 3
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 3
9999 mem: storing 1 in location 1123
9999 mem: storing 3 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 3
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 118 -> 119
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 119 -> 120
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 51 -> 52
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 99
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 120 -> 119
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 119 -> 120
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 120 -> 121
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 52 -> 53
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 14
9999 mem: storing 1044 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 121 -> 120
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 120 -> 121
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 121 -> 122
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 53 -> 54
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 15
9999 mem: storing 1046 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 122 -> 121
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 121 -> 122
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 122 -> 123
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 54 -> 55
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 16
9999 mem: storing 1048 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 123 -> 122
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 122 -> 123
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 123 -> 124
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 55 -> 56
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 17
9999 mem: storing 1050 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 124 -> 123
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 123 -> 124
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 124 -> 125
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 56 -> 57
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 18
9999 mem: storing 1052 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 125 -> 124
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 124 -> 125
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 125 -> 126
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 57 -> 58
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 19
9999 mem: storing 1054 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 126 -> 125
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 125 -> 126
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 126 -> 127
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1239
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1240
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1241
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1242
9999 mem: storing 1 in location 1243
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1244
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1246
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1239 is 2
9999 mem: location 1240 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 127 -> 128
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 128 -> 127
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 127 -> 128
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 128 -> 129
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 58 -> 59
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 20
9999 mem: storing 1056 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1056
9999 mem: storing 9480 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1057
9999 mem: storing 245 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 129 -> 130
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1001/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 59 -> 60
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 21
9999 mem: storing 1058 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1058
9999 mem: storing 9480 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1059
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 130 -> 131
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 60 -> 61
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 22
9999 mem: storing 1060 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1060
9999 mem: storing 9480 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1061
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 131 -> 132
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 61 -> 62
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 23
9999 mem: storing 1062 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1062
9999 mem: storing 9480 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1063
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 132 -> 133
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 62 -> 63
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 24
9999 mem: storing 1064 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1064
9999 mem: storing 9480 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1065
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 133 -> 134
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 63 -> 64
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 25
9999 mem: storing 1066 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1066
9999 mem: storing 9480 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1067
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 6
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 134 -> 135
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 64 -> 65
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 26
9999 mem: storing 1068 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1068
9999 mem: storing 9480 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1069
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 6
9999 mem: storing 7 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 7
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 135 -> 136
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 65 -> 66
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 27
9999 mem: storing 1070 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1070
9999 mem: storing 9480 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1071
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 7
9999 mem: storing 8 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 8
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 136 -> 137
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 66 -> 67
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 28
9999 mem: storing 1072 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1072
9999 mem: storing 9480 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1073
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 8
9999 mem: storing 9 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 137 -> 138
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 67 -> 68
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 29
9999 mem: storing 1074 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1074
9999 mem: storing 9480 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1075
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 9
9999 mem: storing 10 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 10
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1238 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 138 -> 139
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
9990 schedule: clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-separates-undo-insert-from-undo-cursor-move
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 139 -> 140
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 140 -> 139
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 139 -> 140
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 140 -> 141
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 141 -> 142
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 68 -> 69
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 30
9999 mem: storing 1076 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1076
9999 mem: storing 32 in location 1076
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1077
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 142 -> 141
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 141 -> 142
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 142 -> 143
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 69 -> 70
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 31
9999 mem: storing 1078 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1078
9999 mem: storing 32 in location 1078
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1079
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 143 -> 142
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 142 -> 143
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 143 -> 144
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 70 -> 71
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 32
9999 mem: storing 1080 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1080
9999 mem: storing 32 in location 1080
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1081
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 144 -> 143
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 143 -> 144
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 144 -> 145
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 71 -> 72
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 33
9999 mem: storing 1082 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 145 -> 144
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 144 -> 145
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 145 -> 146
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 72 -> 73
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 34
9999 mem: storing 1084 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1084
9999 mem: storing 32 in location 1084
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1085
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 146 -> 145
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 145 -> 146
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 146 -> 147
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 73 -> 74
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 35
9999 mem: storing 1086 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1086
9999 mem: storing 32 in location 1086
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1087
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 147 -> 146
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 146 -> 147
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 147 -> 148
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 74 -> 75
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 36
9999 mem: storing 1088 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1088
9999 mem: storing 32 in location 1088
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1089
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 148 -> 147
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 147 -> 148
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 148 -> 149
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 75 -> 76
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 37
9999 mem: storing 1090 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1090
9999 mem: storing 32 in location 1090
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1091
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 149 -> 148
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 148 -> 149
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 149 -> 150
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-separates-undo-insert-from-undo-cursor-move
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 76 -> 77
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 38
9999 mem: storing 1092 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1092
9999 mem: storing 32 in location 1092
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1093
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 150 -> 149
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 149 -> 150
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 150 -> 151
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 77 -> 78
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 39
9999 mem: storing 1094 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1094
9999 mem: storing 32 in location 1094
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1095
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 151 -> 150
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 150 -> 151
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 151 -> 152
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 152 -> 153
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 153 -> 152
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 152 -> 153
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1564
9999 mem: incrementing refcount of 1008: 153 -> 154
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1564 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1564 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1565
 108 run: return {height: "number"}
9999 mem: location 1565 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 154 -> 155
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 155 -> 154
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 154 -> 155
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 155 -> 156
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 156 -> 157
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 78 -> 79
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 40
9999 mem: storing 1096 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1096
9999 mem: storing 32 in location 1096
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1097
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 157 -> 156
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 156 -> 157
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 157 -> 158
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 79 -> 80
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 41
9999 mem: storing 1098 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1098
9999 mem: storing 32 in location 1098
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1099
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 158 -> 157
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 157 -> 158
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 158 -> 159
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 80 -> 81
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 42
9999 mem: storing 1100 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1100
9999 mem: storing 32 in location 1100
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1101
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 159 -> 158
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 158 -> 159
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 159 -> 160
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 81 -> 82
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 43
9999 mem: storing 1102 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1102
9999 mem: storing 32 in location 1102
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1103
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 160 -> 159
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 159 -> 160
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 160 -> 161
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 82 -> 83
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 44
9999 mem: storing 1104 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1104
9999 mem: storing 32 in location 1104
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1105
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 161 -> 160
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 160 -> 161
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 161 -> 162
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 83 -> 84
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 45
9999 mem: storing 1106 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1106
9999 mem: storing 32 in location 1106
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1107
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 162 -> 161
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 161 -> 162
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 162 -> 163
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 84 -> 85
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1001/scenario_editor-separates-undo-insert-from-undo-cursor-move
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 46
9999 mem: storing 1108 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1108
9999 mem: storing 32 in location 1108
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1109
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 163 -> 162
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 162 -> 163
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 163 -> 164
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 85 -> 86
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 47
9999 mem: storing 1110 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1110
9999 mem: storing 32 in location 1110
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1111
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 164 -> 163
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 163 -> 164
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 164 -> 165
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 86 -> 87
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 48
9999 mem: storing 1112 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1112
9999 mem: storing 32 in location 1112
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1113
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 165 -> 164
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 164 -> 165
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 165 -> 166
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 87 -> 88
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 49
9999 mem: storing 1114 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1114
9999 mem: storing 32 in location 1114
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1115
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 166 -> 165
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 165 -> 166
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 166 -> 165
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 165 -> 166
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 166 -> 167
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 167 -> 166
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 166 -> 167
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1558
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1558 in location 1238
9999 mem: incrementing refcount of 1558: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1558
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9999 mem: location 1559 is 1
9999 mem: location 1560 is 1552
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9998 run: address to copy is 1559
9999 mem: storing 1559 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9999 mem: location 1559 is 1
9999 mem: location 1560 is 1552
9999 mem: location 1238 is 1558
9999 mem: skipping refcount at 1558
9998 run: address to copy is 1560
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1560 is 1552
9999 mem: storing 1552 in location 1240
9999 mem: incrementing refcount of 1552: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1552
9999 mem: skipping refcount at 1552
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1559
9999 mem: location 1559 is 1
9999 mem: location 1241 is 1
9999 mem: storing 1 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1561
9999 mem: storing 1561 in location 1243
9999 mem: incrementing refcount of 1561: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1243 is 1561
9999 mem: skipping refcount at 1561
9999 mem: location 1562 is 0
9999 mem: location 1563 is 0
9999 mem: location 1564 is 0
9999 mem: location 1565 is 0
9999 mem: location 1238 is 1558
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1558
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1558: 3 -> 2
9999 mem: storing 1558 in location 1295
9999 mem: incrementing refcount of 1558: 2 -> 3
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 1558
9999 mem: location 1296 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1583
9999 mem: storing console in 1587
9999 mem: storing console data in 1589
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1002
9991 transform: --- rewrite 'stash' instructions in recipe run_1002
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1002
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1002
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- type-check merge instructions in recipe run_1002
9991 transform: --- check types of reply instructions in recipe run_1002
9991 transform: --- checking reply instructions against header for run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1587
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1291
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 167 -> 168
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1295
9999 mem: incrementing refcount of 1587: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 24 -> 25
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 168 -> 169
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 169 -> 168
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 168 -> 169
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1587
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1238
9999 mem: incrementing refcount of 1587: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1587
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 0
9999 mem: location 1589 is 1581
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1588
9999 mem: storing 1588 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 0
9999 mem: location 1589 is 1581
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1589
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1589 is 1581
9999 mem: storing 1581 in location 1240
9999 mem: incrementing refcount of 1581: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1581
9999 mem: skipping refcount at 1581
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1588
9999 mem: location 1588 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1581
9999 mem: skipping refcount at 1581
9998 run: base address is 1582
9999 mem: location 1239 is 1588
9999 mem: location 1588 is 0
9998 run: address to copy is 1583
9998 run: its type is event
9999 mem: location 1583 is 0
9999 mem: location 1584 is 26
9999 mem: location 1585 is 0
9999 mem: location 1586 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 26 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1588
9999 mem: location 1588 is 0
9999 mem: location 1239 is 1588
9999 mem: storing 1 in location 1588
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 26
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1587
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1587
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 26 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1587: 2 -> 1
9999 mem: storing 1587 in location 1295
9999 mem: incrementing refcount of 1587: 1 -> 2
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 26
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 26
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 169 -> 170
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 25 -> 26
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 26 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1590
9999 mem: storing 3 in location 1591
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1593
9999 mem: incrementing refcount of 1008: 170 -> 171
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1593 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1594
 106 run: return {width: "number"}
9999 mem: location 1594 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1593
9999 mem: incrementing refcount of 1008: 171 -> 172
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1593 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1594
 106 run: return {height: "number"}
9999 mem: location 1594 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1325
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 26
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 26
9999 mem: storing 0 in location 1327
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 26
9999 mem: storing 1 in location 1338
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1530
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1530
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1530
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1593
9999 mem: incrementing refcount of 1530: 5 -> 6
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1593 is 1530
9999 mem: skipping refcount at 1530
9999 mem: location 1531 is 1518
9999 mem: location 1532 is 1450
9999 mem: location 1593 is 1530
9999 mem: skipping refcount at 1530
9998 run: address to copy is 1531
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1531 is 1518
9999 mem: storing 1518 in location 1594
9999 mem: incrementing refcount of 1518: 4 -> 5
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1594 is 1518
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1518
9999 mem: storing 1518 in location 1329
9999 mem: incrementing refcount of 1518: 5 -> 6
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1530
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1530 in location 1593
9999 mem: incrementing refcount of 1530: 6 -> 7
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1530
9999 mem: skipping refcount at 1530
9999 mem: location 1531 is 1518
9999 mem: location 1532 is 1450
9999 mem: location 1593 is 1530
9999 mem: skipping refcount at 1530
9998 run: address to copy is 1532
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1532 is 1450
9999 mem: storing 1450 in location 1594
9999 mem: incrementing refcount of 1450: 4 -> 5
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1594 is 1450
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1450
9999 mem: location 1330 is 1151
9999 mem: decrementing refcount of 1530: 7 -> 6
9999 mem: storing 1450 in location 1151
9999 mem: incrementing refcount of 1450: 5 -> 6
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1328
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1329 is 1518
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1566
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1518 in location 1156
9999 mem: incrementing refcount of 1518: 6 -> 7
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1566 in location 1157
9999 mem: incrementing refcount of 1566: 2 -> 3
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1595
9999 mem: storing 1595 in location 1158
9999 mem: incrementing refcount of 1595: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1518
9999 mem: location 1157 is 1566
9999 mem: location 1158 is 1595
9999 mem: skipping refcount at 1595
9999 mem: location 1158 is 1595
9999 mem: skipping refcount at 1595
9999 mem: storing 1518 in location 1596
9999 mem: storing 1566 in location 1597
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1595
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1595
9999 mem: location 1328 is 1152
9999 mem: decrementing refcount of 1566: 3 -> 2
9999 mem: storing 1595 in location 1152
9999 mem: incrementing refcount of 1595: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 0 in location 1331
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 86
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 1520 in location 1335
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1335 is 1520
9998 run: jump-unless fell through
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1334
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-row: "offset"}
9999 mem: location 1335 is 1520
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1335 is 1520
9998 run: address to copy is 1520
9998 run: its type is "number"
9999 mem: location 1520 is 1
9999 mem: location 1322 is 1148
9999 mem: storing 1 in location 1148
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-column: "offset"}
9999 mem: location 1335 is 1520
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1335 is 1520
9998 run: address to copy is 1521
9998 run: its type is "number"
9999 mem: location 1521 is 3
9999 mem: location 1323 is 1149
9999 mem: storing 3 in location 1149
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {before-top-of-screen: "offset"}
9999 mem: location 1335 is 1520
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1335 is 1520
9998 run: address to copy is 1522
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1522 is 1159
9999 mem: location 1334 is 1142
9999 mem: decrementing refcount of 1159: 25 -> 24
9999 mem: storing 1159 in location 1142
9999 mem: incrementing refcount of 1159: 24 -> 25
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 0 in location 1336
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 106
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 172 -> 171
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 171 -> 172
9999 mem: decrementing refcount of 1140: 26 -> 25
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 25 -> 26
9999 mem: storing 1 in location 1306
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 172 -> 173
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1120
9999 mem: incrementing refcount of 1140: 26 -> 27
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1173
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 173 -> 174
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 27 -> 28
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1593
9999 mem: incrementing refcount of 1008: 174 -> 175
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1593 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1594
 107 run: return {height: "number"}
9999 mem: location 1594 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 26 -> 27
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1593
9999 mem: incrementing refcount of 1159: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1593 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1593 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1594
9999 mem: incrementing refcount of 1434: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1594 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 28 -> 27
9999 mem: storing 1434 in location 1181
9999 mem: incrementing refcount of 1434: 25 -> 26
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 175 -> 176
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 176 -> 175
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 175 -> 176
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1434
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1435
9998 run: its type is "character"
9999 mem: location 1435 is 97
9999 mem: storing 97 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 97
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 97
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 176 -> 177
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 88 -> 89
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 97
9999 mem: location 1231 is 1036
9999 mem: storing 97 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
9990 schedule: print/render/editor-render/editor-event-loop/run_1002/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1593
9999 mem: incrementing refcount of 1434: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1593 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1593 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1594
9999 mem: incrementing refcount of 1453: 24 -> 25
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1594 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 27 -> 26
9999 mem: storing 1453 in location 1181
9999 mem: incrementing refcount of 1453: 25 -> 26
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1593
9999 mem: incrementing refcount of 1159: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1593 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1593 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1594
9999 mem: incrementing refcount of 1434: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1594 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 28 -> 27
9999 mem: storing 1434 in location 1182
9999 mem: incrementing refcount of 1434: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1453
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1454
9998 run: its type is "character"
9999 mem: location 1454 is 98
9999 mem: storing 98 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 98
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 98
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 177 -> 178
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 89 -> 90
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1038
9999 mem: storing 98 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1593
9999 mem: incrementing refcount of 1453: 26 -> 27
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1593 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1593 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1594
9999 mem: incrementing refcount of 1457: 14 -> 15
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1594 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 27 -> 26
9999 mem: storing 1457 in location 1181
9999 mem: incrementing refcount of 1457: 15 -> 16
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1593
9999 mem: incrementing refcount of 1434: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1593 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1593 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1594
9999 mem: incrementing refcount of 1453: 26 -> 27
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1594 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 29 -> 28
9999 mem: storing 1453 in location 1182
9999 mem: incrementing refcount of 1453: 27 -> 28
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1457
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is "character"
9999 mem: location 1458 is 99
9999 mem: storing 99 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 178 -> 179
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 90 -> 91
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1040
9999 mem: storing 99 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1457
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1593
9999 mem: incrementing refcount of 1457: 16 -> 17
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1593 is 1457
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1593 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1594
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1594 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 17 -> 16
9999 mem: storing 0 in location 1181
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1593
9999 mem: incrementing refcount of 1453: 28 -> 29
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1593 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1593 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1593 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1594
9999 mem: incrementing refcount of 1457: 16 -> 17
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1594 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 29 -> 28
9999 mem: storing 1457 in location 1182
9999 mem: incrementing refcount of 1457: 17 -> 18
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 1 in location 1198
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 1
9999 mem: storing 1 in location 1199
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 1
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1201
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: storing 1 in location 1148
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1149
9999 mem: storing 3 in location 1149
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1457
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1434: 28 -> 27
9999 mem: storing 1457 in location 1144
9999 mem: incrementing refcount of 1457: 18 -> 19
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 3
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 3
9999 mem: storing 1 in location 1123
9999 mem: storing 3 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 3
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 179 -> 180
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 180 -> 181
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 91 -> 92
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 181 -> 180
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 180 -> 181
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 181 -> 182
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 92 -> 93
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 14
9999 mem: storing 1044 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 182 -> 181
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 181 -> 182
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 182 -> 183
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 93 -> 94
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 15
9999 mem: storing 1046 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 183 -> 182
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 182 -> 183
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 183 -> 184
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 94 -> 95
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 16
9999 mem: storing 1048 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 184 -> 183
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 183 -> 184
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 184 -> 185
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1002/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 95 -> 96
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 17
9999 mem: storing 1050 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 185 -> 184
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 184 -> 185
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 185 -> 186
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 96 -> 97
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 18
9999 mem: storing 1052 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 186 -> 185
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 185 -> 186
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 186 -> 187
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 97 -> 98
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 19
9999 mem: storing 1054 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 187 -> 186
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 186 -> 187
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 187 -> 188
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1239
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1240
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1241
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1242
9999 mem: storing 1 in location 1243
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1244
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1246
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1239 is 2
9999 mem: location 1240 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 188 -> 189
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 189 -> 188
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 188 -> 189
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 189 -> 190
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 98 -> 99
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 20
9999 mem: storing 1056 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1056
9999 mem: storing 9480 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1057
9999 mem: storing 245 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 190 -> 191
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 99 -> 100
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 21
9999 mem: storing 1058 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1058
9999 mem: storing 9480 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1059
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 191 -> 192
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 100 -> 101
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 22
9999 mem: storing 1060 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1060
9999 mem: storing 9480 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1061
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 192 -> 193
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 101 -> 102
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 23
9999 mem: storing 1062 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1062
9999 mem: storing 9480 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1063
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 193 -> 194
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 102 -> 103
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 24
9999 mem: storing 1064 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1064
9999 mem: storing 9480 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1065
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 194 -> 195
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1002/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 103 -> 104
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 25
9999 mem: storing 1066 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1066
9999 mem: storing 9480 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1067
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 6
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 195 -> 196
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 104 -> 105
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 26
9999 mem: storing 1068 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1068
9999 mem: storing 9480 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1069
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 6
9999 mem: storing 7 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 7
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 196 -> 197
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 105 -> 106
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 27
9999 mem: storing 1070 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1070
9999 mem: storing 9480 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1071
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 7
9999 mem: storing 8 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 8
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 197 -> 198
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 106 -> 107
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 28
9999 mem: storing 1072 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1072
9999 mem: storing 9480 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1073
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 8
9999 mem: storing 9 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 198 -> 199
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 107 -> 108
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 29
9999 mem: storing 1074 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1074
9999 mem: storing 9480 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1075
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 9
9999 mem: storing 10 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 10
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1238 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 199 -> 200
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 200 -> 201
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 201 -> 200
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 200 -> 201
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 201 -> 202
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 202 -> 203
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 108 -> 109
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 30
9999 mem: storing 1076 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1076
9999 mem: storing 32 in location 1076
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1077
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 203 -> 202
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 202 -> 203
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 203 -> 204
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 109 -> 110
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 31
9999 mem: storing 1078 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1078
9999 mem: storing 32 in location 1078
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1079
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 204 -> 203
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 203 -> 204
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 204 -> 205
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 110 -> 111
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 32
9999 mem: storing 1080 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1080
9999 mem: storing 32 in location 1080
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1081
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 205 -> 204
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 204 -> 205
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 205 -> 206
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 111 -> 112
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 33
9999 mem: storing 1082 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1002/scenario_editor-separates-undo-insert-from-undo-cursor-move
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 206 -> 205
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 205 -> 206
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 206 -> 207
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 112 -> 113
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 34
9999 mem: storing 1084 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1084
9999 mem: storing 32 in location 1084
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1085
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 207 -> 206
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 206 -> 207
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 207 -> 208
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 113 -> 114
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 35
9999 mem: storing 1086 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1086
9999 mem: storing 32 in location 1086
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1087
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 208 -> 207
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 207 -> 208
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 208 -> 209
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 114 -> 115
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 36
9999 mem: storing 1088 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1088
9999 mem: storing 32 in location 1088
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1089
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 209 -> 208
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 208 -> 209
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 209 -> 210
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 115 -> 116
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 37
9999 mem: storing 1090 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1090
9999 mem: storing 32 in location 1090
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1091
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 210 -> 209
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 209 -> 210
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 210 -> 211
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 116 -> 117
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 38
9999 mem: storing 1092 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1092
9999 mem: storing 32 in location 1092
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1093
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 211 -> 210
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 210 -> 211
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 211 -> 212
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 117 -> 118
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 39
9999 mem: storing 1094 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1094
9999 mem: storing 32 in location 1094
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1095
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 212 -> 211
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 211 -> 212
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 212 -> 213
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 213 -> 214
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 214 -> 213
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 213 -> 214
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1593
9999 mem: incrementing refcount of 1008: 214 -> 215
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1593 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1593 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1594
 108 run: return {height: "number"}
9999 mem: location 1594 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 215 -> 216
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 216 -> 215
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 215 -> 216
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 216 -> 217
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 217 -> 218
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 118 -> 119
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 40
9999 mem: storing 1096 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1096
9999 mem: storing 32 in location 1096
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1097
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 218 -> 217
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 217 -> 218
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 218 -> 219
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 119 -> 120
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 41
9999 mem: storing 1098 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1098
9999 mem: storing 32 in location 1098
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1099
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 219 -> 218
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 218 -> 219
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
9990 schedule: clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1002/scenario_editor-separates-undo-insert-from-undo-cursor-move
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 219 -> 220
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 120 -> 121
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 42
9999 mem: storing 1100 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1100
9999 mem: storing 32 in location 1100
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1101
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 220 -> 219
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 219 -> 220
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 220 -> 221
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 121 -> 122
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 43
9999 mem: storing 1102 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1102
9999 mem: storing 32 in location 1102
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1103
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 221 -> 220
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 220 -> 221
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 221 -> 222
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 122 -> 123
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 44
9999 mem: storing 1104 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1104
9999 mem: storing 32 in location 1104
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1105
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 222 -> 221
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 221 -> 222
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 222 -> 223
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 123 -> 124
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 45
9999 mem: storing 1106 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1106
9999 mem: storing 32 in location 1106
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1107
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 223 -> 222
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 222 -> 223
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 223 -> 224
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 124 -> 125
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 46
9999 mem: storing 1108 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1108
9999 mem: storing 32 in location 1108
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1109
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 224 -> 223
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 223 -> 224
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 224 -> 225
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 125 -> 126
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 47
9999 mem: storing 1110 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1110
9999 mem: storing 32 in location 1110
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1111
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 225 -> 224
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 224 -> 225
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 225 -> 226
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 126 -> 127
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 48
9999 mem: storing 1112 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1112
9999 mem: storing 32 in location 1112
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1113
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 226 -> 225
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 225 -> 226
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 226 -> 227
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 127 -> 128
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 49
9999 mem: storing 1114 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1114
9999 mem: storing 32 in location 1114
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1115
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 227 -> 226
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 226 -> 227
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 227 -> 226
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 226 -> 227
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 227 -> 228
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 228 -> 227
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 227 -> 228
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1587
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1587 in location 1238
9999 mem: incrementing refcount of 1587: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1587
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 1
9999 mem: location 1589 is 1581
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1588
9999 mem: storing 1588 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9999 mem: location 1588 is 1
9999 mem: location 1589 is 1581
9999 mem: location 1238 is 1587
9999 mem: skipping refcount at 1587
9998 run: address to copy is 1589
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1589 is 1581
9999 mem: storing 1581 in location 1240
9999 mem: incrementing refcount of 1581: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1581
9999 mem: skipping refcount at 1581
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1588
9999 mem: location 1588 is 1
9999 mem: location 1241 is 1
9999 mem: storing 1 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1590
9999 mem: storing 1590 in location 1243
9999 mem: incrementing refcount of 1590: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1243 is 1590
9999 mem: skipping refcount at 1590
9999 mem: location 1591 is 0
9999 mem: location 1592 is 0
9999 mem: location 1593 is 0
9999 mem: location 1594 is 0
9999 mem: location 1238 is 1587
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1587
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1587: 3 -> 2
9999 mem: storing 1587 in location 1295
9999 mem: incrementing refcount of 1587: 2 -> 3
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 1587
9999 mem: location 1296 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console {"\n    press ctrl-z\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-z: ()}
9992 load: after rewriting: press {ctrl-z: ()}
9999 mem: storing 'press' event starting at 1600
9999 mem: storing console in 1604
9999 mem: storing console data in 1606
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1003
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1003 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1003
9991 transform: --- rewrite 'stash' instructions in recipe run_1003
9991 transform: --- fill in reply ingredients from header for recipe run_1003
9991 transform: --- deduce types for recipe run_1003
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1003
9991 transform: --- collect surrounding spaces for recipe run_1003
9991 transform: --- transform names for recipe run_1003
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1003
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1003
9991 transform: --- transform braces for recipe run_1003
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1003
9991 transform: --- perform checks for recipe run_1003
9991 transform: --- type-check 'call' instructions inside recipe run_1003
9991 transform: --- type-check calls inside recipe run_1003
9991 transform: --- convert 'new' to 'allocate' for recipe run_1003
9991 transform: --- type-check merge instructions in recipe run_1003
9991 transform: --- check types of reply instructions in recipe run_1003
9991 transform: --- checking reply instructions against header for run_1003
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1604
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1291
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 228 -> 229
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1604 in location 1295
9999 mem: incrementing refcount of 1604: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 28 -> 29
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
9990 schedule: editor-event-loop/run_1003/scenario_editor-separates-undo-insert-from-undo-cursor-move
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 229 -> 230
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 230 -> 229
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 229 -> 230
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1604
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1604 in location 1238
9999 mem: incrementing refcount of 1604: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1604
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9999 mem: location 1605 is 0
9999 mem: location 1606 is 1598
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9998 run: address to copy is 1605
9999 mem: storing 1605 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9999 mem: location 1605 is 0
9999 mem: location 1606 is 1598
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9998 run: address to copy is 1606
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1606 is 1598
9999 mem: storing 1598 in location 1240
9999 mem: incrementing refcount of 1598: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1598
9999 mem: skipping refcount at 1598
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1605
9999 mem: location 1605 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1598
9999 mem: skipping refcount at 1598
9998 run: base address is 1599
9999 mem: location 1239 is 1605
9999 mem: location 1605 is 0
9998 run: address to copy is 1600
9998 run: its type is event
9999 mem: location 1600 is 0
9999 mem: location 1601 is 26
9999 mem: location 1602 is 0
9999 mem: location 1603 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 26 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1605
9999 mem: location 1605 is 0
9999 mem: location 1239 is 1605
9999 mem: storing 1 in location 1605
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 26
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1604
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 26, 0, 0]
9998 run: result 1 is 1604
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 26 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1604: 2 -> 1
9999 mem: storing 1604 in location 1295
9999 mem: incrementing refcount of 1604: 1 -> 2
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 26
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 26
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 230 -> 231
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 29 -> 30
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 26 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1607
9999 mem: storing 3 in location 1608
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1610
9999 mem: incrementing refcount of 1008: 231 -> 232
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1610 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1611
 106 run: return {width: "number"}
9999 mem: location 1611 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1610
9999 mem: incrementing refcount of 1008: 232 -> 233
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1610 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1611
 106 run: return {height: "number"}
9999 mem: location 1611 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1325
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 26
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 26
9999 mem: storing 0 in location 1327
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 0
9998 run: jumping to instruction 61
 105 run: {undo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {26: "literal", "ctrl-z": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 26
9999 mem: storing 1 in location 1338
 105 run: jump-unless {undo?: "boolean"}, {: "offset"}
9999 mem: location 1338 is 1
9998 run: jump-unless fell through
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1450
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 105 run: jump-unless {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1450
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1450
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1610
9999 mem: incrementing refcount of 1450: 6 -> 7
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1610 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 1438
9999 mem: location 1452 is 0
9999 mem: location 1610 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1451
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1451 is 1438
9999 mem: storing 1438 in location 1611
9999 mem: incrementing refcount of 1438: 7 -> 8
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1611 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1438
9999 mem: storing 1438 in location 1329
9999 mem: incrementing refcount of 1438: 8 -> 9
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1450
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1450 in location 1610
9999 mem: incrementing refcount of 1450: 7 -> 8
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1610 is 1450
9999 mem: skipping refcount at 1450
9999 mem: location 1451 is 1438
9999 mem: location 1452 is 0
9999 mem: location 1610 is 1450
9999 mem: skipping refcount at 1450
9998 run: address to copy is 1452
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1452 is 0
9999 mem: storing 0 in location 1611
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1611 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1330 is 1151
9999 mem: decrementing refcount of 1450: 8 -> 7
9999 mem: storing 0 in location 1151
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1328
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1329 is 1438
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1595
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1438 in location 1156
9999 mem: incrementing refcount of 1438: 9 -> 10
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1595 in location 1157
9999 mem: incrementing refcount of 1595: 2 -> 3
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1612
9999 mem: storing 1612 in location 1158
9999 mem: incrementing refcount of 1612: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1438
9999 mem: location 1157 is 1595
9999 mem: location 1158 is 1612
9999 mem: skipping refcount at 1612
9999 mem: location 1158 is 1612
9999 mem: skipping refcount at 1612
9999 mem: storing 1438 in location 1613
9999 mem: storing 1595 in location 1614
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1612
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1612
9999 mem: location 1328 is 1152
9999 mem: decrementing refcount of 1595: 3 -> 2
9999 mem: storing 1612 in location 1152
9999 mem: incrementing refcount of 1612: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 0 in location 1331
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 86
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 0 in location 1335
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 94
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 1440 in location 1336
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 1440
9998 run: jump-unless fell through
 105 run: {start: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-from: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1446
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1446 is 1434
9999 mem: storing 1434 in location 1332
9999 mem: incrementing refcount of 1434: 27 -> 28
 105 run: {end: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-until: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1447
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1447 is 0
9999 mem: storing 0 in location 1333
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- prev_2 {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1332 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1610
9999 mem: incrementing refcount of 1434: 28 -> 29
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1610 is 1434
9998 run: jumping to instruction 4
 106 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}
9999 mem: location 1610 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1610 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1437
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1437 is 1159
9999 mem: storing 1159 in location 1611
9999 mem: incrementing refcount of 1159: 27 -> 28
 106 run: return {result: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1611 is 1159
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1159
9999 mem: location 1321 is 1144
9999 mem: decrementing refcount of 1457: 19 -> 18
9999 mem: storing 1159 in location 1144
9999 mem: incrementing refcount of 1159: 28 -> 29
 105 run: remove-between_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1159
9999 mem: location 1333 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {start: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1003
9999 mem: incrementing refcount of 1159: 29 -> 30
 106 run: {end: ("address" "shared" "duplex-list" "character"), "contained-in": "start"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1004
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- get {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1003 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1003 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1005
9999 mem: incrementing refcount of 1434: 29 -> 30
 106 run: {nothing-to-delete?: "boolean"} <- equal {next: ("address" "shared" "duplex-list" "character")}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1005 is 1434
9999 mem: location 1004 is 0
9999 mem: storing 0 in location 1006
 106 run: jump-unless {nothing-to-delete?: "boolean"}, {1: "offset"}
9999 mem: location 1006 is 0
9998 run: jumping to instruction 7
 106 run: assert {next: ("address" "shared" "duplex-list" "character")}, {"malformed duplex list": "literal-string"}
9999 mem: location 1005 is 1434
 106 run: {next: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {0: "literal"}
9999 mem: location 1005 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1005 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1437
9999 mem: storing 0 in location 1437
 106 run: {start: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1003 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1004 is 0
9999 mem: location 1003 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1161
9999 mem: storing 0 in location 1161
 106 run: jump-if {end: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1004 is 0
9998 run: jump-if fell through
 106 run: reply {start: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1159
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-row: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1440
9998 run: its type is "number"
9999 mem: location 1440 is 1
9999 mem: location 1322 is 1148
9999 mem: storing 1 in location 1148
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-column: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1441
9998 run: its type is "number"
9999 mem: location 1441 is 0
9999 mem: location 1323 is 1149
9999 mem: storing 0 in location 1149
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1334
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {before-top-of-screen: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1442
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1442 is 1159
9999 mem: location 1334 is 1142
9999 mem: decrementing refcount of 1159: 30 -> 29
9999 mem: storing 1159 in location 1142
9999 mem: incrementing refcount of 1159: 29 -> 30
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 233 -> 232
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 232 -> 233
9999 mem: decrementing refcount of 1140: 30 -> 29
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 29 -> 30
9999 mem: storing 1 in location 1306
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 233 -> 234
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1120
9999 mem: incrementing refcount of 1140: 30 -> 31
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1173
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 234 -> 235
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 31 -> 32
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1610
9999 mem: incrementing refcount of 1008: 235 -> 236
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1610 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1611
 107 run: return {height: "number"}
9999 mem: location 1611 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 30 -> 31
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 31 -> 32
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1610
9999 mem: incrementing refcount of 1159: 32 -> 33
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1610 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1610 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1610 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1611
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1611 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1159: 33 -> 32
9999 mem: storing 0 in location 1181
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 236 -> 237
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 237 -> 236
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 236 -> 237
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 1 in location 1198
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 1
9999 mem: storing 1 in location 1199
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 1
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1201
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: storing 1 in location 1148
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: storing 0 in location 1149
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1159: 32 -> 31
9999 mem: storing 1159 in location 1144
9999 mem: incrementing refcount of 1159: 31 -> 32
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 0
9999 mem: storing 1 in location 1123
9999 mem: storing 0 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 237 -> 238
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 238 -> 239
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 128 -> 129
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1036
9999 mem: storing 32 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 239 -> 238
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 238 -> 239
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 239 -> 240
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 129 -> 130
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1038
9999 mem: storing 32 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 240 -> 239
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 239 -> 240
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 240 -> 241
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 130 -> 131
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1040
9999 mem: storing 32 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 241 -> 240
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 240 -> 241
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 241 -> 242
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 131 -> 132
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 242 -> 241
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 241 -> 242
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 242 -> 243
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 132 -> 133
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 14
9999 mem: storing 1044 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 243 -> 242
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 242 -> 243
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 243 -> 244
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1003/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 133 -> 134
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 15
9999 mem: storing 1046 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 244 -> 243
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 243 -> 244
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 244 -> 245
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 134 -> 135
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 16
9999 mem: storing 1048 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 245 -> 244
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 244 -> 245
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 245 -> 246
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 135 -> 136
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 17
9999 mem: storing 1050 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 246 -> 245
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 245 -> 246
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 246 -> 247
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 136 -> 137
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 18
9999 mem: storing 1052 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 247 -> 246
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 246 -> 247
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 247 -> 248
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 137 -> 138
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 19
9999 mem: storing 1054 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 248 -> 247
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 247 -> 248
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 248 -> 249
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1239
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1240
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1241
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1242
9999 mem: storing 1 in location 1243
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1244
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1246
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1239 is 2
9999 mem: location 1240 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 249 -> 250
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 250 -> 249
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 249 -> 250
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 250 -> 251
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 138 -> 139
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 20
9999 mem: storing 1056 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1056
9999 mem: storing 9480 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1057
9999 mem: storing 245 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 251 -> 252
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 139 -> 140
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 21
9999 mem: storing 1058 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1058
9999 mem: storing 9480 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1059
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 252 -> 253
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 140 -> 141
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 22
9999 mem: storing 1060 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1060
9999 mem: storing 9480 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1061
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 253 -> 254
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1003/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 141 -> 142
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 23
9999 mem: storing 1062 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1062
9999 mem: storing 9480 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1063
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 254 -> 255
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 142 -> 143
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 24
9999 mem: storing 1064 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1064
9999 mem: storing 9480 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1065
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 255 -> 256
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 143 -> 144
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 25
9999 mem: storing 1066 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1066
9999 mem: storing 9480 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1067
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 6
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 256 -> 257
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 144 -> 145
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 26
9999 mem: storing 1068 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1068
9999 mem: storing 9480 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1069
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 6
9999 mem: storing 7 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 7
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 257 -> 258
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 145 -> 146
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 27
9999 mem: storing 1070 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1070
9999 mem: storing 9480 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1071
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 7
9999 mem: storing 8 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 8
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 258 -> 259
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 146 -> 147
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 28
9999 mem: storing 1072 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1072
9999 mem: storing 9480 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1073
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 8
9999 mem: storing 9 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 259 -> 260
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 147 -> 148
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 29
9999 mem: storing 1074 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1074
9999 mem: storing 9480 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1075
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 9
9999 mem: storing 10 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 10
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1238 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 260 -> 261
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 261 -> 262
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 262 -> 261
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 261 -> 262
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 262 -> 263
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 263 -> 264
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 148 -> 149
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 30
9999 mem: storing 1076 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1076
9999 mem: storing 32 in location 1076
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1077
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 264 -> 263
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 263 -> 264
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 264 -> 265
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 149 -> 150
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 31
9999 mem: storing 1078 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1078
9999 mem: storing 32 in location 1078
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1079
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 265 -> 264
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 264 -> 265
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1003/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 265 -> 266
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 150 -> 151
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 32
9999 mem: storing 1080 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1080
9999 mem: storing 32 in location 1080
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1081
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 266 -> 265
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 265 -> 266
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 266 -> 267
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 151 -> 152
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 33
9999 mem: storing 1082 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 267 -> 266
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 266 -> 267
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 267 -> 268
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 152 -> 153
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 34
9999 mem: storing 1084 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1084
9999 mem: storing 32 in location 1084
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1085
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 268 -> 267
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 267 -> 268
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 268 -> 269
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 153 -> 154
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 35
9999 mem: storing 1086 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1086
9999 mem: storing 32 in location 1086
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1087
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 269 -> 268
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 268 -> 269
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 269 -> 270
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 154 -> 155
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 36
9999 mem: storing 1088 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1088
9999 mem: storing 32 in location 1088
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1089
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 270 -> 269
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 269 -> 270
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 270 -> 271
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 155 -> 156
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 37
9999 mem: storing 1090 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1090
9999 mem: storing 32 in location 1090
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1091
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 271 -> 270
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 270 -> 271
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 271 -> 272
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 156 -> 157
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 38
9999 mem: storing 1092 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1092
9999 mem: storing 32 in location 1092
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1093
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 272 -> 271
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 271 -> 272
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 272 -> 273
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 157 -> 158
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 39
9999 mem: storing 1094 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1094
9999 mem: storing 32 in location 1094
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1095
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 273 -> 272
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 272 -> 273
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 273 -> 274
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 274 -> 275
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 275 -> 274
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 274 -> 275
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1610
9999 mem: incrementing refcount of 1008: 275 -> 276
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1610 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1610 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1611
 108 run: return {height: "number"}
9999 mem: location 1611 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 276 -> 277
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 277 -> 276
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 276 -> 277
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 277 -> 278
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1003/scenario_editor-separates-undo-insert-from-undo-cursor-move
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 278 -> 279
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 158 -> 159
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 40
9999 mem: storing 1096 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1096
9999 mem: storing 32 in location 1096
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1097
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 279 -> 278
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 278 -> 279
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 279 -> 280
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 159 -> 160
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 41
9999 mem: storing 1098 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1098
9999 mem: storing 32 in location 1098
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1099
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 280 -> 279
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 279 -> 280
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 280 -> 281
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 160 -> 161
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 42
9999 mem: storing 1100 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1100
9999 mem: storing 32 in location 1100
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1101
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 281 -> 280
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 280 -> 281
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 281 -> 282
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 161 -> 162
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 43
9999 mem: storing 1102 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1102
9999 mem: storing 32 in location 1102
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1103
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 282 -> 281
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 281 -> 282
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 282 -> 283
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 162 -> 163
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 44
9999 mem: storing 1104 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1104
9999 mem: storing 32 in location 1104
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1105
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 283 -> 282
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 282 -> 283
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 283 -> 284
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 163 -> 164
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 45
9999 mem: storing 1106 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1106
9999 mem: storing 32 in location 1106
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1107
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 284 -> 283
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 283 -> 284
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 284 -> 285
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 164 -> 165
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 46
9999 mem: storing 1108 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1108
9999 mem: storing 32 in location 1108
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1109
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 285 -> 284
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 284 -> 285
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 285 -> 286
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 165 -> 166
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 47
9999 mem: storing 1110 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1110
9999 mem: storing 32 in location 1110
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1111
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 286 -> 285
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 285 -> 286
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 286 -> 287
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 166 -> 167
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 48
9999 mem: storing 1112 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1112
9999 mem: storing 32 in location 1112
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1113
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 287 -> 286
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 286 -> 287
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 287 -> 288
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1003/scenario_editor-separates-undo-insert-from-undo-cursor-move
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 167 -> 168
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 49
9999 mem: storing 1114 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1114
9999 mem: storing 32 in location 1114
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1115
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 288 -> 287
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 287 -> 288
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 288 -> 287
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 287 -> 288
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 288 -> 289
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 289 -> 288
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 288 -> 289
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1604
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1604 in location 1238
9999 mem: incrementing refcount of 1604: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1604
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9999 mem: location 1605 is 1
9999 mem: location 1606 is 1598
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9998 run: address to copy is 1605
9999 mem: storing 1605 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9999 mem: location 1605 is 1
9999 mem: location 1606 is 1598
9999 mem: location 1238 is 1604
9999 mem: skipping refcount at 1604
9998 run: address to copy is 1606
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1606 is 1598
9999 mem: storing 1598 in location 1240
9999 mem: incrementing refcount of 1598: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1598
9999 mem: skipping refcount at 1598
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1605
9999 mem: location 1605 is 1
9999 mem: location 1241 is 1
9999 mem: storing 1 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1607
9999 mem: storing 1607 in location 1243
9999 mem: incrementing refcount of 1607: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1243 is 1607
9999 mem: skipping refcount at 1607
9999 mem: location 1608 is 0
9999 mem: location 1609 is 0
9999 mem: location 1610 is 0
9999 mem: location 1611 is 0
9999 mem: location 1238 is 1604
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1604
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1604: 3 -> 2
9999 mem: storing 1604 in location 1295
9999 mem: incrementing refcount of 1604: 2 -> 3
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 1604
9999 mem: location 1296 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .          .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 0\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console {"\n    press ctrl-y\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-y: ()}
9992 load: after rewriting: press {ctrl-y: ()}
9999 mem: storing 'press' event starting at 1617
9999 mem: storing console in 1621
9999 mem: storing console data in 1623
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1004
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1004 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1004
9991 transform: --- rewrite 'stash' instructions in recipe run_1004
9991 transform: --- fill in reply ingredients from header for recipe run_1004
9991 transform: --- deduce types for recipe run_1004
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1004
9991 transform: --- collect surrounding spaces for recipe run_1004
9991 transform: --- transform names for recipe run_1004
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1004
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1004
9991 transform: --- transform braces for recipe run_1004
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1004
9991 transform: --- perform checks for recipe run_1004
9991 transform: --- type-check 'call' instructions inside recipe run_1004
9991 transform: --- type-check calls inside recipe run_1004
9991 transform: --- convert 'new' to 'allocate' for recipe run_1004
9991 transform: --- type-check merge instructions in recipe run_1004
9991 transform: --- check types of reply instructions in recipe run_1004
9991 transform: --- checking reply instructions against header for run_1004
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1621
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1291
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 289 -> 290
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1621 in location 1295
9999 mem: incrementing refcount of 1621: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 32 -> 33
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 290 -> 291
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 291 -> 290
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 290 -> 291
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1621
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1621 in location 1238
9999 mem: incrementing refcount of 1621: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1621
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 0
9999 mem: location 1623 is 1615
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9998 run: address to copy is 1622
9999 mem: storing 1622 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 0
9999 mem: location 1623 is 1615
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9998 run: address to copy is 1623
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1623 is 1615
9999 mem: storing 1615 in location 1240
9999 mem: incrementing refcount of 1615: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1615
9999 mem: skipping refcount at 1615
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1622
9999 mem: location 1622 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1615
9999 mem: skipping refcount at 1615
9998 run: base address is 1616
9999 mem: location 1239 is 1622
9999 mem: location 1622 is 0
9998 run: address to copy is 1617
9998 run: its type is event
9999 mem: location 1617 is 0
9999 mem: location 1618 is 25
9999 mem: location 1619 is 0
9999 mem: location 1620 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 25 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1622
9999 mem: location 1622 is 0
9999 mem: location 1239 is 1622
9999 mem: storing 1 in location 1622
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 25
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1621
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 25, 0, 0]
9998 run: result 1 is 1621
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 25 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1621: 2 -> 1
9999 mem: storing 1621 in location 1295
9999 mem: incrementing refcount of 1621: 1 -> 2
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 25
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 25
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 291 -> 292
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 33 -> 34
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 25 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1624
9999 mem: storing 3 in location 1625
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1627
9999 mem: incrementing refcount of 1008: 292 -> 293
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1627 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1628
 106 run: return {width: "number"}
9999 mem: location 1628 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1627
9999 mem: incrementing refcount of 1008: 293 -> 294
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1627 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1628
 106 run: return {height: "number"}
9999 mem: location 1628 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 0
9999 mem: storing 0 in location 1325
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 25
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 25
9999 mem: storing 1 in location 1327
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1612
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1328
 105 run: jump-unless {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1612
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1612
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1612 in location 1627
9999 mem: incrementing refcount of 1612: 2 -> 3
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1627 is 1612
9999 mem: skipping refcount at 1612
9999 mem: location 1613 is 1438
9999 mem: location 1614 is 1595
9999 mem: location 1627 is 1612
9999 mem: skipping refcount at 1612
9998 run: address to copy is 1613
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1613 is 1438
9999 mem: storing 1438 in location 1628
9999 mem: incrementing refcount of 1438: 10 -> 11
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1628 is 1438
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1438
9999 mem: storing 1438 in location 1329
9999 mem: incrementing refcount of 1438: 11 -> 12
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1612
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1612 in location 1627
9999 mem: incrementing refcount of 1612: 3 -> 4
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1612
9999 mem: skipping refcount at 1612
9999 mem: location 1613 is 1438
9999 mem: location 1614 is 1595
9999 mem: location 1627 is 1612
9999 mem: skipping refcount at 1612
9998 run: address to copy is 1614
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1614 is 1595
9999 mem: storing 1595 in location 1628
9999 mem: incrementing refcount of 1595: 2 -> 3
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1628 is 1595
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1595
9999 mem: location 1328 is 1152
9999 mem: decrementing refcount of 1612: 4 -> 3
9999 mem: storing 1595 in location 1152
9999 mem: incrementing refcount of 1595: 3 -> 4
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1329 is 1438
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 0
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1438 in location 1156
9999 mem: incrementing refcount of 1438: 12 -> 13
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1157
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1629
9999 mem: storing 1629 in location 1158
9999 mem: incrementing refcount of 1629: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1438
9999 mem: location 1157 is 0
9999 mem: location 1158 is 1629
9999 mem: skipping refcount at 1629
9999 mem: location 1158 is 1629
9999 mem: skipping refcount at 1629
9999 mem: storing 1438 in location 1630
9999 mem: storing 0 in location 1631
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1629
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1629
9999 mem: location 1330 is 1151
9999 mem: storing 1629 in location 1151
9999 mem: incrementing refcount of 1629: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 0 in location 1331
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 41
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 0 in location 1335
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 49
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: location 1439 is 0
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1449 is 0
9999 mem: location 1329 is 1438
9999 mem: skipping refcount at 1438
9999 mem: storing 1440 in location 1336
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 1440
9998 run: jump-unless fell through
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-from: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1446
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1446 is 1434
9999 mem: storing 1434 in location 1337
9999 mem: incrementing refcount of 1434: 30 -> 31
 105 run: insert-range_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1159
9999 mem: location 1337 is 1434
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1430
9999 mem: incrementing refcount of 1159: 32 -> 33
 106 run: {start: ("address" "shared" "duplex-list" "character"), "contained-in": "in"} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1431
9999 mem: incrementing refcount of 1434: 31 -> 32
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1430 is 1159
9998 run: jumping to instruction 5
 106 run: jump-if {start: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1431 is 1434
9998 run: jumping to instruction 7
 106 run: {end: ("address" "shared" "duplex-list" "character")} <- copy {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1434
9999 mem: storing 1434 in location 1432
9999 mem: incrementing refcount of 1434: 32 -> 33
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {end: ("address" "shared" "duplex-list" "character"), "insert-range": ()}
9999 mem: location 1432 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1627
9999 mem: incrementing refcount of 1434: 33 -> 34
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 0
9999 mem: location 1627 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1628
9999 mem: incrementing refcount of 1453: 28 -> 29
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: storing 1453 in location 1433
9999 mem: incrementing refcount of 1453: 29 -> 30
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1433 is 1453
9998 run: jump-unless fell through
 106 run: {end: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1433 is 1453
9999 mem: decrementing refcount of 1434: 34 -> 33
9999 mem: storing 1453 in location 1432
9999 mem: incrementing refcount of 1453: 30 -> 31
 106 run: jump {: "offset"}
9998 run: jumping to instruction 9
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {end: ("address" "shared" "duplex-list" "character"), "insert-range": ()}
9999 mem: location 1432 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1627
9999 mem: incrementing refcount of 1453: 31 -> 32
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1627 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1628
9999 mem: incrementing refcount of 1457: 18 -> 19
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 32 -> 31
9999 mem: storing 1457 in location 1433
9999 mem: incrementing refcount of 1457: 19 -> 20
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1433 is 1457
9998 run: jump-unless fell through
 106 run: {end: ("address" "shared" "duplex-list" "character")} <- copy {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1433 is 1457
9999 mem: decrementing refcount of 1453: 31 -> 30
9999 mem: storing 1457 in location 1432
9999 mem: incrementing refcount of 1457: 20 -> 21
 106 run: jump {: "offset"}
9998 run: jumping to instruction 9
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {end: ("address" "shared" "duplex-list" "character"), "insert-range": ()}
9999 mem: location 1432 is 1457
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1627
9999 mem: incrementing refcount of 1457: 21 -> 22
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1457
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1627 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1628
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 22 -> 21
9999 mem: storing 0 in location 1433
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 13
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1430 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1627
9999 mem: incrementing refcount of 1159: 33 -> 34
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1627 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1628
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1433
 106 run: {end: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {end: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1433 is 0
9999 mem: location 1432 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy to is 1459
9999 mem: storing 0 in location 1459
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 19
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1430 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1431 is 1434
9999 mem: location 1430 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy to is 1161
9999 mem: storing 1434 in location 1161
 106 run: {start: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 0
9999 mem: location 1430 is 1159
9999 mem: location 1431 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1437
9999 mem: storing 1159 in location 1437
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1430 is 1159
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1443
9998 run: its type is "number"
9999 mem: location 1443 is 1
9999 mem: location 1322 is 1148
9999 mem: storing 1 in location 1148
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1444
9998 run: its type is "number"
9999 mem: location 1444 is 3
9999 mem: location 1323 is 1149
9999 mem: storing 3 in location 1149
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1334
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1336 is 1440
9999 mem: location 1440 is 1
9999 mem: location 1441 is 0
9999 mem: location 1442 is 1159
9999 mem: location 1443 is 1
9999 mem: location 1444 is 3
9999 mem: location 1445 is 1159
9999 mem: location 1446 is 1434
9999 mem: location 1447 is 0
9999 mem: location 1448 is 1
9999 mem: location 1336 is 1440
9998 run: address to copy is 1445
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1445 is 1159
9999 mem: location 1334 is 1142
9999 mem: decrementing refcount of 1159: 34 -> 33
9999 mem: storing 1159 in location 1142
9999 mem: incrementing refcount of 1159: 33 -> 34
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 294 -> 293
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 293 -> 294
9999 mem: decrementing refcount of 1140: 34 -> 33
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 33 -> 34
9999 mem: storing 1 in location 1306
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 294 -> 295
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1120
9999 mem: incrementing refcount of 1140: 34 -> 35
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1173
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 295 -> 296
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 35 -> 36
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1627
9999 mem: incrementing refcount of 1008: 296 -> 297
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1627 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1628
 107 run: return {height: "number"}
9999 mem: location 1628 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 34 -> 35
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 35 -> 36
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1627
9999 mem: incrementing refcount of 1159: 36 -> 37
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1627 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1628
9999 mem: incrementing refcount of 1434: 33 -> 34
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 37 -> 36
9999 mem: storing 1434 in location 1181
9999 mem: incrementing refcount of 1434: 34 -> 35
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 297 -> 298
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 298 -> 297
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 297 -> 298
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1434
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1435
9998 run: its type is "character"
9999 mem: location 1435 is 97
9999 mem: storing 97 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 97
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 97
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 298 -> 299
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 168 -> 169
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 32
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 97
9999 mem: location 1231 is 1036
9999 mem: storing 97 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1627
9999 mem: incrementing refcount of 1434: 35 -> 36
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1627 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1628
9999 mem: incrementing refcount of 1453: 30 -> 31
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 36 -> 35
9999 mem: storing 1453 in location 1181
9999 mem: incrementing refcount of 1453: 31 -> 32
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1627
9999 mem: incrementing refcount of 1159: 36 -> 37
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1627 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1628
9999 mem: incrementing refcount of 1434: 35 -> 36
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 37 -> 36
9999 mem: storing 1434 in location 1182
9999 mem: incrementing refcount of 1434: 36 -> 37
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1453
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1454
9998 run: its type is "character"
9999 mem: location 1454 is 98
9999 mem: storing 98 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 98
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 98
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 299 -> 300
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
9990 schedule: print/render/editor-render/editor-event-loop/run_1004/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 169 -> 170
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 32
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1038
9999 mem: storing 98 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1627
9999 mem: incrementing refcount of 1453: 32 -> 33
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1627 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1628
9999 mem: incrementing refcount of 1457: 21 -> 22
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 33 -> 32
9999 mem: storing 1457 in location 1181
9999 mem: incrementing refcount of 1457: 22 -> 23
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1627
9999 mem: incrementing refcount of 1434: 37 -> 38
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1627 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1628
9999 mem: incrementing refcount of 1453: 32 -> 33
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 38 -> 37
9999 mem: storing 1453 in location 1182
9999 mem: incrementing refcount of 1453: 33 -> 34
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1457
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is "character"
9999 mem: location 1458 is 99
9999 mem: storing 99 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 300 -> 301
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 170 -> 171
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 32
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1040
9999 mem: storing 99 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1457
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1627
9999 mem: incrementing refcount of 1457: 23 -> 24
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1457
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1627 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1628
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 24 -> 23
9999 mem: storing 0 in location 1181
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1627
9999 mem: incrementing refcount of 1453: 34 -> 35
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1627 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1627 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1627 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1628
9999 mem: incrementing refcount of 1457: 23 -> 24
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1628 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 35 -> 34
9999 mem: storing 1457 in location 1182
9999 mem: incrementing refcount of 1457: 24 -> 25
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1159
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 1 in location 1198
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 1
9999 mem: storing 1 in location 1199
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 1
9999 mem: location 1200 is 0
9999 mem: storing 1 in location 1201
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 1
9998 run: jump-unless fell through
 106 run: {cursor-row: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: storing 1 in location 1148
 106 run: {cursor-column: ("address" "number"), "lookup": ()} <- copy {column: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1149
9999 mem: storing 3 in location 1149
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1457
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1159: 36 -> 35
9999 mem: storing 1457 in location 1144
9999 mem: incrementing refcount of 1457: 25 -> 26
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 3
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 3
9999 mem: storing 1 in location 1123
9999 mem: storing 3 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 3
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 301 -> 302
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 302 -> 303
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 171 -> 172
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 303 -> 302
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 302 -> 303
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 303 -> 304
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 172 -> 173
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 14
9999 mem: storing 1044 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 304 -> 303
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 303 -> 304
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 304 -> 305
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 173 -> 174
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 15
9999 mem: storing 1046 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 305 -> 304
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 304 -> 305
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 305 -> 306
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 174 -> 175
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 16
9999 mem: storing 1048 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 306 -> 305
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 305 -> 306
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 306 -> 307
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 175 -> 176
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 17
9999 mem: storing 1050 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 307 -> 306
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 306 -> 307
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 307 -> 308
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 176 -> 177
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 18
9999 mem: storing 1052 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1052
9999 mem: storing 32 in location 1052
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1004/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 308 -> 307
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 307 -> 308
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 308 -> 309
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 177 -> 178
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 19
9999 mem: storing 1054 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 309 -> 308
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 308 -> 309
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 309 -> 310
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1239
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1240
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1241
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1242
9999 mem: storing 1 in location 1243
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1244
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1246
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1239 is 2
9999 mem: location 1240 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 310 -> 311
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 311 -> 310
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 310 -> 311
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 311 -> 312
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 178 -> 179
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 20
9999 mem: storing 1056 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1056
9999 mem: storing 9480 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1057
9999 mem: storing 245 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 312 -> 313
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 179 -> 180
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 21
9999 mem: storing 1058 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1058
9999 mem: storing 9480 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1059
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 313 -> 314
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 180 -> 181
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 22
9999 mem: storing 1060 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1060
9999 mem: storing 9480 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1061
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 314 -> 315
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 181 -> 182
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 23
9999 mem: storing 1062 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1062
9999 mem: storing 9480 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1063
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 315 -> 316
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 182 -> 183
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 24
9999 mem: storing 1064 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1064
9999 mem: storing 9480 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1065
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 316 -> 317
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 183 -> 184
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 25
9999 mem: storing 1066 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1066
9999 mem: storing 9480 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1067
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 6
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 317 -> 318
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 184 -> 185
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 26
9999 mem: storing 1068 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1068
9999 mem: storing 9480 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1069
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 6
9999 mem: storing 7 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 7
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 318 -> 319
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1004/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 185 -> 186
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 27
9999 mem: storing 1070 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1070
9999 mem: storing 9480 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1071
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 7
9999 mem: storing 8 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 8
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 319 -> 320
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 186 -> 187
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 28
9999 mem: storing 1072 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1072
9999 mem: storing 9480 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1073
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 8
9999 mem: storing 9 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 320 -> 321
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 187 -> 188
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 29
9999 mem: storing 1074 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1074
9999 mem: storing 9480 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1075
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 9
9999 mem: storing 10 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 10
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1238 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 321 -> 322
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 322 -> 323
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 323 -> 322
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 322 -> 323
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 323 -> 324
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 324 -> 325
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 188 -> 189
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 30
9999 mem: storing 1076 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1076
9999 mem: storing 32 in location 1076
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1077
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 325 -> 324
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 324 -> 325
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 325 -> 326
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 189 -> 190
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 31
9999 mem: storing 1078 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1078
9999 mem: storing 32 in location 1078
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1079
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 326 -> 325
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 325 -> 326
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 326 -> 327
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 190 -> 191
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 32
9999 mem: storing 1080 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1080
9999 mem: storing 32 in location 1080
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1081
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 327 -> 326
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 326 -> 327
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 327 -> 328
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 191 -> 192
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 33
9999 mem: storing 1082 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 328 -> 327
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 327 -> 328
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 328 -> 329
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 192 -> 193
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 34
9999 mem: storing 1084 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1084
9999 mem: storing 32 in location 1084
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1085
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 329 -> 328
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 328 -> 329
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 329 -> 330
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1004/scenario_editor-separates-undo-insert-from-undo-cursor-move
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 193 -> 194
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 35
9999 mem: storing 1086 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1086
9999 mem: storing 32 in location 1086
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1087
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 330 -> 329
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 329 -> 330
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 330 -> 331
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 194 -> 195
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 36
9999 mem: storing 1088 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1088
9999 mem: storing 32 in location 1088
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1089
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 331 -> 330
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 330 -> 331
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 331 -> 332
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 195 -> 196
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 37
9999 mem: storing 1090 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1090
9999 mem: storing 32 in location 1090
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1091
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 332 -> 331
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 331 -> 332
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 332 -> 333
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 196 -> 197
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 38
9999 mem: storing 1092 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1092
9999 mem: storing 32 in location 1092
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1093
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 333 -> 332
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 332 -> 333
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 333 -> 334
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 197 -> 198
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 39
9999 mem: storing 1094 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1094
9999 mem: storing 32 in location 1094
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1095
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 334 -> 333
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 333 -> 334
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 334 -> 335
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 335 -> 336
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 336 -> 335
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 335 -> 336
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1627
9999 mem: incrementing refcount of 1008: 336 -> 337
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1627 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1627 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1628
 108 run: return {height: "number"}
9999 mem: location 1628 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 337 -> 338
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 338 -> 337
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 337 -> 338
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 338 -> 339
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 339 -> 340
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 198 -> 199
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 40
9999 mem: storing 1096 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1096
9999 mem: storing 32 in location 1096
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1097
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 340 -> 339
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 339 -> 340
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 340 -> 341
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 199 -> 200
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 41
9999 mem: storing 1098 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1098
9999 mem: storing 32 in location 1098
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1099
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 341 -> 340
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 340 -> 341
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 341 -> 342
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 200 -> 201
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 42
9999 mem: storing 1100 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1100
9999 mem: storing 32 in location 1100
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1101
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 342 -> 341
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 341 -> 342
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 342 -> 343
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 201 -> 202
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1004/scenario_editor-separates-undo-insert-from-undo-cursor-move
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 43
9999 mem: storing 1102 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1102
9999 mem: storing 32 in location 1102
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1103
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 343 -> 342
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 342 -> 343
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 343 -> 344
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 202 -> 203
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 44
9999 mem: storing 1104 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1104
9999 mem: storing 32 in location 1104
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1105
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 344 -> 343
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 343 -> 344
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 344 -> 345
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 203 -> 204
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 45
9999 mem: storing 1106 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1106
9999 mem: storing 32 in location 1106
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1107
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 345 -> 344
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 344 -> 345
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 345 -> 346
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 204 -> 205
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 46
9999 mem: storing 1108 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1108
9999 mem: storing 32 in location 1108
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1109
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 346 -> 345
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 345 -> 346
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 346 -> 347
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 205 -> 206
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 47
9999 mem: storing 1110 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1110
9999 mem: storing 32 in location 1110
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1111
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 347 -> 346
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 346 -> 347
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 347 -> 348
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 206 -> 207
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 48
9999 mem: storing 1112 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1112
9999 mem: storing 32 in location 1112
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1113
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 348 -> 347
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 347 -> 348
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 348 -> 349
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 207 -> 208
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 49
9999 mem: storing 1114 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1114
9999 mem: storing 32 in location 1114
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1115
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 349 -> 348
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 348 -> 349
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 349 -> 348
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 348 -> 349
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 349 -> 350
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 350 -> 349
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 349 -> 350
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1621
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1621 in location 1238
9999 mem: incrementing refcount of 1621: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1621
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 1
9999 mem: location 1623 is 1615
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9998 run: address to copy is 1622
9999 mem: storing 1622 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9999 mem: location 1622 is 1
9999 mem: location 1623 is 1615
9999 mem: location 1238 is 1621
9999 mem: skipping refcount at 1621
9998 run: address to copy is 1623
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1623 is 1615
9999 mem: storing 1615 in location 1240
9999 mem: incrementing refcount of 1615: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1615
9999 mem: skipping refcount at 1615
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1622
9999 mem: location 1622 is 1
9999 mem: location 1241 is 1
9999 mem: storing 1 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1624
9999 mem: storing 1624 in location 1243
9999 mem: incrementing refcount of 1624: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1243 is 1624
9999 mem: skipping refcount at 1624
9999 mem: location 1625 is 0
9999 mem: location 1626 is 0
9999 mem: location 1627 is 0
9999 mem: location 1628 is 0
9999 mem: location 1238 is 1621
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1621
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1621: 3 -> 2
9999 mem: storing 1621 in location 1295
9999 mem: incrementing refcount of 1621: 2 -> 3
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 1621
9999 mem: location 1296 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 3\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console {"\n    press ctrl-y\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-y: ()}
9992 load: after rewriting: press {ctrl-y: ()}
9999 mem: storing 'press' event starting at 1634
9999 mem: storing console in 1638
9999 mem: storing console data in 1640
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1005
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1005 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1005
9991 transform: --- rewrite 'stash' instructions in recipe run_1005
9991 transform: --- fill in reply ingredients from header for recipe run_1005
9991 transform: --- deduce types for recipe run_1005
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1005
9991 transform: --- collect surrounding spaces for recipe run_1005
9991 transform: --- transform names for recipe run_1005
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1005
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1005
9991 transform: --- transform braces for recipe run_1005
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1005
9991 transform: --- perform checks for recipe run_1005
9991 transform: --- type-check 'call' instructions inside recipe run_1005
9991 transform: --- type-check calls inside recipe run_1005
9991 transform: --- convert 'new' to 'allocate' for recipe run_1005
9991 transform: --- type-check merge instructions in recipe run_1005
9991 transform: --- check types of reply instructions in recipe run_1005
9991 transform: --- checking reply instructions against header for run_1005
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1638
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1291
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 350 -> 351
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1638 in location 1295
9999 mem: incrementing refcount of 1638: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 36 -> 37
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 3
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 351 -> 352
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 3
9999 mem: location 1007 is 1012
9999 mem: storing 3 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 352 -> 351
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 351 -> 352
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1638
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1638 in location 1238
9999 mem: incrementing refcount of 1638: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1638
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9999 mem: location 1639 is 0
9999 mem: location 1640 is 1632
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9998 run: address to copy is 1639
9999 mem: storing 1639 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9999 mem: location 1639 is 0
9999 mem: location 1640 is 1632
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9998 run: address to copy is 1640
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1640 is 1632
9999 mem: storing 1632 in location 1240
9999 mem: incrementing refcount of 1632: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1632
9999 mem: skipping refcount at 1632
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1639
9999 mem: location 1639 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1632
9999 mem: skipping refcount at 1632
9998 run: base address is 1633
9999 mem: location 1239 is 1639
9999 mem: location 1639 is 0
9998 run: address to copy is 1634
9998 run: its type is event
9999 mem: location 1634 is 0
9999 mem: location 1635 is 25
9999 mem: location 1636 is 0
9999 mem: location 1637 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 25 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1639
9999 mem: location 1639 is 0
9999 mem: location 1239 is 1639
9999 mem: storing 1 in location 1639
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 25
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1638
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 25, 0, 0]
9998 run: result 1 is 1638
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 25 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1638: 2 -> 1
9999 mem: storing 1638 in location 1295
9999 mem: incrementing refcount of 1638: 1 -> 2
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 25
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 25
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 352 -> 353
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 37 -> 38
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 25 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1641
9999 mem: storing 3 in location 1642
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1644
9999 mem: incrementing refcount of 1008: 353 -> 354
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1644 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1645
 106 run: return {width: "number"}
9999 mem: location 1645 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1644
9999 mem: incrementing refcount of 1008: 354 -> 355
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1644 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1645
 106 run: return {height: "number"}
9999 mem: location 1645 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 3
9999 mem: storing 3 in location 1325
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 25
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 25
9999 mem: storing 1 in location 1327
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1595
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1328
 105 run: jump-unless {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1595
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1595
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1595 in location 1644
9999 mem: incrementing refcount of 1595: 4 -> 5
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1644 is 1595
9999 mem: skipping refcount at 1595
9999 mem: location 1596 is 1518
9999 mem: location 1597 is 1566
9999 mem: location 1644 is 1595
9999 mem: skipping refcount at 1595
9998 run: address to copy is 1596
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1596 is 1518
9999 mem: storing 1518 in location 1645
9999 mem: incrementing refcount of 1518: 7 -> 8
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1645 is 1518
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1518
9999 mem: storing 1518 in location 1329
9999 mem: incrementing refcount of 1518: 8 -> 9
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1595
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1595 in location 1644
9999 mem: incrementing refcount of 1595: 5 -> 6
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1595
9999 mem: skipping refcount at 1595
9999 mem: location 1596 is 1518
9999 mem: location 1597 is 1566
9999 mem: location 1644 is 1595
9999 mem: skipping refcount at 1595
9998 run: address to copy is 1597
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1597 is 1566
9999 mem: storing 1566 in location 1645
9999 mem: incrementing refcount of 1566: 2 -> 3
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1645 is 1566
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1566
9999 mem: location 1328 is 1152
9999 mem: decrementing refcount of 1595: 6 -> 5
9999 mem: storing 1566 in location 1152
9999 mem: incrementing refcount of 1566: 3 -> 4
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 3
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1629
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1329 is 1518
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1629
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1518 in location 1156
9999 mem: incrementing refcount of 1518: 9 -> 10
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1629 in location 1157
9999 mem: incrementing refcount of 1629: 2 -> 3
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1646
9999 mem: storing 1646 in location 1158
9999 mem: incrementing refcount of 1646: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1518
9999 mem: location 1157 is 1629
9999 mem: location 1158 is 1646
9999 mem: skipping refcount at 1646
9999 mem: location 1158 is 1646
9999 mem: skipping refcount at 1646
9999 mem: storing 1518 in location 1647
9999 mem: storing 1629 in location 1648
9990 schedule: push_4/handle-keyboard-event/editor-event-loop/run_1005/scenario_editor-separates-undo-insert-from-undo-cursor-move
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1646
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1646
9999 mem: location 1330 is 1151
9999 mem: decrementing refcount of 1629: 3 -> 2
9999 mem: storing 1646 in location 1151
9999 mem: incrementing refcount of 1646: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 0 in location 1331
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 41
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 1520 in location 1335
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1335 is 1520
9998 run: jump-unless fell through
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1335 is 1520
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1335 is 1520
9998 run: address to copy is 1523
9998 run: its type is "number"
9999 mem: location 1523 is 1
9999 mem: location 1322 is 1148
9999 mem: storing 1 in location 1148
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1335 is 1520
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1335 is 1520
9998 run: address to copy is 1524
9998 run: its type is "number"
9999 mem: location 1524 is 1
9999 mem: location 1323 is 1149
9999 mem: storing 1 in location 1149
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1334
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {move: ("address" "move-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1335 is 1520
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1335 is 1520
9998 run: address to copy is 1525
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1525 is 1159
9999 mem: location 1334 is 1142
9999 mem: decrementing refcount of 1159: 35 -> 34
9999 mem: storing 1159 in location 1142
9999 mem: incrementing refcount of 1159: 34 -> 35
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: location 1519 is 1
9999 mem: location 1520 is 1
9999 mem: location 1521 is 3
9999 mem: location 1522 is 1159
9999 mem: location 1523 is 1
9999 mem: location 1524 is 1
9999 mem: location 1525 is 1159
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1528 is 0
9999 mem: location 1529 is 0
9999 mem: location 1329 is 1518
9999 mem: skipping refcount at 1518
9999 mem: storing 0 in location 1336
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 0
9998 run: jumping to instruction 59
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 355 -> 354
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 354 -> 355
9999 mem: decrementing refcount of 1140: 38 -> 37
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 37 -> 38
9999 mem: storing 1 in location 1306
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 355 -> 356
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1120
9999 mem: incrementing refcount of 1140: 38 -> 39
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1173
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 356 -> 357
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 39 -> 40
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1644
9999 mem: incrementing refcount of 1008: 357 -> 358
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1644 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1645
 107 run: return {height: "number"}
9999 mem: location 1645 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 35 -> 36
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 36 -> 37
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1644
9999 mem: incrementing refcount of 1159: 37 -> 38
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1644 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1644 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1645
9999 mem: incrementing refcount of 1434: 37 -> 38
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1645 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 38 -> 37
9999 mem: storing 1434 in location 1181
9999 mem: incrementing refcount of 1434: 38 -> 39
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1457
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 358 -> 359
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 359 -> 358
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 358 -> 359
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1434
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1435
9998 run: its type is "character"
9999 mem: location 1435 is 97
9999 mem: storing 97 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 97
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 97
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 359 -> 360
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 208 -> 209
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 97
9999 mem: location 1231 is 1036
9999 mem: storing 97 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1644
9999 mem: incrementing refcount of 1434: 39 -> 40
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1644 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1644 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1645
9999 mem: incrementing refcount of 1453: 34 -> 35
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1645 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 40 -> 39
9999 mem: storing 1453 in location 1181
9999 mem: incrementing refcount of 1453: 35 -> 36
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1644
9999 mem: incrementing refcount of 1159: 37 -> 38
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1644 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1644 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1645
9999 mem: incrementing refcount of 1434: 39 -> 40
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1645 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 38 -> 37
9999 mem: storing 1434 in location 1182
9999 mem: incrementing refcount of 1434: 40 -> 41
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1453
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1434
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1457: 26 -> 25
9999 mem: storing 1434 in location 1144
9999 mem: incrementing refcount of 1434: 41 -> 42
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1454
9998 run: its type is "character"
9999 mem: location 1454 is 98
9999 mem: storing 98 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 98
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 98
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 360 -> 361
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 209 -> 210
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1038
9999 mem: storing 98 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1644
9999 mem: incrementing refcount of 1453: 36 -> 37
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1644 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1644 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1645
9999 mem: incrementing refcount of 1457: 25 -> 26
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1645 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 37 -> 36
9999 mem: storing 1457 in location 1181
9999 mem: incrementing refcount of 1457: 26 -> 27
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1644
9999 mem: incrementing refcount of 1434: 42 -> 43
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1644 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1644 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1645
9999 mem: incrementing refcount of 1453: 36 -> 37
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1645 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1434: 43 -> 42
9999 mem: storing 1453 in location 1182
9999 mem: incrementing refcount of 1453: 37 -> 38
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1457
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is "character"
9999 mem: location 1458 is 99
9999 mem: storing 99 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 361 -> 362
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 210 -> 211
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1040
9999 mem: storing 99 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1457
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1644
9999 mem: incrementing refcount of 1457: 27 -> 28
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1644 is 1457
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1644 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1645
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1645 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 28 -> 27
9999 mem: storing 0 in location 1181
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1644
9999 mem: incrementing refcount of 1453: 38 -> 39
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1644 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1644 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1644 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1645
9999 mem: incrementing refcount of 1457: 27 -> 28
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1645 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 39 -> 38
9999 mem: storing 1457 in location 1182
9999 mem: incrementing refcount of 1457: 28 -> 29
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 0 in location 1198
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1199
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 3
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 3
9999 mem: storing 1 in location 1123
9999 mem: storing 3 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 3
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 362 -> 363
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1167
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 363 -> 364
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 211 -> 212
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1042
9999 mem: storing 32 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 364 -> 363
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 363 -> 364
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 364 -> 365
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1005/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 212 -> 213
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 14
9999 mem: storing 1044 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 365 -> 364
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 364 -> 365
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 365 -> 366
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 213 -> 214
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 15
9999 mem: storing 1046 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 366 -> 365
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 365 -> 366
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 366 -> 367
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 214 -> 215
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 16
9999 mem: storing 1048 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 367 -> 366
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 366 -> 367
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 367 -> 368
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 215 -> 216
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 17
9999 mem: storing 1050 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 368 -> 367
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 367 -> 368
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 368 -> 369
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 216 -> 217
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 18
9999 mem: storing 1052 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 369 -> 368
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 368 -> 369
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 369 -> 370
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 217 -> 218
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 19
9999 mem: storing 1054 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 370 -> 369
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 369 -> 370
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 370 -> 371
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1239
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1240
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1241
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1242
9999 mem: storing 1 in location 1243
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1244
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1246
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1239 is 2
9999 mem: location 1240 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 371 -> 372
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 372 -> 371
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 371 -> 372
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 372 -> 373
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 218 -> 219
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 20
9999 mem: storing 1056 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1056
9999 mem: storing 9480 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1057
9999 mem: storing 245 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 373 -> 374
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 219 -> 220
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 21
9999 mem: storing 1058 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1058
9999 mem: storing 9480 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1059
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 374 -> 375
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 220 -> 221
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1005/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 22
9999 mem: storing 1060 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1060
9999 mem: storing 9480 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1061
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 375 -> 376
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 221 -> 222
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 23
9999 mem: storing 1062 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1062
9999 mem: storing 9480 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1063
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 376 -> 377
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 222 -> 223
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 24
9999 mem: storing 1064 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1064
9999 mem: storing 9480 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1065
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 377 -> 378
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 223 -> 224
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 25
9999 mem: storing 1066 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1066
9999 mem: storing 9480 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1067
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 6
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 378 -> 379
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 224 -> 225
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 26
9999 mem: storing 1068 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1068
9999 mem: storing 9480 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1069
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 6
9999 mem: storing 7 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 7
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 379 -> 380
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 225 -> 226
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 27
9999 mem: storing 1070 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1070
9999 mem: storing 9480 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1071
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 7
9999 mem: storing 8 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 8
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 380 -> 381
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 226 -> 227
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 28
9999 mem: storing 1072 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1072
9999 mem: storing 9480 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1073
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 8
9999 mem: storing 9 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 381 -> 382
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 227 -> 228
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 29
9999 mem: storing 1074 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1074
9999 mem: storing 9480 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1075
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 9
9999 mem: storing 10 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 10
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1238 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 382 -> 383
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 383 -> 384
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 384 -> 383
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 383 -> 384
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 384 -> 385
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 385 -> 386
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 228 -> 229
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 30
9999 mem: storing 1076 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1076
9999 mem: storing 32 in location 1076
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1077
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 386 -> 385
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 385 -> 386
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
9990 schedule: print/clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1005/scenario_editor-separates-undo-insert-from-undo-cursor-move
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 386 -> 387
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 229 -> 230
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 31
9999 mem: storing 1078 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1078
9999 mem: storing 32 in location 1078
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1079
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 387 -> 386
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 386 -> 387
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 387 -> 388
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 230 -> 231
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 32
9999 mem: storing 1080 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1080
9999 mem: storing 32 in location 1080
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1081
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 388 -> 387
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 387 -> 388
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 388 -> 389
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 231 -> 232
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 33
9999 mem: storing 1082 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 389 -> 388
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 388 -> 389
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 389 -> 390
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 232 -> 233
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 34
9999 mem: storing 1084 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1084
9999 mem: storing 32 in location 1084
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1085
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 390 -> 389
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 389 -> 390
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 390 -> 391
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 233 -> 234
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 35
9999 mem: storing 1086 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1086
9999 mem: storing 32 in location 1086
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1087
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 391 -> 390
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 390 -> 391
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 391 -> 392
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 234 -> 235
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 36
9999 mem: storing 1088 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1088
9999 mem: storing 32 in location 1088
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1089
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 392 -> 391
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 391 -> 392
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 392 -> 393
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 235 -> 236
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 37
9999 mem: storing 1090 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1090
9999 mem: storing 32 in location 1090
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1091
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 393 -> 392
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 392 -> 393
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 393 -> 394
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 236 -> 237
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 38
9999 mem: storing 1092 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1092
9999 mem: storing 32 in location 1092
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1093
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 394 -> 393
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 393 -> 394
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 394 -> 395
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 237 -> 238
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 39
9999 mem: storing 1094 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1094
9999 mem: storing 32 in location 1094
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1095
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 395 -> 394
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 394 -> 395
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 395 -> 396
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
9990 schedule: clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1005/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 396 -> 397
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 397 -> 396
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 396 -> 397
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1644
9999 mem: incrementing refcount of 1008: 397 -> 398
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1644 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1644 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1645
 108 run: return {height: "number"}
9999 mem: location 1645 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 398 -> 399
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 399 -> 398
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 398 -> 399
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 399 -> 400
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 400 -> 401
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 238 -> 239
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 40
9999 mem: storing 1096 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1096
9999 mem: storing 32 in location 1096
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1097
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 401 -> 400
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 400 -> 401
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 401 -> 402
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 239 -> 240
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 41
9999 mem: storing 1098 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1098
9999 mem: storing 32 in location 1098
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1099
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 402 -> 401
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 401 -> 402
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 402 -> 403
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 240 -> 241
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 42
9999 mem: storing 1100 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1100
9999 mem: storing 32 in location 1100
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1101
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 403 -> 402
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 402 -> 403
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 403 -> 404
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 241 -> 242
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 43
9999 mem: storing 1102 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1102
9999 mem: storing 32 in location 1102
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1103
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 404 -> 403
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 403 -> 404
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 404 -> 405
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 242 -> 243
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 44
9999 mem: storing 1104 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1104
9999 mem: storing 32 in location 1104
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1105
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 405 -> 404
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 404 -> 405
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 405 -> 406
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 243 -> 244
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 45
9999 mem: storing 1106 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1106
9999 mem: storing 32 in location 1106
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1107
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 406 -> 405
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 405 -> 406
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 406 -> 407
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 244 -> 245
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 46
9999 mem: storing 1108 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1108
9999 mem: storing 32 in location 1108
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1109
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 407 -> 406
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 406 -> 407
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 407 -> 408
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 245 -> 246
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 47
9999 mem: storing 1110 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1110
9999 mem: storing 32 in location 1110
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1111
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 408 -> 407
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 407 -> 408
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 408 -> 409
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1005/scenario_editor-separates-undo-insert-from-undo-cursor-move
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 246 -> 247
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 48
9999 mem: storing 1112 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1112
9999 mem: storing 32 in location 1112
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1113
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 409 -> 408
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 408 -> 409
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 409 -> 410
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 247 -> 248
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 49
9999 mem: storing 1114 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1114
9999 mem: storing 32 in location 1114
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1115
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 410 -> 409
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 409 -> 410
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 410 -> 409
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 409 -> 410
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 410 -> 411
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 411 -> 410
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 410 -> 411
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1638
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1638 in location 1238
9999 mem: incrementing refcount of 1638: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1638
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1632
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9998 run: address to copy is 1639
9999 mem: storing 1639 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9999 mem: location 1639 is 1
9999 mem: location 1640 is 1632
9999 mem: location 1238 is 1638
9999 mem: skipping refcount at 1638
9998 run: address to copy is 1640
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1640 is 1632
9999 mem: storing 1632 in location 1240
9999 mem: incrementing refcount of 1632: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1632
9999 mem: skipping refcount at 1632
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1639
9999 mem: location 1639 is 1
9999 mem: location 1241 is 1
9999 mem: storing 1 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1641
9999 mem: storing 1641 in location 1243
9999 mem: incrementing refcount of 1641: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1243 is 1641
9999 mem: skipping refcount at 1641
9999 mem: location 1642 is 0
9999 mem: location 1643 is 0
9999 mem: location 1644 is 0
9999 mem: location 1645 is 0
9999 mem: location 1238 is 1638
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1638
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1638: 3 -> 2
9999 mem: storing 1638 in location 1295
9999 mem: incrementing refcount of 1638: 2 -> 3
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 1638
9999 mem: location 1296 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .abc       .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 1\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: assume-console {"\n    press ctrl-y\n  ": "literal-string"}
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {ctrl-y: ()}
9992 load: after rewriting: press {ctrl-y: ()}
9999 mem: storing 'press' event starting at 1651
9999 mem: storing console in 1655
9999 mem: storing console data in 1657
 102 run: run {"\n    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data\n    3:number <- get *2:address:shared:editor-data, cursor-row:offset\n    4:number <- get *2:address:shared:editor-data, cursor-column:offset\n  ": "literal-string"}
9991 parse: --- defining run_1006
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {screen: ("address" "shared" "screen")}
9993 parse:   ingredient: {console: ("address" "shared" "console")}
9993 parse:   ingredient: {2: ("address" "shared" "editor-data")}
9992 load: after rewriting: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-row: "offset"}
9993 parse:   product: {3: "number"}
9992 load: after rewriting: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {2: ("address" "shared" "editor-data"), "lookup": ()}
9993 parse:   ingredient: {cursor-column: "offset"}
9993 parse:   product: {4: "number"}
9992 load: after rewriting: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 parse: recipe run_1006 has a header
9990 transform: === transform_all()
9991 transform: --- rewrite literal strings in recipe run_1006
9991 transform: --- rewrite 'stash' instructions in recipe run_1006
9991 transform: --- fill in reply ingredients from header for recipe run_1006
9991 transform: --- deduce types for recipe run_1006
9992 transform: screen => ("address" "shared" "screen")
9992 transform: console => ("address" "shared" "console")
9991 transform: --- check for invalid types in recipe run_1006
9991 transform: --- collect surrounding spaces for recipe run_1006
9991 transform: --- transform names for recipe run_1006
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1006
9992 transform: instruction editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9992 transform: checking variant (strict) 0: recipe editor-event-loop {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")} -> {screen: ("address" "shared" "screen")} {console: ("address" "shared" "console")} {editor: ("address" "shared" "editor-data")}
9991 transform: --- compute instruction operations for recipe run_1006
9991 transform: --- transform braces for recipe run_1006
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- check mutability of ingredients in recipe run_1006
9991 transform: --- perform checks for recipe run_1006
9991 transform: --- type-check 'call' instructions inside recipe run_1006
9991 transform: --- type-check calls inside recipe run_1006
9991 transform: --- convert 'new' to 'allocate' for recipe run_1006
9991 transform: --- type-check merge instructions in recipe run_1006
9991 transform: --- check types of reply instructions in recipe run_1006
9991 transform: --- checking reply instructions against header for run_1006
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop {screen: ("address" "shared" "screen")}, {console: ("address" "shared" "console")}, {2: ("address" "shared" "editor-data")}
9999 mem: location 900 is 1008
9999 mem: location 901 is 1655
9999 mem: location 2 is 1140
9999 trace: incrementing callstack depth to 3
 104 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
9999 mem: new alloc from free list: 1291
 104 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 411 -> 412
 104 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1655 in location 1295
9999 mem: incrementing refcount of 1655: 0 -> 1
 104 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 40 -> 41
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 1
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 412 -> 413
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 1
9999 mem: location 1007 is 1012
9999 mem: storing 1 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 413 -> 412
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 412 -> 413
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1655
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1655 in location 1238
9999 mem: incrementing refcount of 1655: 1 -> 2
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1655
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9999 mem: location 1656 is 0
9999 mem: location 1657 is 1649
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9998 run: address to copy is 1656
9999 mem: storing 1656 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9999 mem: location 1656 is 0
9999 mem: location 1657 is 1649
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9998 run: address to copy is 1657
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1657 is 1649
9999 mem: storing 1649 in location 1240
9999 mem: incrementing refcount of 1649: 1 -> 2
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1649
9999 mem: skipping refcount at 1649
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1656
9999 mem: location 1656 is 0
9999 mem: location 1241 is 1
9999 mem: storing 0 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 0
9998 run: jumping to instruction 12
 105 run: {result: "event"} <- index {buf: ("address" "shared" "array" "event"), "lookup": ()}, {current-event-index: ("address" "number"), "lookup": ()}
9999 mem: location 1240 is 1649
9999 mem: skipping refcount at 1649
9998 run: base address is 1650
9999 mem: location 1239 is 1656
9999 mem: location 1656 is 0
9998 run: address to copy is 1651
9998 run: its type is event
9999 mem: location 1651 is 0
9999 mem: location 1652 is 25
9999 mem: location 1653 is 0
9999 mem: location 1654 is 0
9999 mem: storing 0 in location 1244
9999 mem: storing 25 in location 1245
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 105 run: {current-event-index: ("address" "number"), "lookup": ()} <- add {current-event-index: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1239 is 1656
9999 mem: location 1656 is 0
9999 mem: location 1239 is 1656
9999 mem: storing 1 in location 1656
 105 run: return {result: "event"}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {0: "literal", "quit": ()}
9999 mem: location 1244 is 0
9999 mem: location 1245 is 25
9999 mem: location 1246 is 0
9999 mem: location 1247 is 0
9999 mem: location 1238 is 1655
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 25, 0, 0]
9998 run: result 1 is 1655
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1299
9999 mem: storing 25 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1655: 2 -> 1
9999 mem: storing 1655 in location 1295
9999 mem: incrementing refcount of 1655: 1 -> 2
9999 mem: storing 1 in location 1303
9999 mem: storing 0 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 0
9998 run: jump-if fell through
 104 run: trace {10: "literal"}, {"app": "literal-string"}, {"next-event": "literal-string"}
  10 app: next-event 
 104 run: {t: ("address" "touch-event")} <- maybe-convert {e: "event"}, {touch: "variant"}
9999 mem: location 1299 is 0
9999 mem: location 1300 is 25
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 mem: storing 0 in location 1305
 104 run: jump-unless {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jumping to instruction 18
 104 run: jump-if {t: ("address" "touch-event")}, {: "offset"}
9999 mem: location 1305 is 0
9998 run: jump-if fell through
 104 run: {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {go-render?: "boolean"} <- handle-keyboard-event {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}, {e: "event"}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 mem: location 1299 is 0
9999 mem: location 1300 is 25
9999 mem: location 1301 is 0
9999 mem: location 1302 is 0
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
9999 mem: new alloc from free list: 1307
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1310
9999 mem: incrementing refcount of 1008: 413 -> 414
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1311
9999 mem: incrementing refcount of 1140: 41 -> 42
 105 run: {e: "event"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1312
9999 mem: storing 25 in location 1313
9999 mem: storing 0 in location 1314
9999 mem: storing 0 in location 1315
 105 run: {go-render?: "boolean"} <- copy {0: "literal", "false": ()}
9999 mem: storing 0 in location 1316
 105 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1311 is 1140
9998 run: jumping to instruction 7
 105 run: {screen-width: "number"} <- screen-width {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1658
9999 mem: storing 3 in location 1659
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1661
9999 mem: incrementing refcount of 1008: 414 -> 415
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1661 is 1008
9998 run: jump-unless fell through
 106 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1662
 106 run: return {width: "number"}
9999 mem: location 1662 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1317
 105 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1310 is 1008
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1661
9999 mem: incrementing refcount of 1008: 415 -> 416
 106 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1661 is 1008
9998 run: jump-unless fell through
 106 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1662
 106 run: return {height: "number"}
9999 mem: location 1662 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1318
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1319
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1320
 105 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1321
 105 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1322
 105 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1323
 105 run: {save-row: "number"} <- copy {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1322 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1324
 105 run: {save-column: "number"} <- copy {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1323 is 1149
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1325
 105 run: {c: ("address" "character")} <- maybe-convert {e: "event"}, {text: "variant"}
9999 mem: location 1312 is 0
9999 mem: location 1313 is 25
9999 mem: location 1314 is 0
9999 mem: location 1315 is 0
9999 mem: storing 1313 in location 1326
 105 run: jump-unless {c: ("address" "character")}, {: "offset"}
9999 mem: location 1326 is 1313
9998 run: jump-unless fell through
 105 run: trace {10: "literal"}, {"app": "literal-string"}, {"handle-keyboard-event: special character": "literal-string"}
  10 app: handle-keyboard-event: special character 
 105 run: {redo?: "boolean"} <- equal {c: ("address" "character"), "lookup": ()}, {25: "literal", "ctrl-y": ()}
9999 mem: location 1326 is 1313
9999 mem: location 1313 is 25
9999 mem: storing 1 in location 1327
 105 run: jump-unless {redo?: "boolean"}, {: "offset"}
9999 mem: location 1327 is 1
9998 run: jump-unless fell through
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {redo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 1566
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1152
9999 mem: storing 1152 in location 1328
 105 run: jump-unless {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {: "offset"}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1566
9998 run: jump-unless fell through
 105 run: {op: ("address" "shared" "operation")} <- first_3 {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1566
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1566 in location 1661
9999 mem: incrementing refcount of 1566: 4 -> 5
 106 run: {result: ("address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {value: "offset"}
9999 mem: location 1661 is 1566
9999 mem: skipping refcount at 1566
9999 mem: location 1567 is 1537
9999 mem: location 1568 is 0
9999 mem: location 1661 is 1566
9999 mem: skipping refcount at 1566
9998 run: address to copy is 1567
9998 run: its type is ("address" "shared" "operation")
9999 mem: location 1567 is 1537
9999 mem: storing 1537 in location 1662
9999 mem: incrementing refcount of 1537: 6 -> 7
 106 run: reply {result: ("address" "shared" "operation")}
9999 mem: location 1662 is 1537
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1537
9999 mem: storing 1537 in location 1329
9999 mem: incrementing refcount of 1537: 7 -> 8
 105 run: {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- rest_2 {redo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1328 is 1152
9999 mem: location 1152 is 1566
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1566 in location 1661
9999 mem: incrementing refcount of 1566: 5 -> 6
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- get {in: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1566
9999 mem: skipping refcount at 1566
9999 mem: location 1567 is 1537
9999 mem: location 1568 is 0
9999 mem: location 1661 is 1566
9999 mem: skipping refcount at 1566
9998 run: address to copy is 1568
9998 run: its type is ("address" "shared" "list" "address" "shared" "operation")
9999 mem: location 1568 is 0
9999 mem: storing 0 in location 1662
 106 run: reply {result: ("address" "shared" "list" "address" "shared" "operation"), "contained-in": "in"}
9999 mem: location 1662 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 0
9999 mem: location 1328 is 1152
9999 mem: decrementing refcount of 1566: 6 -> 5
9999 mem: storing 0 in location 1152
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {undo: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 1
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1646
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1151
9999 mem: storing 1151 in location 1330
 105 run: {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- push_4 {op: ("address" "shared" "operation")}, {undo: ("address" "address" "shared" "list" "address" "shared" "operation"), "lookup": ()}
9999 mem: location 1329 is 1537
9999 mem: location 1330 is 1151
9999 mem: location 1151 is 1646
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 4
9999 mem: allocating size 6
9999 abandon: picking up space from free-list of size 6
9999 mem: new alloc from free list: 1153
 106 run: {x: ("address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1156
9999 mem: incrementing refcount of 1537: 8 -> 9
 106 run: {in: ("address" "shared" "list" "address" "shared" "operation")} <- next-ingredient-without-typechecking 
9999 mem: storing 1646 in location 1157
9999 mem: incrementing refcount of 1646: 2 -> 3
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation")} <- new {(list address shared operation): "type"}
9999 mem: allocating size 3
9999 mem: new alloc: 1663
9999 mem: storing 1663 in location 1158
9999 mem: incrementing refcount of 1663: 0 -> 1
 106 run: {result: ("address" "shared" "list" "address" "shared" "operation"), "lookup": ()} <- merge {x: ("address" "shared" "operation")}, {in: ("address" "shared" "list" "address" "shared" "operation")}
9999 mem: location 1156 is 1537
9999 mem: location 1157 is 1646
9999 mem: location 1158 is 1663
9999 mem: skipping refcount at 1663
9999 mem: location 1158 is 1663
9999 mem: skipping refcount at 1663
9999 mem: storing 1537 in location 1664
9999 mem: storing 1646 in location 1665
 106 run: return {result: ("address" "shared" "list" "address" "shared" "operation"), "same-as-ingredient": "1"}
9999 mem: location 1158 is 1663
9999 abandon: saving in free-list of size 6
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1663
9999 mem: location 1330 is 1151
9999 mem: decrementing refcount of 1646: 3 -> 2
9999 mem: storing 1663 in location 1151
9999 mem: incrementing refcount of 1663: 1 -> 2
 105 run: {deletion: ("address" "delete-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {delete: "variant"}
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1548 is 0
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: storing 0 in location 1331
 105 run: jump-unless {deletion: ("address" "delete-operation")}, {: "offset"}
9999 mem: location 1331 is 0
9998 run: jumping to instruction 41
 105 run: {move: ("address" "move-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {move: "variant"}
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1548 is 0
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: storing 0 in location 1335
 105 run: jump-unless {move: ("address" "move-operation")}, {: "offset"}
9999 mem: location 1335 is 0
9998 run: jumping to instruction 49
 105 run: {typing: ("address" "insert-operation")} <- maybe-convert {op: ("address" "shared" "operation"), "lookup": ()}, {typing: "variant"}
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1548 is 0
9999 mem: location 1329 is 1537
9999 mem: skipping refcount at 1537
9999 mem: storing 1539 in location 1336
 105 run: jump-unless {typing: ("address" "insert-operation")}, {: "offset"}
9999 mem: location 1336 is 1539
9998 run: jump-unless fell through
 105 run: {insert-from: ("address" "shared" "duplex-list" "character")} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {insert-from: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1545
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1545 is 1533
9999 mem: storing 1533 in location 1337
9999 mem: incrementing refcount of 1533: 11 -> 12
 105 run: insert-range_2 {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()}, {insert-from: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1321 is 1144
9999 mem: location 1144 is 1434
9999 mem: location 1337 is 1533
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
9999 mem: new alloc from free list: 1427
 106 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1430
9999 mem: incrementing refcount of 1434: 42 -> 43
 106 run: {start: ("address" "shared" "duplex-list" "character"), "contained-in": "in"} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1431
9999 mem: incrementing refcount of 1533: 12 -> 13
 106 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1430 is 1434
9998 run: jumping to instruction 5
 106 run: jump-if {start: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1431 is 1533
9998 run: jumping to instruction 7
 106 run: {end: ("address" "shared" "duplex-list" "character")} <- copy {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1533
9999 mem: storing 1533 in location 1432
9999 mem: incrementing refcount of 1533: 13 -> 14
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {end: ("address" "shared" "duplex-list" "character"), "insert-range": ()}
9999 mem: location 1432 is 1533
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1661
9999 mem: incrementing refcount of 1533: 14 -> 15
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1533
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1661 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1535
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1535 is 0
9999 mem: storing 0 in location 1662
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1433
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1433 is 0
9998 run: jumping to instruction 13
 106 run: {next: ("address" "shared" "duplex-list" "character")} <- next_2 {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1430 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1661
9999 mem: incrementing refcount of 1434: 43 -> 44
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1661 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1453
9999 mem: storing 1453 in location 1662
9999 mem: incrementing refcount of 1453: 38 -> 39
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: storing 1453 in location 1433
9999 mem: incrementing refcount of 1453: 39 -> 40
 106 run: {end: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {end: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {next: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: location 1433 is 1453
9999 mem: location 1432 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy to is 1535
9999 mem: storing 1453 in location 1535
 106 run: jump-unless {next: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1433 is 1453
9998 run: jump-unless fell through
 106 run: {next: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {next: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {end: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1433 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1434
9999 mem: location 1432 is 1533
9999 mem: location 1433 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy to is 1456
9999 mem: storing 1533 in location 1456
 106 run: {in: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}, {start: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1430 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1453
9999 mem: location 1437 is 1159
9999 mem: location 1431 is 1533
9999 mem: location 1430 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy to is 1436
9999 mem: storing 1533 in location 1436
 106 run: {start: ("address" "shared" "duplex-list" "character"), "lookup": ()} <- put {start: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {prev: "offset"}, {in: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1431 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 0
9999 mem: location 1430 is 1434
9999 mem: location 1431 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy to is 1536
9999 mem: storing 1434 in location 1536
 106 run: reply {in: ("address" "shared" "duplex-list" "character"), "same-as-ingredient": "0"}
9999 mem: location 1430 is 1434
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
 105 run: {cursor-row: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {after-row: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1542
9998 run: its type is "number"
9999 mem: location 1542 is 1
9999 mem: location 1322 is 1148
9999 mem: storing 1 in location 1148
 105 run: {cursor-column: ("address" "number"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {after-column: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1543
9998 run: its type is "number"
9999 mem: location 1543 is 2
9999 mem: location 1323 is 1149
9999 mem: storing 2 in location 1149
 105 run: {top: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1311 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9999 mem: storing 1142 in location 1334
 105 run: {top: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- get {typing: ("address" "insert-operation"), "lookup": ()}, {after-top-of-screen: "offset"}
9999 mem: location 1336 is 1539
9999 mem: location 1539 is 1
9999 mem: location 1540 is 1
9999 mem: location 1541 is 1159
9999 mem: location 1542 is 1
9999 mem: location 1543 is 2
9999 mem: location 1544 is 1159
9999 mem: location 1545 is 1533
9999 mem: location 1546 is 1453
9999 mem: location 1547 is 1
9999 mem: location 1336 is 1539
9998 run: address to copy is 1544
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1544 is 1159
9999 mem: location 1334 is 1142
9999 mem: decrementing refcount of 1159: 37 -> 36
9999 mem: storing 1159 in location 1142
9999 mem: incrementing refcount of 1159: 36 -> 37
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}, {1: "literal", "go-render": ()}
9999 mem: location 1310 is 1008
9999 mem: location 1311 is 1140
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9998 run: result 1 is 1140
9998 run: result 2 is 1
9999 mem: decrementing refcount of 1008: 416 -> 415
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 415 -> 416
9999 mem: decrementing refcount of 1140: 42 -> 41
9999 mem: storing 1140 in location 1296
9999 mem: incrementing refcount of 1140: 41 -> 42
9999 mem: storing 1 in location 1306
 104 run: jump-unless {go-render?: "boolean"}, {: "offset"}
9999 mem: location 1306 is 1
9998 run: jump-unless fell through
 104 run: {screen: ("address" "shared" "screen")} <- editor-render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1294 is 1008
9999 mem: location 1296 is 1140
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1116
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1119
9999 mem: incrementing refcount of 1008: 416 -> 417
 105 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1120
9999 mem: incrementing refcount of 1140: 42 -> 43
 105 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1121
 105 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1120 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1122
 105 run: {row: "number"}, {column: "number"} <- render {screen: ("address" "shared" "screen")}, {editor: ("address" "shared" "editor-data")}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 28
9999 mem: allocating size 30
9999 abandon: picking up space from free-list of size 30
9999 mem: new alloc from free list: 1173
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 417 -> 418
 106 run: {editor: ("address" "shared" "editor-data")} <- next-ingredient-without-typechecking 
9999 mem: storing 1140 in location 1177
9999 mem: incrementing refcount of 1140: 43 -> 44
 106 run: jump-if {editor: ("address" "shared" "editor-data")}, {1: "offset"}
9999 mem: location 1177 is 1140
9998 run: jumping to instruction 5
 106 run: {left: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {left: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1145
9998 run: its type is "number"
9999 mem: location 1145 is 0
9999 mem: storing 0 in location 1178
 106 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1176 is 1008
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1661
9999 mem: incrementing refcount of 1008: 418 -> 419
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1661 is 1008
9998 run: jump-unless fell through
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1662
 107 run: return {height: "number"}
9999 mem: location 1662 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1179
 106 run: {right: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {right: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1146
9998 run: its type is "number"
9999 mem: location 1146 is 9
9999 mem: storing 9 in location 1180
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {top-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1142
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1142 is 1159
9999 mem: storing 1159 in location 1181
9999 mem: incrementing refcount of 1159: 37 -> 38
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 mem: storing 1159 in location 1182
9999 mem: incrementing refcount of 1159: 38 -> 39
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1661
9999 mem: incrementing refcount of 1159: 39 -> 40
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1661 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1662
9999 mem: incrementing refcount of 1434: 44 -> 45
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 40 -> 39
9999 mem: storing 1434 in location 1181
9999 mem: incrementing refcount of 1434: 45 -> 46
 106 run: {color: "number"} <- copy {7: "literal", "white": ()}
9999 mem: storing 7 in location 1183
 106 run: {row: "number"} <- copy {1: "literal", "top": ()}
9999 mem: storing 1 in location 1184
 106 run: {column: "number"} <- copy {left: "number"}
9999 mem: location 1178 is 0
9999 mem: storing 0 in location 1185
 106 run: {cursor-row: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9999 mem: storing 1148 in location 1186
 106 run: {cursor-column: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9999 mem: storing 1149 in location 1187
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {before-cursor: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1434
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1144
9999 mem: storing 1144 in location 1188
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1184 is 1
9999 mem: location 1185 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 419 -> 420
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 420 -> 419
9999 mem: storing 1008 in location 1176
9999 mem: incrementing refcount of 1008: 419 -> 420
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1434
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 0
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1533
9999 mem: location 1437 is 1159
9999 mem: location 1181 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1435
9998 run: its type is "character"
9999 mem: location 1435 is 97
9999 mem: storing 97 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 97
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 97
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 97
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 0
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 97
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 420 -> 421
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 97 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 97
  90 print-character: 97 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 10 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 248 -> 249
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 97
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 10
9999 mem: storing 1036 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1036
9999 mem: storing 1036 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 97
9999 mem: location 1231 is 1036
9999 mem: storing 97 in location 1036
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1036
9999 mem: location 1036 is 97
9999 mem: location 1037 is 7
9999 mem: location 1230 is 1036
9998 run: address to copy is 1037
9999 mem: storing 1037 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1037
9999 mem: storing 7 in location 1037
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1661
9999 mem: incrementing refcount of 1434: 46 -> 47
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1533
9999 mem: location 1437 is 1159
9999 mem: location 1661 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1533
9999 mem: storing 1533 in location 1662
9999 mem: incrementing refcount of 1533: 15 -> 16
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1533
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1533
9999 mem: decrementing refcount of 1434: 47 -> 46
9999 mem: storing 1533 in location 1181
9999 mem: incrementing refcount of 1533: 16 -> 17
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1159
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1159 in location 1661
9999 mem: incrementing refcount of 1159: 39 -> 40
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1159
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1159
9999 mem: skipping refcount at 1159
9999 mem: location 1160 is 167
9999 mem: location 1161 is 1434
9999 mem: location 1162 is 0
9999 mem: location 1661 is 1159
9999 mem: skipping refcount at 1159
9998 run: address to copy is 1161
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1161 is 1434
9999 mem: storing 1434 in location 1662
9999 mem: incrementing refcount of 1434: 46 -> 47
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1434
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1434
9999 mem: decrementing refcount of 1159: 40 -> 39
9999 mem: storing 1434 in location 1182
9999 mem: incrementing refcount of 1434: 47 -> 48
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 0
9999 mem: storing 1 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1533
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 1
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1181 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1534
9998 run: its type is "character"
9999 mem: location 1534 is 100
9999 mem: storing 100 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 100
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 100
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 100
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 100
9999 mem: storing 0 in location 1193
9990 schedule: render/editor-render/editor-event-loop/run_1006/scenario_editor-separates-undo-insert-from-undo-cursor-move
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 1
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 100
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 421 -> 422
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 100
  90 print-character: 100 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 100
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 11 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 249 -> 250
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 100
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 11
9999 mem: storing 1038 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 98
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1038
9999 mem: storing 1038 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 100
9999 mem: location 1231 is 1038
9999 mem: storing 100 in location 1038
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1038
9999 mem: location 1038 is 100
9999 mem: location 1039 is 7
9999 mem: location 1230 is 1038
9998 run: address to copy is 1039
9999 mem: storing 1039 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1039
9999 mem: storing 7 in location 1039
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1533
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1661
9999 mem: incrementing refcount of 1533: 17 -> 18
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1533
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1661 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1535
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1535 is 1453
9999 mem: storing 1453 in location 1662
9999 mem: incrementing refcount of 1453: 40 -> 41
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1533: 18 -> 17
9999 mem: storing 1453 in location 1181
9999 mem: incrementing refcount of 1453: 41 -> 42
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1434
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1434 in location 1661
9999 mem: incrementing refcount of 1434: 48 -> 49
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1434
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1434
9999 mem: skipping refcount at 1434
9999 mem: location 1435 is 97
9999 mem: location 1436 is 1533
9999 mem: location 1437 is 1159
9999 mem: location 1661 is 1434
9999 mem: skipping refcount at 1434
9998 run: address to copy is 1436
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1436 is 1533
9999 mem: storing 1533 in location 1662
9999 mem: incrementing refcount of 1533: 17 -> 18
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1533
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1533
9999 mem: decrementing refcount of 1434: 49 -> 48
9999 mem: storing 1533 in location 1182
9999 mem: incrementing refcount of 1533: 18 -> 19
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 1
9999 mem: storing 2 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1453
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 2
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 1 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 1
9998 run: jump-unless fell through
 106 run: {before-cursor: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1533
9999 mem: location 1188 is 1144
9999 mem: decrementing refcount of 1434: 48 -> 47
9999 mem: storing 1533 in location 1144
9999 mem: incrementing refcount of 1533: 19 -> 20
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1533
9999 mem: location 1181 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1454
9998 run: its type is "character"
9999 mem: location 1454 is 98
9999 mem: storing 98 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 98
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 98
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 98
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 2
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 98
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 422 -> 423
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 98 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 98
  90 print-character: 98 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 12 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 250 -> 251
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 98
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 12
9999 mem: storing 1040 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 99
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1040
9999 mem: storing 1040 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 98
9999 mem: location 1231 is 1040
9999 mem: storing 98 in location 1040
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1040
9999 mem: location 1040 is 98
9999 mem: location 1041 is 7
9999 mem: location 1230 is 1040
9998 run: address to copy is 1041
9999 mem: storing 1041 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1041
9999 mem: storing 7 in location 1041
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1661
9999 mem: incrementing refcount of 1453: 42 -> 43
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1533
9999 mem: location 1661 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1662
9999 mem: incrementing refcount of 1457: 29 -> 30
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 43 -> 42
9999 mem: storing 1457 in location 1181
9999 mem: incrementing refcount of 1457: 30 -> 31
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1533
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1533 in location 1661
9999 mem: incrementing refcount of 1533: 20 -> 21
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1533
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1533
9999 mem: skipping refcount at 1533
9999 mem: location 1534 is 100
9999 mem: location 1535 is 1453
9999 mem: location 1536 is 1434
9999 mem: location 1661 is 1533
9999 mem: skipping refcount at 1533
9998 run: address to copy is 1535
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1535 is 1453
9999 mem: storing 1453 in location 1662
9999 mem: incrementing refcount of 1453: 42 -> 43
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1453
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1453
9999 mem: decrementing refcount of 1533: 21 -> 20
9999 mem: storing 1453 in location 1182
9999 mem: incrementing refcount of 1453: 43 -> 44
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 2
9999 mem: storing 3 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 1457
9998 run: jump-unless fell through
 106 run: {off-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1179 is 5
9999 mem: storing 0 in location 1189
 106 run: jump-if {off-screen?: "boolean"}, {: "offset"}
9999 mem: location 1189 is 0
9998 run: jump-if fell through
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: jump-unless {at-cursor-row?: "boolean"}, {: "offset"}
9999 mem: location 1190 is 1
9998 run: jump-unless fell through
 106 run: {at-cursor?: "boolean"} <- equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 3
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 0 in location 1191
 106 run: jump-unless {at-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1191 is 0
9998 run: jumping to instruction 30
 106 run: {c: "character"} <- get {curr: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {value: "offset"}
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1181 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1458
9998 run: its type is "character"
9999 mem: location 1458 is 99
9999 mem: storing 99 in location 1192
 106 run: {color: "number"} <- get-color {color: "number"}, {c: "character"}
9999 mem: location 1183 is 7
9999 mem: location 1192 is 99
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 10
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: new alloc from free list: 1569
 107 run: {color: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 7 in location 1572
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1573
 107 run: {color-is-white?: "boolean"} <- equal {color: "number"}, {7: "literal", "white": ()}
9999 mem: location 1572 is 7
9999 mem: storing 1 in location 1574
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-comment?: "boolean"} <- equal {c: "character"}, {35: "literal", "#": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1575
 107 run: jump-unless {starting-comment?: "boolean"}, {: "offset"}
9999 mem: location 1575 is 0
9998 run: jumping to instruction 11
 107 run: {color-is-blue?: "boolean"} <- equal {color: "number"}, {12: "literal", "lightblue": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1576
 107 run: jump-unless {color-is-blue?: "boolean"}, {: "offset"}
9999 mem: location 1576 is 0
9998 run: jumping to instruction 20
 107 run: jump-unless {color-is-white?: "boolean"}, {: "offset"}
9999 mem: location 1574 is 1
9998 run: jump-unless fell through
 107 run: {starting-assignment?: "boolean"} <- equal {c: "character"}, {60: "literal", "<": ()}
9999 mem: location 1573 is 99
9999 mem: storing 0 in location 1578
 107 run: jump-unless {starting-assignment?: "boolean"}, {: "offset"}
9999 mem: location 1578 is 0
9998 run: jumping to instruction 27
 107 run: {color-is-red?: "boolean"} <- equal {color: "number"}, {1: "literal", "red": ()}
9999 mem: location 1572 is 7
9999 mem: storing 0 in location 1579
 107 run: jump-unless {color-is-red?: "boolean"}, {: "offset"}
9999 mem: location 1579 is 0
9998 run: jumping to instruction 35
 107 run: return {color: "number", "same-as-ingredient": "0"}
9999 mem: location 1572 is 7
9999 abandon: saving in free-list of size 12
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 7
9999 mem: storing 7 in location 1183
 106 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1192 is 99
9999 mem: storing 0 in location 1193
 106 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1193 is 0
9998 run: jumping to instruction 52
 106 run: {at-right?: "boolean"} <- equal {column: "number"}, {right: "number"}
9999 mem: location 1185 is 3
9999 mem: location 1180 is 9
9999 mem: storing 0 in location 1195
 106 run: jump-unless {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1195 is 0
9998 run: jumping to instruction 62
 106 run: print {screen: ("address" "shared" "screen")}, {c: "character"}, {color: "number"}
9999 mem: location 1176 is 1008
9999 mem: location 1192 is 99
9999 mem: location 1183 is 7
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 423 -> 424
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 99 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 0 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1215
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 99
  90 print-character: 99 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 13 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 251 -> 252
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 99
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 13
9999 mem: storing 1042 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 32
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1042
9999 mem: storing 1042 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 99
9999 mem: location 1231 is 1042
9999 mem: storing 99 in location 1042
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1042
9999 mem: location 1042 is 99
9999 mem: location 1043 is 7
9999 mem: location 1230 is 1042
9998 run: address to copy is 1043
9999 mem: storing 1043 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1043
9999 mem: storing 7 in location 1043
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {curr: ("address" "shared" "duplex-list" "character")} <- next_2 {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 1457
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1457 in location 1661
9999 mem: incrementing refcount of 1457: 31 -> 32
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1457
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1457
9999 mem: skipping refcount at 1457
9999 mem: location 1458 is 99
9999 mem: location 1459 is 0
9999 mem: location 1460 is 1453
9999 mem: location 1661 is 1457
9999 mem: skipping refcount at 1457
9998 run: address to copy is 1459
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1459 is 0
9999 mem: storing 0 in location 1662
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1457: 32 -> 31
9999 mem: storing 0 in location 1181
 106 run: {prev: ("address" "shared" "duplex-list" "character")} <- next_2 {prev: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1182 is 1453
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 107 run: {in: ("address" "shared" "duplex-list" "character")} <- next-ingredient-without-typechecking 
9999 mem: storing 1453 in location 1661
9999 mem: incrementing refcount of 1453: 44 -> 45
 107 run: jump-if {in: ("address" "shared" "duplex-list" "character")}, {1: "offset"}
9999 mem: location 1661 is 1453
9998 run: jumping to instruction 4
 107 run: {result: ("address" "shared" "duplex-list" "character")} <- get {in: ("address" "shared" "duplex-list" "character"), "lookup": ()}, {next: "offset"}
9999 mem: location 1661 is 1453
9999 mem: skipping refcount at 1453
9999 mem: location 1454 is 98
9999 mem: location 1455 is 1457
9999 mem: location 1456 is 1533
9999 mem: location 1661 is 1453
9999 mem: skipping refcount at 1453
9998 run: address to copy is 1455
9998 run: its type is ("address" "shared" "duplex-list" "character")
9999 mem: location 1455 is 1457
9999 mem: storing 1457 in location 1662
9999 mem: incrementing refcount of 1457: 31 -> 32
 107 run: reply {result: ("address" "shared" "duplex-list" "character"), "contained-in": "in"}
9999 mem: location 1662 is 1457
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1457
9999 mem: decrementing refcount of 1453: 45 -> 44
9999 mem: storing 1457 in location 1182
9999 mem: incrementing refcount of 1457: 32 -> 33
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1185 is 3
9999 mem: storing 4 in location 1185
 106 run: jump {: "offset"}
9998 run: jumping to instruction 20
 106 run: jump-unless {curr: ("address" "shared" "duplex-list" "character")}, {: "offset"}
9999 mem: location 1181 is 0
9998 run: jumping to instruction 68
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom-of-screen: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1143
9999 mem: storing 1143 in location 1197
 106 run: {bottom-of-screen: ("address" "address" "shared" "duplex-list" "character"), "lookup": ()} <- copy {curr: ("address" "shared" "duplex-list" "character")}
9999 mem: location 1181 is 0
9999 mem: location 1197 is 1143
9999 mem: storing 0 in location 1143
 106 run: {at-cursor-row?: "boolean"} <- equal {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1190
 106 run: {cursor-outside-line?: "boolean"} <- lesser-or-equal {column: "number"}, {cursor-column: ("address" "number"), "lookup": ()}
9999 mem: location 1185 is 4
9999 mem: location 1187 is 1149
9999 mem: location 1149 is 2
9999 mem: storing 0 in location 1198
 106 run: {before-cursor-on-same-line?: "boolean"} <- and {at-cursor-row?: "boolean"}, {cursor-outside-line?: "boolean"}
9999 mem: location 1190 is 1
9999 mem: location 1198 is 0
9999 mem: storing 0 in location 1199
 106 run: {above-cursor-row?: "boolean"} <- lesser-than {row: "number"}, {cursor-row: ("address" "number"), "lookup": ()}
9999 mem: location 1184 is 1
9999 mem: location 1186 is 1148
9999 mem: location 1148 is 1
9999 mem: storing 0 in location 1200
 106 run: {before-cursor?: "boolean"} <- or {before-cursor-on-same-line?: "boolean"}, {above-cursor-row?: "boolean"}
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: storing 0 in location 1201
 106 run: jump-unless {before-cursor?: "boolean"}, {: "offset"}
9999 mem: location 1201 is 0
9998 run: jumping to instruction 81
 106 run: {bottom: ("address" "number")} <- get-address {editor: ("address" "shared" "editor-data"), "lookup": ()}, {bottom: "offset"}
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1177 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1147
9999 mem: storing 1147 in location 1202
 106 run: {bottom: ("address" "number"), "lookup": ()} <- copy {row: "number"}
9999 mem: location 1184 is 1
9999 mem: location 1202 is 1147
9999 mem: storing 1 in location 1147
 106 run: return {row: "number"}, {column: "number"}, {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1", "same-as-ingredient": "1"}
9999 mem: location 1184 is 1
9999 mem: location 1185 is 4
9999 mem: location 1176 is 1008
9999 mem: location 1177 is 1140
9999 abandon: saving in free-list of size 30
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1
9998 run: result 1 is 4
9999 mem: storing 1 in location 1123
9999 mem: storing 4 in location 1124
 105 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1124 is 4
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 424 -> 425
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1167
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 106 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 425 -> 426
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 14 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 252 -> 253
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 14
9999 mem: storing 1044 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1044
9999 mem: storing 1044 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1044
9999 mem: storing 32 in location 1044
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1044
9999 mem: location 1044 is 32
9999 mem: location 1045 is 7
9999 mem: location 1230 is 1044
9998 run: address to copy is 1045
9999 mem: storing 1045 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1045
9999 mem: storing 7 in location 1045
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 426 -> 425
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 425 -> 426
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 426 -> 427
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 15 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 253 -> 254
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 15
9999 mem: storing 1046 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1046
9999 mem: storing 1046 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1046
9999 mem: storing 32 in location 1046
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1046
9999 mem: location 1046 is 32
9999 mem: location 1047 is 7
9999 mem: location 1230 is 1046
9998 run: address to copy is 1047
9999 mem: storing 1047 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1047
9999 mem: storing 7 in location 1047
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 427 -> 426
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 426 -> 427
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 427 -> 428
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 16 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 254 -> 255
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 16
9999 mem: storing 1048 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1048
9999 mem: storing 1048 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1048
9999 mem: storing 32 in location 1048
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1048
9999 mem: location 1048 is 32
9999 mem: location 1049 is 7
9999 mem: location 1230 is 1048
9998 run: address to copy is 1049
9999 mem: storing 1049 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1049
9999 mem: storing 7 in location 1049
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 428 -> 427
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 427 -> 428
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 428 -> 429
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
9990 schedule: print/clear-line-delimited/editor-render/editor-event-loop/run_1006/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 17 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 255 -> 256
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 17
9999 mem: storing 1050 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1050
9999 mem: storing 1050 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1050
9999 mem: storing 32 in location 1050
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1050
9999 mem: location 1050 is 32
9999 mem: location 1051 is 7
9999 mem: location 1230 is 1050
9998 run: address to copy is 1051
9999 mem: storing 1051 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1051
9999 mem: storing 7 in location 1051
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 429 -> 428
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 428 -> 429
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 429 -> 430
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 18 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 256 -> 257
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 18
9999 mem: storing 1052 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1052
9999 mem: storing 1052 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1052
9999 mem: storing 32 in location 1052
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1052
9999 mem: location 1052 is 32
9999 mem: location 1053 is 7
9999 mem: location 1230 is 1052
9998 run: address to copy is 1053
9999 mem: storing 1053 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1053
9999 mem: storing 7 in location 1053
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 430 -> 429
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 429 -> 430
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 106 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 430 -> 431
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 1
9999 mem: storing 1 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 1
9999 mem: location 1217 is 10
9999 mem: storing 10 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 10
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 19 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 257 -> 258
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 19
9999 mem: storing 1054 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1054
9999 mem: storing 1054 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1054
9999 mem: storing 32 in location 1054
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1054
9999 mem: location 1054 is 32
9999 mem: location 1055 is 7
9999 mem: location 1230 is 1054
9998 run: address to copy is 1055
9999 mem: storing 1055 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1055
9999 mem: storing 7 in location 1055
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 431 -> 430
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 430 -> 431
 106 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 106 run: jump {: "offset"}
9998 run: jumping to instruction 11
 106 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 106 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 1
9999 mem: storing 2 in location 1123
 105 run: draw-horizontal {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}, {9480: "literal", "horizontal-dotted": ()}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 2
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 431 -> 432
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1239
 106 run: {x: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1240
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1241
 106 run: {style: "character"}, {style-found?: "boolean"} <- next-ingredient 
9999 mem: storing 9480 in location 1242
9999 mem: storing 1 in location 1243
 106 run: jump-if {style-found?: "boolean"}, {: "offset"}
9999 mem: location 1243 is 1
9998 run: jumping to instruction 9
 106 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1244
9999 mem: storing 0 in location 1245
 106 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1245 is 0
9998 run: jump-if fell through
 106 run: {color: "number"} <- copy {245: "literal", "grey": ()}
9999 mem: storing 245 in location 1244
 106 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1246
9999 mem: storing 0 in location 1247
 106 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1247 is 0
9998 run: jump-if fell through
 106 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1246
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {x: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1239 is 2
9999 mem: location 1240 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 432 -> 433
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1004
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 2
9999 mem: location 1006 is 1011
9999 mem: storing 2 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 0
9999 mem: location 1007 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 433 -> 432
9999 mem: storing 1008 in location 1238
9999 mem: incrementing refcount of 1008: 432 -> 433
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 0
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 433 -> 434
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 258 -> 259
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 20
9999 mem: storing 1056 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1056
9999 mem: storing 1056 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1056
9999 mem: storing 9480 in location 1056
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1056
9999 mem: location 1056 is 9480
9999 mem: location 1057 is 245
9999 mem: location 1230 is 1056
9998 run: address to copy is 1057
9999 mem: storing 1057 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1057
9999 mem: storing 245 in location 1057
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 0
9999 mem: storing 1 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 1
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 434 -> 435
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 259 -> 260
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 21
9999 mem: storing 1058 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1058
9999 mem: storing 1058 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1058
9999 mem: storing 9480 in location 1058
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1058
9999 mem: location 1058 is 9480
9999 mem: location 1059 is 245
9999 mem: location 1230 is 1058
9998 run: address to copy is 1059
9999 mem: storing 1059 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1059
9999 mem: storing 245 in location 1059
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 1
9999 mem: storing 2 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 2
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 435 -> 436
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 260 -> 261
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 22
9999 mem: storing 1060 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1060
9999 mem: storing 9480 in location 1060
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1060
9999 mem: location 1060 is 9480
9999 mem: location 1061 is 245
9999 mem: location 1230 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1061
9999 mem: storing 245 in location 1061
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 2
9999 mem: storing 3 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 3
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 436 -> 437
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 261 -> 262
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 23
9999 mem: storing 1062 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1062
9999 mem: storing 9480 in location 1062
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1062
9999 mem: location 1062 is 9480
9999 mem: location 1063 is 245
9999 mem: location 1230 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1063
9999 mem: storing 245 in location 1063
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 3
9999 mem: storing 4 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 4
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 437 -> 438
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 24 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 262 -> 263
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 24
9999 mem: storing 1064 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1064
9999 mem: storing 9480 in location 1064
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1064
9999 mem: location 1064 is 9480
9999 mem: location 1065 is 245
9999 mem: location 1230 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1065
9999 mem: storing 245 in location 1065
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 4
9999 mem: storing 5 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 5
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 438 -> 439
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 25 in location 1225
9990 schedule: print/draw-horizontal/editor-render/editor-event-loop/run_1006/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 263 -> 264
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 25
9999 mem: storing 1066 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1066
9999 mem: storing 9480 in location 1066
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1066
9999 mem: location 1066 is 9480
9999 mem: location 1067 is 245
9999 mem: location 1230 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1067
9999 mem: storing 245 in location 1067
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 5
9999 mem: storing 6 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 6
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 439 -> 440
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 26 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 264 -> 265
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 26
9999 mem: storing 1068 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1068
9999 mem: storing 1068 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1068
9999 mem: storing 9480 in location 1068
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1068
9999 mem: location 1068 is 9480
9999 mem: location 1069 is 245
9999 mem: location 1230 is 1068
9998 run: address to copy is 1069
9999 mem: storing 1069 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1069
9999 mem: storing 245 in location 1069
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 6
9999 mem: storing 7 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 7
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 440 -> 441
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 27 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 265 -> 266
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 27
9999 mem: storing 1070 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1070
9999 mem: storing 1070 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1070
9999 mem: storing 9480 in location 1070
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1070
9999 mem: location 1070 is 9480
9999 mem: location 1071 is 245
9999 mem: location 1230 is 1070
9998 run: address to copy is 1071
9999 mem: storing 1071 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1071
9999 mem: storing 245 in location 1071
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 7
9999 mem: storing 8 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 8
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 441 -> 442
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 28 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 266 -> 267
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 28
9999 mem: storing 1072 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1072
9999 mem: storing 1072 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1072
9999 mem: storing 9480 in location 1072
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1072
9999 mem: location 1072 is 9480
9999 mem: location 1073 is 245
9999 mem: location 1230 is 1072
9998 run: address to copy is 1073
9999 mem: storing 1073 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1073
9999 mem: storing 245 in location 1073
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 107 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 8
9999 mem: storing 9 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 9
9999 mem: location 1241 is 9
9999 mem: storing 1 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 1
9998 run: jump-unless fell through
 106 run: print {screen: ("address" "shared" "screen")}, {style: "character"}, {color: "number"}, {bg-color: "number"}
9999 mem: location 1238 is 1008
9999 mem: location 1242 is 9480
9999 mem: location 1244 is 245
9999 mem: location 1246 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 442 -> 443
 107 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 9480 in location 1212
 107 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 245 in location 1213
9999 mem: storing 1 in location 1214
 107 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 107 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 9480
  90 print-character: 9480 
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 107 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 107 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 107 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 2
9999 mem: storing 2 in location 1219
 107 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 2
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 107 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 107 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 107 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 107 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 107 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1222
 107 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 107 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 2
9999 mem: location 1217 is 10
9999 mem: storing 20 in location 1225
 107 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 20
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 29 in location 1225
 107 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 267 -> 268
 107 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 107 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 9480
9999 mem: storing 0 in location 1228
 107 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 107 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 29
9999 mem: storing 1074 in location 1230
 107 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1074
9999 mem: storing 1074 in location 1231
 107 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 9480
9999 mem: location 1231 is 1074
9999 mem: storing 9480 in location 1074
 107 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1074
9999 mem: location 1074 is 9480
9999 mem: location 1075 is 245
9999 mem: location 1230 is 1074
9998 run: address to copy is 1075
9999 mem: storing 1075 in location 1232
 107 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 245
9999 mem: location 1232 is 1075
9999 mem: storing 245 in location 1075
 107 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 107 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 107 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: {x: "number"} <- add {x: "number"}, {1: "literal"}
9999 mem: location 1240 is 9
9999 mem: storing 10 in location 1240
 106 run: jump {: "offset"}
9998 run: jumping to instruction 22
 106 run: {continue?: "boolean"} <- lesser-or-equal {x: "number"}, {right: "number"}
9999 mem: location 1240 is 10
9999 mem: location 1241 is 9
9999 mem: storing 0 in location 1248
 106 run: jump-unless {continue?: "boolean"}, {: "offset"}
9999 mem: location 1248 is 0
9998 run: jumping to instruction 27
 106 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1238 is 1008
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 5
 105 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1123 is 2
9999 mem: storing 3 in location 1123
 105 run: clear-screen-from {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1119 is 1008
9999 mem: location 1123 is 3
9999 mem: location 1121 is 0
9999 mem: location 1121 is 0
9999 mem: location 1122 is 9
9999 trace: incrementing callstack depth to 5
 106 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 106 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 443 -> 444
 106 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1004
 106 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1005
 106 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1006
 106 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1007
 106 run: jump-if {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jumping to instruction 10
 106 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {column: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1005 is 0
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 444 -> 445
 107 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1253
 107 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 107 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 107 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 107 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 3
9999 mem: location 1255 is 1011
9999 mem: storing 3 in location 1011
 107 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 107 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 107 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 445 -> 444
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 444 -> 445
 106 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {column: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1005 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 445 -> 446
 107 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 107 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 107 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 107 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 107 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 446 -> 447
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 30 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 268 -> 269
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 30
9999 mem: storing 1076 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1076
9999 mem: storing 1076 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1076
9999 mem: storing 32 in location 1076
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1076
9999 mem: location 1076 is 32
9999 mem: location 1077 is 7
9999 mem: location 1230 is 1076
9998 run: address to copy is 1077
9999 mem: storing 1077 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1077
9999 mem: storing 7 in location 1077
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 447 -> 446
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 446 -> 447
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 447 -> 448
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 31 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 269 -> 270
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 31
9999 mem: storing 1078 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1078
9999 mem: storing 1078 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1078
9999 mem: storing 32 in location 1078
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1078
9999 mem: location 1078 is 32
9999 mem: location 1079 is 7
9999 mem: location 1230 is 1078
9998 run: address to copy is 1079
9999 mem: storing 1079 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1079
9999 mem: storing 7 in location 1079
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 448 -> 447
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 447 -> 448
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 448 -> 449
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 32 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 270 -> 271
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 32
9999 mem: storing 1080 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1080
9999 mem: storing 1080 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1080
9999 mem: storing 32 in location 1080
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1080
9999 mem: location 1080 is 32
9999 mem: location 1081 is 7
9999 mem: location 1230 is 1080
9998 run: address to copy is 1081
9999 mem: storing 1081 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1081
9999 mem: storing 7 in location 1081
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 449 -> 448
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 448 -> 449
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 449 -> 450
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 33 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 271 -> 272
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 33
9999 mem: storing 1082 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1082
9999 mem: storing 1082 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1082
9999 mem: storing 32 in location 1082
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1082
9999 mem: location 1082 is 32
9999 mem: location 1083 is 7
9999 mem: location 1230 is 1082
9998 run: address to copy is 1083
9999 mem: storing 1083 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1083
9999 mem: storing 7 in location 1083
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 450 -> 449
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 449 -> 450
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
9990 schedule: clear-line-delimited/clear-screen-from/editor-render/editor-event-loop/run_1006/scenario_editor-separates-undo-insert-from-undo-cursor-move
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 450 -> 451
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 34 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 272 -> 273
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 34
9999 mem: storing 1084 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1084
9999 mem: storing 1084 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1084
9999 mem: storing 32 in location 1084
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1084
9999 mem: location 1084 is 32
9999 mem: location 1085 is 7
9999 mem: location 1230 is 1084
9998 run: address to copy is 1085
9999 mem: storing 1085 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1085
9999 mem: storing 7 in location 1085
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 451 -> 450
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 450 -> 451
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 451 -> 452
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 35 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 273 -> 274
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 35
9999 mem: storing 1086 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1086
9999 mem: storing 1086 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1086
9999 mem: storing 32 in location 1086
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1086
9999 mem: location 1086 is 32
9999 mem: location 1087 is 7
9999 mem: location 1230 is 1086
9998 run: address to copy is 1087
9999 mem: storing 1087 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1087
9999 mem: storing 7 in location 1087
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 452 -> 451
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 451 -> 452
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 452 -> 453
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 36 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 274 -> 275
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 36
9999 mem: storing 1088 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1088
9999 mem: storing 1088 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1088
9999 mem: storing 32 in location 1088
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1088
9999 mem: location 1088 is 32
9999 mem: location 1089 is 7
9999 mem: location 1230 is 1088
9998 run: address to copy is 1089
9999 mem: storing 1089 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1089
9999 mem: storing 7 in location 1089
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 453 -> 452
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 452 -> 453
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 453 -> 454
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 37 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 275 -> 276
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 37
9999 mem: storing 1090 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1090
9999 mem: storing 1090 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1090
9999 mem: storing 32 in location 1090
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1090
9999 mem: location 1090 is 32
9999 mem: location 1091 is 7
9999 mem: location 1230 is 1090
9998 run: address to copy is 1091
9999 mem: storing 1091 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1091
9999 mem: storing 7 in location 1091
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 454 -> 453
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 453 -> 454
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 454 -> 455
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 38 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 276 -> 277
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 38
9999 mem: storing 1092 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1092
9999 mem: storing 1092 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1092
9999 mem: storing 32 in location 1092
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1092
9999 mem: location 1092 is 32
9999 mem: location 1093 is 7
9999 mem: location 1230 is 1092
9998 run: address to copy is 1093
9999 mem: storing 1093 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1093
9999 mem: storing 7 in location 1093
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 108 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 455 -> 454
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 454 -> 455
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 455 -> 456
 108 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 108 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 108 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 108 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 108 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 108 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 3
9999 mem: storing 3 in location 1219
 108 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 3
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 108 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 108 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 108 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 108 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 108 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 108 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 108 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 3
9999 mem: location 1217 is 10
9999 mem: storing 30 in location 1225
 108 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 30
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 39 in location 1225
 108 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 277 -> 278
 108 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 108 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 108 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 108 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 39
9999 mem: storing 1094 in location 1230
 108 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1094
9999 mem: storing 1094 in location 1231
 108 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1094
9999 mem: storing 32 in location 1094
 108 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1094
9999 mem: location 1094 is 32
9999 mem: location 1095 is 7
9999 mem: location 1230 is 1094
9998 run: address to copy is 1095
9999 mem: storing 1095 in location 1232
 108 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1095
9999 mem: storing 7 in location 1095
 108 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 108 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 108 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 456 -> 455
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 455 -> 456
 107 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 107 run: jump {: "offset"}
9998 run: jumping to instruction 11
 107 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 107 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 6
 106 run: clear-rest-of-screen {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}, {right: "number"}
9999 mem: location 1003 is 1008
9999 mem: location 1004 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 9
9999 trace: incrementing callstack depth to 6
 107 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
9999 mem: new alloc from free list: 1257
 107 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 456 -> 457
 107 run: {row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1261
 107 run: {left: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1262
 107 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1263
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 3
9999 mem: storing 4 in location 1261
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 457 -> 458
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 3
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 458 -> 457
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 457 -> 458
 107 run: {screen-height: "number"} <- screen-height {screen: ("address" "shared" "screen")}
9999 mem: location 1260 is 1008
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1661
9999 mem: incrementing refcount of 1008: 458 -> 459
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1661 is 1008
9998 run: jump-unless fell through
 108 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1661 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1662
 108 run: return {height: "number"}
9999 mem: location 1662 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 5
9999 mem: storing 5 in location 1264
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 4
9999 mem: location 1264 is 5
9999 mem: storing 0 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 0
9998 run: jump-if fell through
 107 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {row: "number"}, {left: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1261 is 4
9999 mem: location 1262 is 0
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1249
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1252
9999 mem: incrementing refcount of 1008: 459 -> 460
 108 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 4 in location 1253
 108 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1254
 108 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1252 is 1008
9998 run: jump-unless fell through
 108 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1255
 108 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1253 is 4
9999 mem: location 1255 is 1011
9999 mem: storing 4 in location 1011
 108 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1252 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1256
 108 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1254 is 0
9999 mem: location 1256 is 1012
9999 mem: storing 0 in location 1012
 108 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1252 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 460 -> 459
9999 mem: storing 1008 in location 1260
9999 mem: incrementing refcount of 1008: 459 -> 460
 107 run: clear-line-delimited {screen: ("address" "shared" "screen")}, {left: "number"}, {right: "number"}
9999 mem: location 1260 is 1008
9999 mem: location 1262 is 0
9999 mem: location 1263 is 9
9999 trace: incrementing callstack depth to 7
 108 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 8
9999 mem: allocating size 10
9999 abandon: picking up space from free-list of size 10
9999 mem: new alloc from free list: 1163
 108 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 460 -> 461
 108 run: {column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1167
 108 run: {right: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 9 in location 1168
 108 run: {space: "character"} <- copy {32: "literal", "space": ()}
9999 mem: storing 32 in location 1169
 108 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1170
9999 mem: storing 0 in location 1171
 108 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1171 is 0
9998 run: jump-if fell through
 108 run: {bg-color: "number"} <- copy {0: "literal", "black": ()}
9999 mem: storing 0 in location 1170
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 0
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 461 -> 462
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 40 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 278 -> 279
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 40
9999 mem: storing 1096 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1096
9999 mem: storing 1096 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1096
9999 mem: storing 32 in location 1096
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1096
9999 mem: location 1096 is 32
9999 mem: location 1097 is 7
9999 mem: location 1230 is 1096
9998 run: address to copy is 1097
9999 mem: storing 1097 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1097
9999 mem: storing 7 in location 1097
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1221 is 1012
9999 mem: storing 1 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 462 -> 461
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 461 -> 462
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 1
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 462 -> 463
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 41 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 279 -> 280
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 41
9999 mem: storing 1098 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1098
9999 mem: storing 1098 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1098
9999 mem: storing 32 in location 1098
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1098
9999 mem: location 1098 is 32
9999 mem: location 1099 is 7
9999 mem: location 1230 is 1098
9998 run: address to copy is 1099
9999 mem: storing 1099 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1099
9999 mem: storing 7 in location 1099
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1221 is 1012
9999 mem: storing 2 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 463 -> 462
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 462 -> 463
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 1
9999 mem: storing 2 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 2
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 463 -> 464
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
9990 schedule: print/clear-line-delimited/clear-rest-of-screen/clear-screen-from/editor-render/editor-event-loop/run_1006/scenario_editor-separates-undo-insert-from-undo-cursor-move
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 42 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 280 -> 281
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 42
9999 mem: storing 1100 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1100
9999 mem: storing 1100 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1100
9999 mem: storing 32 in location 1100
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1100
9999 mem: location 1100 is 32
9999 mem: location 1101 is 7
9999 mem: location 1230 is 1100
9998 run: address to copy is 1101
9999 mem: storing 1101 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1101
9999 mem: storing 7 in location 1101
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1221 is 1012
9999 mem: storing 3 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 464 -> 463
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 463 -> 464
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 2
9999 mem: storing 3 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 3
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 464 -> 465
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 43 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 281 -> 282
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 43
9999 mem: storing 1102 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1102
9999 mem: storing 1102 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1102
9999 mem: storing 32 in location 1102
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1102
9999 mem: location 1102 is 32
9999 mem: location 1103 is 7
9999 mem: location 1230 is 1102
9998 run: address to copy is 1103
9999 mem: storing 1103 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1103
9999 mem: storing 7 in location 1103
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1221 is 1012
9999 mem: storing 4 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 465 -> 464
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 464 -> 465
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 3
9999 mem: storing 4 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 4
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 465 -> 466
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: storing 44 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 4
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 282 -> 283
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 44
9999 mem: storing 1104 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1104
9999 mem: storing 1104 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1104
9999 mem: storing 32 in location 1104
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1104
9999 mem: location 1104 is 32
9999 mem: location 1105 is 7
9999 mem: location 1230 is 1104
9998 run: address to copy is 1105
9999 mem: storing 1105 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1105
9999 mem: storing 7 in location 1105
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 4
9999 mem: location 1221 is 1012
9999 mem: storing 5 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 466 -> 465
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 465 -> 466
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 4
9999 mem: storing 5 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 5
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 466 -> 467
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: storing 45 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 5
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 283 -> 284
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 45
9999 mem: storing 1106 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1106
9999 mem: storing 1106 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1106
9999 mem: storing 32 in location 1106
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1106
9999 mem: location 1106 is 32
9999 mem: location 1107 is 7
9999 mem: location 1230 is 1106
9998 run: address to copy is 1107
9999 mem: storing 1107 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1107
9999 mem: storing 7 in location 1107
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 5
9999 mem: location 1221 is 1012
9999 mem: storing 6 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 467 -> 466
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 466 -> 467
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 5
9999 mem: storing 6 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 6
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 467 -> 468
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: storing 46 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 6
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 284 -> 285
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 46
9999 mem: storing 1108 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1108
9999 mem: storing 1108 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1108
9999 mem: storing 32 in location 1108
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1108
9999 mem: location 1108 is 32
9999 mem: location 1109 is 7
9999 mem: location 1230 is 1108
9998 run: address to copy is 1109
9999 mem: storing 1109 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1109
9999 mem: storing 7 in location 1109
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 6
9999 mem: location 1221 is 1012
9999 mem: storing 7 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 468 -> 467
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 467 -> 468
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 6
9999 mem: storing 7 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 7
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 468 -> 469
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: storing 47 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 7
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 285 -> 286
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 47
9999 mem: storing 1110 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1110
9999 mem: storing 1110 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1110
9999 mem: storing 32 in location 1110
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1110
9999 mem: location 1110 is 32
9999 mem: location 1111 is 7
9999 mem: location 1230 is 1110
9998 run: address to copy is 1111
9999 mem: storing 1111 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1111
9999 mem: storing 7 in location 1111
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 7
9999 mem: location 1221 is 1012
9999 mem: storing 8 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 469 -> 468
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 468 -> 469
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 7
9999 mem: storing 8 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 8
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 469 -> 470
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: storing 48 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 8
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 286 -> 287
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 48
9999 mem: storing 1112 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1112
9999 mem: storing 1112 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1112
9999 mem: storing 32 in location 1112
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1112
9999 mem: location 1112 is 32
9999 mem: location 1113 is 7
9999 mem: location 1230 is 1112
9998 run: address to copy is 1113
9999 mem: storing 1113 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1113
9999 mem: storing 7 in location 1113
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1233 is 9
9999 mem: storing 0 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 0
9998 run: jump-if fell through
 109 run: {column: ("address" "number"), "lookup": ()} <- add {column: ("address" "number"), "lookup": ()}, {1: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 8
9999 mem: location 1221 is 1012
9999 mem: storing 9 in location 1012
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 470 -> 469
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 469 -> 470
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 8
9999 mem: storing 9 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 9
9999 mem: location 1168 is 9
9999 mem: storing 0 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 0
9998 run: jump-if fell through
 108 run: {screen: ("address" "shared" "screen")} <- print {screen: ("address" "shared" "screen")}, {space: "character"}, {7: "literal", "white": ()}, {bg-color: "number"}
9999 mem: location 1166 is 1008
9999 mem: location 1169 is 32
9999 mem: location 1170 is 0
9999 trace: incrementing callstack depth to 8
 109 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
9999 mem: new alloc from free list: 1208
 109 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1211
9999 mem: incrementing refcount of 1008: 470 -> 471
 109 run: {c: "character"} <- next-ingredient-without-typechecking 
9999 mem: storing 32 in location 1212
 109 run: {color: "number"}, {color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 7 in location 1213
9999 mem: storing 1 in location 1214
 109 run: jump-if {color-found?: "boolean"}, {: "offset"}
9999 mem: location 1214 is 1
9998 run: jumping to instruction 7
 109 run: {bg-color: "number"}, {bg-color-found?: "boolean"} <- next-ingredient 
9999 mem: storing 0 in location 1215
9999 mem: storing 1 in location 1216
 109 run: jump-if {bg-color-found?: "boolean"}, {: "offset"}
9999 mem: location 1216 is 1
9998 run: jumping to instruction 12
 109 run: trace {90: "literal"}, {"print-character": "literal-string"}, {c: "character"}
9999 mem: location 1212 is 32
  90 print-character: 32 
 109 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1211 is 1008
9998 run: jump-unless fell through
 109 run: {width: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-columns: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1010
9998 run: its type is "number"
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1217
 109 run: {height: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {num-rows: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1009
9998 run: its type is "number"
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1218
 109 run: {row: "number"} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9998 run: its type is "number"
9999 mem: location 1011 is 4
9999 mem: storing 4 in location 1219
 109 run: {legal?: "boolean"} <- greater-or-equal {row: "number"}, {0: "literal"}
9999 mem: location 1219 is 4
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 22
 109 run: {legal?: "boolean"} <- lesser-than {row: "number"}, {height: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1218 is 5
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 25
 109 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1221
 109 run: {legal?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {0: "literal"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 29
 109 run: {legal?: "boolean"} <- lesser-than {column: ("address" "number"), "lookup": ()}, {width: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1220
 109 run: jump-if {legal?: "boolean"}, {1: "offset"}
9999 mem: location 1220 is 1
9998 run: jumping to instruction 32
 109 run: {newline?: "boolean"} <- equal {c: "character"}, {10: "literal", "newline": ()}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1222
 109 run: jump-unless {newline?: "boolean"}, {: "offset"}
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 109 run: {index: "number"} <- multiply {row: "number"}, {width: "number"}
9999 mem: location 1219 is 4
9999 mem: location 1217 is 10
9999 mem: storing 40 in location 1225
 109 run: {index: "number"} <- add {index: "number"}, {column: ("address" "number"), "lookup": ()}
9999 mem: location 1225 is 40
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: storing 49 in location 1225
 109 run: {buf: ("address" "shared" "array" "screen-cell")} <- get {screen: ("address" "shared" "screen"), "lookup": ()}, {data: "offset"}
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1211 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1013
9998 run: its type is ("address" "shared" "array" "screen-cell")
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1226
9999 mem: incrementing refcount of 1014: 287 -> 288
 109 run: {len: "number"} <- length {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: storing 50 in location 1227
 109 run: {backspace?: "boolean"} <- equal {c: "character"}, {8: "literal"}
9999 mem: location 1212 is 32
9999 mem: storing 0 in location 1228
 109 run: jump-unless {backspace?: "boolean"}, {: "offset"}
9999 mem: location 1228 is 0
9998 run: jumping to instruction 64
 109 run: {cursor: ("address" "screen-cell")} <- index-address {buf: ("address" "shared" "array" "screen-cell"), "lookup": ()}, {index: "number"}
9999 mem: location 1226 is 1014
9999 mem: skipping refcount at 1014
9999 mem: location 1225 is 49
9999 mem: storing 1114 in location 1230
 109 run: {cursor-contents: ("address" "character")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {contents: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1114
9999 mem: storing 1114 in location 1231
 109 run: {cursor-contents: ("address" "character"), "lookup": ()} <- copy {c: "character"}
9999 mem: location 1212 is 32
9999 mem: location 1231 is 1114
9999 mem: storing 32 in location 1114
 109 run: {cursor-color: ("address" "number")} <- get-address {cursor: ("address" "screen-cell"), "lookup": ()}, {color: "offset"}
9999 mem: location 1230 is 1114
9999 mem: location 1114 is 32
9999 mem: location 1115 is 7
9999 mem: location 1230 is 1114
9998 run: address to copy is 1115
9999 mem: storing 1115 in location 1232
 109 run: {cursor-color: ("address" "number"), "lookup": ()} <- copy {color: "number"}
9999 mem: location 1213 is 7
9999 mem: location 1232 is 1115
9999 mem: storing 7 in location 1115
 109 run: {right: "number"} <- subtract {width: "number"}, {1: "literal"}
9999 mem: location 1217 is 10
9999 mem: storing 9 in location 1233
 109 run: {at-right?: "boolean"} <- greater-or-equal {column: ("address" "number"), "lookup": ()}, {right: "number"}
9999 mem: location 1221 is 1012
9999 mem: location 1012 is 9
9999 mem: location 1233 is 9
9999 mem: storing 1 in location 1234
 109 run: jump-if {at-right?: "boolean"}, {: "offset"}
9999 mem: location 1234 is 1
9998 run: jumping to instruction 75
 109 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1211 is 1008
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 471 -> 470
9999 mem: storing 1008 in location 1166
9999 mem: incrementing refcount of 1008: 470 -> 471
 108 run: {column: "number"} <- add {column: "number"}, {1: "literal"}
9999 mem: location 1167 is 9
9999 mem: storing 10 in location 1167
 108 run: jump {: "offset"}
9998 run: jumping to instruction 11
 108 run: {done?: "boolean"} <- greater-than {column: "number"}, {right: "number"}
9999 mem: location 1167 is 10
9999 mem: location 1168 is 9
9999 mem: storing 1 in location 1172
 108 run: jump-if {done?: "boolean"}, {: "offset"}
9999 mem: location 1172 is 1
9998 run: jumping to instruction 16
 108 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1166 is 1008
9999 abandon: saving in free-list of size 10
9999 trace: reply: decrementing callstack depth from 7
 107 run: {row: "number"} <- add {row: "number"}, {1: "literal"}
9999 mem: location 1261 is 4
9999 mem: storing 5 in location 1261
 107 run: jump {: "offset"}
9998 run: jumping to instruction 9
 107 run: {at-bottom-of-screen?: "boolean"} <- greater-or-equal {row: "number"}, {screen-height: "number"}
9999 mem: location 1261 is 5
9999 mem: location 1264 is 5
9999 mem: storing 1 in location 1265
 107 run: jump-if {at-bottom-of-screen?: "boolean"}, {: "offset"}
9999 mem: location 1265 is 1
9998 run: jumping to instruction 15
 107 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1260 is 1008
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0", "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
 105 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "1"}
9999 mem: location 1119 is 1008
9999 mem: location 1120 is 1140
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 471 -> 470
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 470 -> 471
 104 run: jump {: "offset"}
9998 run: jumping to instruction 5
 104 run: {cursor-row: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 1297
 104 run: {cursor-column: "number"} <- get {editor: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 1296 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 1298
 104 run: {screen: ("address" "shared" "screen")} <- move-cursor {screen: ("address" "shared" "screen")}, {cursor-row: "number"}, {cursor-column: "number"}
9999 mem: location 1294 is 1008
9999 mem: location 1297 is 1
9999 mem: location 1298 is 2
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
9999 mem: new alloc from free list: 1000
 105 run: {screen: ("address" "shared" "screen")} <- next-ingredient-without-typechecking 
9999 mem: storing 1008 in location 1003
9999 mem: incrementing refcount of 1008: 471 -> 472
 105 run: {new-row: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1004
 105 run: {new-column: "number"} <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1005
 105 run: jump-unless {screen: ("address" "shared" "screen")}, {: "offset"}
9999 mem: location 1003 is 1008
9998 run: jump-unless fell through
 105 run: {row: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 4
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1006
 105 run: {row: ("address" "number"), "lookup": ()} <- copy {new-row: "number"}
9999 mem: location 1004 is 1
9999 mem: location 1006 is 1011
9999 mem: storing 1 in location 1011
 105 run: {column: ("address" "number")} <- get-address {screen: ("address" "shared" "screen"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 1
9999 mem: location 1012 is 9
9999 mem: location 1013 is 1014
9999 mem: location 1003 is 1008
9999 mem: skipping refcount at 1008
9998 run: address to copy is 1012
9999 mem: storing 1012 in location 1007
 105 run: {column: ("address" "number"), "lookup": ()} <- copy {new-column: "number"}
9999 mem: location 1005 is 2
9999 mem: location 1007 is 1012
9999 mem: storing 2 in location 1012
 105 run: return {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}
9999 mem: location 1003 is 1008
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1008
9999 mem: decrementing refcount of 1008: 472 -> 471
9999 mem: storing 1008 in location 1294
9999 mem: incrementing refcount of 1008: 471 -> 472
 104 run: {e: "event"}, {console: ("address" "shared" "console")}, {found?: "boolean"}, {quit?: "boolean"} <- read-event {console: ("address" "shared" "console")}
9999 mem: location 1295 is 1655
9999 trace: incrementing callstack depth to 4
 105 run: {default-space: ("address" "shared" "array" "location")} <- new {location: "type"}, {number-of-locals: "literal"}
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
9999 mem: new alloc from free list: 1235
 105 run: {console: ("address" "shared" "console")} <- next-ingredient-without-typechecking 
9999 mem: storing 1655 in location 1238
9999 mem: incrementing refcount of 1655: 2 -> 3
 105 run: jump-unless {console: ("address" "shared" "console")}, {: "offset"}
9999 mem: location 1238 is 1655
9998 run: jump-unless fell through
 105 run: {current-event-index: ("address" "number")} <- get-address {console: ("address" "shared" "console"), "lookup": ()}, {current-event-index: "offset"}
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9999 mem: location 1656 is 1
9999 mem: location 1657 is 1649
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9998 run: address to copy is 1656
9999 mem: storing 1656 in location 1239
 105 run: {buf: ("address" "shared" "array" "event")} <- get {console: ("address" "shared" "console"), "lookup": ()}, {events: "offset"}
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9999 mem: location 1656 is 1
9999 mem: location 1657 is 1649
9999 mem: location 1238 is 1655
9999 mem: skipping refcount at 1655
9998 run: address to copy is 1657
9998 run: its type is ("address" "shared" "array" "event")
9999 mem: location 1657 is 1649
9999 mem: storing 1649 in location 1240
9999 mem: incrementing refcount of 1649: 2 -> 3
 105 run: {max: "number"} <- length {buf: ("address" "shared" "array" "event"), "lookup": ()}
9999 mem: location 1240 is 1649
9999 mem: skipping refcount at 1649
9999 mem: storing 1 in location 1241
 105 run: {done?: "boolean"} <- greater-or-equal {current-event-index: ("address" "number"), "lookup": ()}, {max: "number"}
9999 mem: location 1239 is 1656
9999 mem: location 1656 is 1
9999 mem: location 1241 is 1
9999 mem: storing 1 in location 1242
 105 run: jump-unless {done?: "boolean"}, {: "offset"}
9999 mem: location 1242 is 1
9998 run: jump-unless fell through
 105 run: {dummy: ("address" "shared" "event")} <- new {event: "type"}
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: new alloc from free list: 1658
9999 mem: storing 1658 in location 1243
9999 mem: incrementing refcount of 1658: 0 -> 1
 105 run: return {dummy: ("address" "shared" "event"), "lookup": ()}, {console: ("address" "shared" "console"), "same-as-ingredient": "0", "same-as-ingredient": "0"}, {1: "literal", "found": ()}, {1: "literal", "quit": ()}
9999 mem: location 1243 is 1658
9999 mem: skipping refcount at 1658
9999 mem: location 1659 is 0
9999 mem: location 1660 is 0
9999 mem: location 1661 is 0
9999 mem: location 1662 is 0
9999 mem: location 1238 is 1655
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1655
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
9999 mem: storing 0 in location 1301
9999 mem: storing 0 in location 1302
9999 mem: decrementing refcount of 1655: 3 -> 2
9999 mem: storing 1655 in location 1295
9999 mem: incrementing refcount of 1655: 2 -> 3
9999 mem: storing 1 in location 1303
9999 mem: storing 1 in location 1304
 104 run: jump-unless {found?: "boolean"}, {: "offset"}
9999 mem: location 1303 is 1
9998 run: jump-unless fell through
 104 run: jump-if {quit?: "boolean"}, {: "offset"}
9999 mem: location 1304 is 1
9998 run: jumping to instruction 28
 104 run: reply {screen: ("address" "shared" "screen"), "same-as-ingredient": "0"}, {console: ("address" "shared" "console"), "same-as-ingredient": "1"}, {editor: ("address" "shared" "editor-data"), "same-as-ingredient": "2"}
9999 mem: location 1294 is 1008
9999 mem: location 1295 is 1655
9999 mem: location 1296 is 1140
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: {3: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-row: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1148
9998 run: its type is "number"
9999 mem: location 1148 is 1
9999 mem: storing 1 in location 3
 103 run: {4: "number"} <- get {2: ("address" "shared" "editor-data"), "lookup": ()}, {cursor-column: "offset"}
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9999 mem: location 1141 is 1159
9999 mem: location 1142 is 1159
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1533
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 1
9999 mem: location 1148 is 1
9999 mem: location 1149 is 2
9999 mem: location 1150 is 1
9999 mem: location 1151 is 1663
9999 mem: location 1152 is 0
9999 mem: location 2 is 1140
9999 mem: skipping refcount at 1140
9998 run: address to copy is 1149
9998 run: its type is "number"
9999 mem: location 1149 is 2
9999 mem: storing 2 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain {"\n    .          .\n    .adbc      .\n    .┈┈┈┈┈┈┈┈┈┈.\n    .          .\n  ": "literal-string"}
 102 run: memory-should-contain {"\n    3 <- 1\n    4 <- 2\n  ": "literal-string"}
9999 run: checking location 3
9999 run: checking location 4
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
